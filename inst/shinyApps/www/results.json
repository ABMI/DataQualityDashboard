{"startTimestamp":["2019-08-20 10:27:47"],"endTimestamp":["2019-08-20 10:51:11"],"executionTime":["23.391815 mins"],"CheckResults":[{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"15.170243 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.OBSERVATION_PERIOD \r\n\t\tON person.person_id = OBSERVATION_PERIOD.person_id\r\n\t\tWHERE OBSERVATION_PERIOD.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the OBSERVATION_PERIOD table","CDM_TABLE_NAME":"OBSERVATION_PERIOD","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":1,"FAILED":0},{"NUM_VIOLATED_ROWS":18,"PCT_VIOLATED_ROWS":0.0019,"EXECUTION_TIME":"4.859118 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE \r\n\t\tON person.person_id = VISIT_OCCURRENCE.person_id\r\n\t\tWHERE VISIT_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the VISIT_OCCURRENCE table","CDM_TABLE_NAME":"VISIT_OCCURRENCE","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":2,"FAILED":1},{"NUM_VIOLATED_ROWS":33,"PCT_VIOLATED_ROWS":0.0034,"EXECUTION_TIME":"2.618083 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.CONDITION_OCCURRENCE \r\n\t\tON person.person_id = CONDITION_OCCURRENCE.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the CONDITION_OCCURRENCE table","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":3,"FAILED":1},{"NUM_VIOLATED_ROWS":590,"PCT_VIOLATED_ROWS":0.0616,"EXECUTION_TIME":"2.880047 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.DRUG_EXPOSURE \r\n\t\tON person.person_id = DRUG_EXPOSURE.person_id\r\n\t\tWHERE DRUG_EXPOSURE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the DRUG_EXPOSURE table","CDM_TABLE_NAME":"DRUG_EXPOSURE","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":4,"FAILED":1},{"NUM_VIOLATED_ROWS":6573,"PCT_VIOLATED_ROWS":0.6867,"EXECUTION_TIME":"2.646035 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.PROCEDURE_OCCURRENCE \r\n\t\tON person.person_id = PROCEDURE_OCCURRENCE.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the PROCEDURE_OCCURRENCE table","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":5,"FAILED":1},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.418058 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.DEVICE_EXPOSURE \r\n\t\tON person.person_id = DEVICE_EXPOSURE.person_id\r\n\t\tWHERE DEVICE_EXPOSURE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the DEVICE_EXPOSURE table","CDM_TABLE_NAME":"DEVICE_EXPOSURE","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":6,"FAILED":1},{"NUM_VIOLATED_ROWS":24,"PCT_VIOLATED_ROWS":0.0025,"EXECUTION_TIME":"2.719039 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.MEASUREMENT \r\n\t\tON person.person_id = MEASUREMENT.person_id\r\n\t\tWHERE MEASUREMENT.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the MEASUREMENT table","CDM_TABLE_NAME":"MEASUREMENT","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":7,"FAILED":1},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.465029 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL \r\n\t\tON person.person_id = VISIT_DETAIL.person_id\r\n\t\tWHERE VISIT_DETAIL.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the VISIT_DETAIL table","CDM_TABLE_NAME":"VISIT_DETAIL","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":8,"FAILED":1},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.112047 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.NOTE \r\n\t\tON person.person_id = NOTE.person_id\r\n\t\tWHERE NOTE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the NOTE table","CDM_TABLE_NAME":"NOTE","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":9,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.983072 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.OBSERVATION \r\n\t\tON person.person_id = OBSERVATION.person_id\r\n\t\tWHERE OBSERVATION.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the OBSERVATION table","CDM_TABLE_NAME":"OBSERVATION","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":10,"FAILED":0},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.270015 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.SPECIMEN \r\n\t\tON person.person_id = SPECIMEN.person_id\r\n\t\tWHERE SPECIMEN.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the SPECIMEN table","CDM_TABLE_NAME":"SPECIMEN","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":11,"FAILED":1},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.790041 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.PAYER_PLAN_PERIOD \r\n\t\tON person.person_id = PAYER_PLAN_PERIOD.person_id\r\n\t\tWHERE PAYER_PLAN_PERIOD.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the PAYER_PLAN_PERIOD table","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":12,"FAILED":1},{"NUM_VIOLATED_ROWS":590,"PCT_VIOLATED_ROWS":0.0616,"EXECUTION_TIME":"2.753035 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.DRUG_ERA \r\n\t\tON person.person_id = DRUG_ERA.person_id\r\n\t\tWHERE DRUG_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the DRUG_ERA table","CDM_TABLE_NAME":"DRUG_ERA","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":13,"FAILED":1},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.930054 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.DOSE_ERA \r\n\t\tON person.person_id = DOSE_ERA.person_id\r\n\t\tWHERE DOSE_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the DOSE_ERA table","CDM_TABLE_NAME":"DOSE_ERA","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":14,"FAILED":1},{"NUM_VIOLATED_ROWS":33,"PCT_VIOLATED_ROWS":0.0034,"EXECUTION_TIME":"3.133032 secs","QUERY_TEXT":"\r\n/*********\r\nTable Level:  \r\nMEASURE_PERSON_COMPLETENESS\r\nDetermine what #/% of persons have at least one record in the cdmTable\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.person_id) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT person.* \r\n\t\tFROM cdm.person\r\n\t\tLEFT JOIN cdm.CONDITION_ERA \r\n\t\tON person.person_id = CONDITION_ERA.person_id\r\n\t\tWHERE CONDITION_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.person\r\n) denominator\r\n;","CHECK_NAME":"measurePersonCompleteness","CHECK_LEVEL":"TABLE","CHECK_DESCRIPTION":"The number and percent of persons in the CDM that do not have at least one record in the CONDITION_ERA table","CDM_TABLE_NAME":"CONDITION_ERA","SQL_FILE":"table_person_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"","checkId":15,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"12.152204 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":16,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.494062 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"gender_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":17,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.509027 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = year_of_birth\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"year_of_birth\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":18,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.460058 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = month_of_birth\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"month_of_birth\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"month_of_birth","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":19,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.104036 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = day_of_birth\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"day_of_birth\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"day_of_birth","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":20,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.517060 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = birth_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"birth_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"birth_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":21,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.643037 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"race_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":22,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.376073 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"ethnicity_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":23,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.613032 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = location_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"location_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":24,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.466056 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = provider_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":25,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.523060 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = care_site_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"care_site_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":26,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.451028 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":27,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.433042 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"gender_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":28,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.479026 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"gender_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":29,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.004053 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"race_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":30,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.361055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"race_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":31,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.067057 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"ethnicity_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":32,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.239070 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"ethnicity_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PERSON\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":33,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.620033 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"observation_period_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":34,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.789070 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":35,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.372059 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"observation_period_start_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":36,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.880046 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"observation_period_end_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":37,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.630055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"period_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":38,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.014090 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":39,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.096060 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":40,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.362090 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":41,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.919050 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_start_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":42,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.162011 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_start_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":43,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.627119 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_end_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":44,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.090080 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_end_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":45,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.864030 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":46,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.117083 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = provider_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":47,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.562053 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = care_site_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"care_site_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":48,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.358072 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":49,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.946052 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":50,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.654039 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"admitting_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":51,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.085060 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"admitting_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":52,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.450042 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"discharge_to_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":53,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.356074 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"discharge_to_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":54,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.254129 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = preceding_visit_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"preceding_visit_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"preceding_visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":55,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.782078 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":56,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.127079 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":57,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.500087 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":58,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.497002 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_start_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":59,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.989055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_start_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":60,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.198094 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_end_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":61,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.134063 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_end_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":62,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.799044 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":63,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.838079 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_status_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":64,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.473078 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = stop_reason\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"stop_reason\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"stop_reason","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":65,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.584009 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = provider_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":66,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.167046 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":67,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.265070 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":68,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.508975 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":69,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.498058 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":70,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.108025 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_status_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":71,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.613065 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_exposure_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":72,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.809093 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":73,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.945084 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":74,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.783061 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_exposure_start_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":75,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.498080 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_exposure_start_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":76,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.150001 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_exposure_end_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":77,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.862049 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_exposure_end_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":78,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.032665 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = verbatim_end_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"verbatim_end_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"verbatim_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":79,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.003054 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":80,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.625025 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = stop_reason\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"stop_reason\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"stop_reason","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":81,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.424022 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = refills\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"refills\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"refills","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":82,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.343053 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = quantity\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"quantity\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":83,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.659037 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = days_supply\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"days_supply\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"days_supply","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":84,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.483061 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = sig\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"sig\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"sig","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":85,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.644063 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"route_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":86,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.511031 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = lot_number\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"lot_number\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"lot_number","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":87,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.682067 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = provider_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":88,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.677927 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":89,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.576010 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":90,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.850046 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":91,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.425062 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":92,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.671018 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"route_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":93,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.956050 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = dose_unit_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"dose_unit_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"dose_unit_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":94,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.533065 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"procedure_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":95,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.021054 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":96,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.862026 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"procedure_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":97,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.436027 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"procedure_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":98,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.483066 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"procedure_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":99,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.727042 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"procedure_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":100,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.528685 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"modifier_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":101,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.238052 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = quantity\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"quantity\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":102,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.331051 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = provider_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":103,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.634012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":104,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.507058 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":105,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.934047 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"procedure_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":106,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.844055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"procedure_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":107,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.167180 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"modifier_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":108,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.643055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"device_exposure_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":109,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.826049 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":110,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.764043 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"device_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":111,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.622066 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"device_exposure_start_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":112,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.518051 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"device_exposure_start_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":113,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.867133 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"device_exposure_end_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":114,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.782041 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"device_exposure_end_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":115,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.550076 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"device_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":116,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.601009 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = unique_device_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"unique_device_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"unique_device_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":117,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.798046 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = quantity\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"quantity\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":118,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.902048 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = provider_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":119,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.111057 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":120,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.504061 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":121,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.491029 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"device_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":122,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.009060 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"device_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DEVICE_EXPOSURE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":123,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.432060 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"measurement_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":124,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.235069 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":125,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.790049 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"measurement_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":126,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.201053 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"measurement_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":127,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.142059 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"measurement_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":128,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.216057 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_time\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"measurement_time\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_time","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":129,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.047072 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"measurement_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":130,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.754059 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = operator_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"operator_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"operator_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":131,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.979042 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_as_number\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"value_as_number\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_number","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":132,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.517057 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_as_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"value_as_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":133,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.902068 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"unit_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":134,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.335111 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = range_low\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"range_low\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"range_low","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":135,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.627077 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = range_high\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"range_high\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"range_high","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":136,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.655087 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = provider_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":137,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.144048 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":138,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.337095 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_detail_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":139,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.328093 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"measurement_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":140,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.455320 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"measurement_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":141,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.059072 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"unit_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":142,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.790061 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"value_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.MEASUREMENT\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":143,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.036078 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":144,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.177087 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":145,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.551064 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":146,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.773087 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_start_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":147,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.029055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_start_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":148,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.902123 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_end_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":149,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.308060 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_end_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":150,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.110080 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":151,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.373029 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = provider_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":152,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.118049 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = care_site_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"care_site_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":153,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.328089 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":154,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.622135 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":155,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.962976 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"admitting_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":156,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.528083 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"admitting_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":157,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.525060 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"discharge_to_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":158,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.546077 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"discharge_to_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":159,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.076051 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = preceding_visit_detail_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"preceding_visit_detail_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"preceding_visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":160,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.948074 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_parent_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_parent_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_parent_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":161,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.567040 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.VISIT_DETAIL\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":162,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.195043 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":163,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196190 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":164,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.191025 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":165,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.588085 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":166,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.291030 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":167,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199011 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_class_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_class_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":168,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.343072 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_title\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_title\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_title","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":169,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.727059 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_text\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_text\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_text","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":170,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.627051 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = encoding_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"encoding_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":171,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.465077 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = language_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"language_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":172,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.243029 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = provider_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":173,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.449079 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":174,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187001 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_detail_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":175,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":176,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198978 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_nlp_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":177,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":178,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.313073 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = section_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"section_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"section_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":179,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.827007 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = snippet\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"snippet\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"snippet","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":180,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.725060 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = offset\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"offset\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"offset","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":181,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.919065 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = lexical_variant\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"lexical_variant\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"lexical_variant","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":182,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_nlp_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":183,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"note_nlp_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":184,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.122082 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_system\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"nlp_system\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_system","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":185,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201978 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"nlp_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":186,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.654086 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"nlp_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":187,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.066077 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = term_exists\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"term_exists\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_exists","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":188,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.952107 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = term_temporal\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"term_temporal\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_temporal","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":189,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.887059 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = term_modifiers\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"term_modifiers\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.NOTE_NLP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_modifiers","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":190,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.195977 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"observation_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":191,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.256015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":192,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.362022 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"observation_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":193,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.717060 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"observation_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":194,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.364094 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"observation_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":195,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.826093 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"observation_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":196,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.160046 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = value_as_number\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"value_as_number\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_number","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":197,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.622085 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = value_as_string\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"value_as_string\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_string","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":198,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.346988 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = value_as_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"value_as_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":199,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.315021 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"qualifier_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":200,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.286486 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"unit_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":201,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.624583 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = provider_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":202,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.491045 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_occurrence_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_occurrence_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":203,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.188012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_detail_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"visit_detail_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":204,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281016 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"observation_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":205,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217979 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"observation_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":206,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.230016 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"unit_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":207,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.417074 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"qualifier_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.OBSERVATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":208,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.176026 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"specimen_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":209,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.454038 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":210,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199008 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"specimen_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":211,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198979 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"specimen_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":212,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.286064 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"specimen_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":213,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.866069 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_datetime\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"specimen_datetime\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":214,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.236014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = quantity\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"quantity\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":215,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.570010 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"unit_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":216,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.908087 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"anatomic_site_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":217,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.168005 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"disease_status_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":218,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.885072 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_source_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"specimen_source_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_source_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":219,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.862068 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"specimen_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":220,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.246066 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"unit_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":221,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.390066 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"anatomic_site_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":222,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.025074 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"disease_status_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.SPECIMEN\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":223,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.546996 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_1\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"domain_concept_id_1\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.FACT_RELATIONSHIP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the FACT_RELATIONSHIP table as expected based on the specification. ","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":224,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.245015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_1\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"fact_id_1\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.FACT_RELATIONSHIP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the FACT_RELATIONSHIP table as expected based on the specification. ","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_1","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":225,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_2\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"domain_concept_id_2\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.FACT_RELATIONSHIP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the FACT_RELATIONSHIP table as expected based on the specification. ","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":226,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202957 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_2\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"fact_id_2\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.FACT_RELATIONSHIP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the FACT_RELATIONSHIP table as expected based on the specification. ","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_2","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":227,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.190977 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = relationship_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"relationship_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.FACT_RELATIONSHIP\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the FACT_RELATIONSHIP table as expected based on the specification. ","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":228,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.178104 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"location_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.LOCATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":229,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.091079 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = address_1\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"address_1\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.LOCATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"address_1","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":230,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.895069 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = address_2\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"address_2\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.LOCATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"address_2","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":231,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.956071 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = city\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"city\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.LOCATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"city","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":232,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.521047 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = state\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"state\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.LOCATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"state","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":233,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.913068 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = zip\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"zip\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.LOCATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"zip","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":234,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.622086 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = county\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"county\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.LOCATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"county","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":235,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.822063 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"location_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.LOCATION\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":236,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.544044 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"care_site_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CARE_SITE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":237,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.264089 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_name\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"care_site_name\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CARE_SITE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_name","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":238,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.264065 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"place_of_service_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CARE_SITE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":239,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.309032 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = location_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"location_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CARE_SITE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":240,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.738079 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"care_site_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CARE_SITE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":241,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.867101 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"place_of_service_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CARE_SITE\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":242,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.783059 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":243,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.415039 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_name\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_name\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_name","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":244,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.297084 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = npi\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"npi\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"npi","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":245,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.811059 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = dea\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"dea\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"dea","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":246,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.249066 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"specialty_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":247,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.152086 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = care_site_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"care_site_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":248,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.214026 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = year_of_birth\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"year_of_birth\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":249,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.869066 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"gender_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":250,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.292064 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"provider_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":251,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.429077 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"specialty_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":252,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.148049 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"specialty_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":253,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.119978 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"gender_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":254,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.537083 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"gender_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PROVIDER\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":255,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.195013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"payer_plan_period_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":256,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.319606 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":257,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_start_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"payer_plan_period_start_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":258,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.229012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_end_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"payer_plan_period_end_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":259,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.558083 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"payer_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":260,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.852066 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"payer_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":261,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.380070 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"payer_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":262,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.206028 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"plan_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":263,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.967056 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"plan_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":264,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.185003 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"plan_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":265,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.616811 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"sponsor_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":266,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.463078 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"sponsor_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":267,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"sponsor_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":268,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.181726 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = family_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"family_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"family_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":269,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.204010 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"stop_reason_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":270,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.235014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"stop_reason_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":271,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203043 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"stop_reason_source_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.PAYER_PLAN_PERIOD\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":272,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.327055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"cost_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":273,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.687061 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_event_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"cost_event_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_event_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":274,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.243044 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_domain_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"cost_domain_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_domain_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":275,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.730073 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"cost_type_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":276,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.918086 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = currency_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"currency_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"currency_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":277,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.680034 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = total_charge\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"total_charge\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_charge","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":278,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.338038 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = total_cost\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"total_cost\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_cost","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":279,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.365055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = total_paid\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"total_paid\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_paid","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":280,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.851049 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_by_payer\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"paid_by_payer\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_payer","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":281,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.828046 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_by_patient\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"paid_by_patient\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_patient","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":282,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.040039 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_patient_copay\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"paid_patient_copay\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_copay","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":283,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.808043 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_patient_coinsurance\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"paid_patient_coinsurance\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_coinsurance","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":284,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.292051 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_patient_deductible\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"paid_patient_deductible\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_deductible","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":285,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.533029 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_by_primary\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"paid_by_primary\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_primary","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":286,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.549932 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_ingredient_cost\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"paid_ingredient_cost\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_ingredient_cost","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":287,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.607069 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_dispensing_fee\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"paid_dispensing_fee\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_dispensing_fee","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":288,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.717071 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = payer_plan_period_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"payer_plan_period_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":289,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.636084 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = amount_allowed\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"amount_allowed\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"amount_allowed","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":290,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.091058 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = revenue_code_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"revenue_code_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":291,"FAILED":0},{"QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = revenue_code_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"revenue_code_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: column \"revenue_code_source_value\" does not exist in cost;\nAn error report has been created at  output/Flatiron/errors/FIELD_cdmField_COST_revenue_code_source_value.txt","checkId":292,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.750039 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = drg_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drg_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":293,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.930052 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = drg_source_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drg_source_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.COST\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":294,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.251118 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_era_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":295,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.673033 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":296,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.249068 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":297,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.044056 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_era_start_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":298,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.991055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_end_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_era_end_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":299,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.093061 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_exposure_count\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_exposure_count\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_exposure_count","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":300,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.023056 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = gap_days\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"gap_days\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DRUG_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"gap_days","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":301,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.236978 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"dose_era_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DOSE_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DOSE_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":302,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198009 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DOSE_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DOSE_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":303,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.257016 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"drug_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DOSE_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DOSE_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":304,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196031 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"unit_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DOSE_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DOSE_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":305,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.290018 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_value\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"dose_value\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DOSE_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DOSE_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":306,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.268068 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"dose_era_start_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DOSE_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DOSE_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":307,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.092059 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_end_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"dose_era_end_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.DOSE_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DOSE_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":308,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202023 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_era_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":309,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.747058 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = person_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"person_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":310,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.871031 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_concept_id\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":311,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.888050 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_era_start_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":312,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.106072 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_end_date\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_era_end_date\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":313,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.977053 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD LEVEL check:\r\nCDM_FIELD - verify the field exists\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_occurrence_count\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n  select num_violated_rows from\r\n  (\r\n    select \r\n      case when count(\"condition_occurrence_count\") = 0 then 0\r\n      else 0\r\n    end as num_violated_rows\r\n    from cdm.CONDITION_ERA\r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT 1 as num_rows\r\n) denominator\r\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_ERA table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_occurrence_count","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":314,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"15.104240 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.person_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PERSON that is considered not nullable.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":315,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.315035 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.gender_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_concept_id of the PERSON that is considered not nullable.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":316,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.299955 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = year_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.year_of_birth IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the year_of_birth of the PERSON that is considered not nullable.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":317,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.318017 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.race_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_concept_id of the PERSON that is considered not nullable.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":318,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.283015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.ethnicity_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_concept_id of the PERSON that is considered not nullable.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":319,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.309986 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.observation_period_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_id of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":320,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.327017 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":321,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.373019 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.observation_period_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_start_date of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":322,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.348000 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.observation_period_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_end_date of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":323,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.256003 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.period_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the period_type_concept_id of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":324,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.393019 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":325,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.244987 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":326,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.259996 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_concept_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":327,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.352010 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_start_date of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":328,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.372020 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_end_date of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":329,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.265012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_type_concept_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":330,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.707042 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_occurrence_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_occurrence_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":331,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.person_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":332,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.225015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_concept_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":333,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.233998 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_start_date of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":334,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.212013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_type_concept_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":335,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.333015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_exposure_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":336,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.230981 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.person_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":337,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":338,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.409026 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_exposure_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_start_date of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":339,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.243979 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_exposure_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_end_date of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":340,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.242011 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_type_concept_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":341,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.384020 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_occurrence_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":342,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.290014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":343,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_concept_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":344,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250021 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_date of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":345,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.244978 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_type_concept_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":346,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.918050 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_exposure_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":347,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239977 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.person_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":348,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193023 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_concept_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":349,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.243027 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_exposure_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_start_date of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":350,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.256997 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_type_concept_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":351,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.401022 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":352,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.244979 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":353,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248045 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_concept_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":354,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.220014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_date of the MEASUREMENT that is considered not nullable.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":355,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.288017 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_type_concept_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":356,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.276985 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":357,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.365019 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":358,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.245017 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_concept_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":359,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.261986 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_start_date of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":360,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.229014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_end_date of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":361,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.271014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_type_concept_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":362,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.224980 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_occurrence_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":363,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.297014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":364,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.person_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":365,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.252015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_date' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_date of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":366,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_type_concept_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":367,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217007 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_class_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_class_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_class_concept_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":368,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.268053 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_text\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_text' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_text IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_text of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_text","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":369,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.219985 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = encoding_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.encoding_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the encoding_concept_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":370,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.241017 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = language_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.language_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the language_concept_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":371,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.519032 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.note_nlp_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_id of the NOTE_NLP that is considered not nullable.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":372,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.232011 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.note_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE_NLP that is considered not nullable.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":373,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199010 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = lexical_variant\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.lexical_variant' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.lexical_variant IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the lexical_variant of the NOTE_NLP that is considered not nullable.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"lexical_variant","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":374,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.313019 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_date' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.nlp_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_date of the NOTE_NLP that is considered not nullable.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":375,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.223978 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_id of the OBSERVATION that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":376,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216987 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":377,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.304011 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_concept_id of the OBSERVATION that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":378,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234967 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_date of the OBSERVATION that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":379,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227031 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_type_concept_id of the OBSERVATION that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":380,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.242015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_id of the SPECIMEN that is considered not nullable.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":381,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.255012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the SPECIMEN that is considered not nullable.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":382,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.189974 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_concept_id of the SPECIMEN that is considered not nullable.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":383,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.316015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_type_concept_id of the SPECIMEN that is considered not nullable.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":384,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_date of the SPECIMEN that is considered not nullable.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":385,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.303057 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE FACT_RELATIONSHIP.domain_concept_id_1 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_1 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":386,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198957 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE FACT_RELATIONSHIP.fact_id_1 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_1 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_1","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":387,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.222013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE FACT_RELATIONSHIP.domain_concept_id_2 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_2 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":388,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.214303 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE FACT_RELATIONSHIP.fact_id_2 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_2 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_2","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":389,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.232971 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = relationship_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE FACT_RELATIONSHIP.relationship_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the relationship_concept_id of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":390,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.586066 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.location_id' AS violating_field, LOCATION.* \r\n\t\t  FROM cdm.LOCATION\r\n\t\t WHERE LOCATION.location_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the LOCATION that is considered not nullable.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":391,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.344053 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE CARE_SITE.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the CARE_SITE that is considered not nullable.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":392,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.821081 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE PROVIDER.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PROVIDER that is considered not nullable.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":393,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.240012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE PAYER_PLAN_PERIOD.payer_plan_period_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_id of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":394,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246903 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE PAYER_PLAN_PERIOD.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":395,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.305015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_start_date' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE PAYER_PLAN_PERIOD.payer_plan_period_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_start_date of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":396,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.242979 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_end_date' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE PAYER_PLAN_PERIOD.payer_plan_period_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_end_date of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":397,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.659125 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_id of the COST that is considered not nullable.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":398,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234980 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_event_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_event_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_event_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_event_id of the COST that is considered not nullable.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_event_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":399,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_domain_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_domain_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_domain_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_domain_id of the COST that is considered not nullable.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_domain_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":400,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213025 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_type_concept_id of the COST that is considered not nullable.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":401,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.279017 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_id of the DRUG_ERA that is considered not nullable.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":402,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.318014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.person_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DRUG_ERA that is considered not nullable.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":403,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.292015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DRUG_ERA that is considered not nullable.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":404,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_start_date of the DRUG_ERA that is considered not nullable.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":405,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.242980 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_end_date' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_end_date of the DRUG_ERA that is considered not nullable.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":406,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210997 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.dose_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_id of the DOSE_ERA that is considered not nullable.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":407,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.204013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.person_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DOSE_ERA that is considered not nullable.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":408,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.229996 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DOSE_ERA that is considered not nullable.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":409,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210976 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.unit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the DOSE_ERA that is considered not nullable.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":410,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226011 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_value' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.dose_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_value of the DOSE_ERA that is considered not nullable.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_value","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":411,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213962 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.dose_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_start_date of the DOSE_ERA that is considered not nullable.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":412,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.262013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_end_date' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.dose_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_end_date of the DOSE_ERA that is considered not nullable.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":413,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.303996 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_id of the CONDITION_ERA that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":414,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.229011 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.person_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the CONDITION_ERA that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":415,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.260014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_concept_id of the CONDITION_ERA that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":416,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.229980 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_start_date of the CONDITION_ERA that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":417,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.257028 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_end_date' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_end_date of the CONDITION_ERA that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":418,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.568034 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.person_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":419,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.473058 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.gender_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the gender_concept_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":420,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.649039 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = year_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.year_of_birth, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the year_of_birth in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":421,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.411060 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = month_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.month_of_birth, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the month_of_birth in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"month_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":422,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.552031 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = day_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.day_of_birth, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the day_of_birth in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"day_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":423,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.953035 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.race_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the race_concept_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":424,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.595087 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.ethnicity_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the ethnicity_concept_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":425,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.513077 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.location_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.location_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the location_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":426,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.691075 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.provider_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":427,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.070056 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.care_site_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.care_site_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":428,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.311074 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION_PERIOD.observation_period_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_period_id in the OBSERVATION_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":429,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.879048 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION_PERIOD.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the OBSERVATION_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":430,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.297070 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":431,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.912065 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":432,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.429044 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.visit_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":433,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.207068 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.provider_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":434,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.515035 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.care_site_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.care_site_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":435,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.221065 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.visit_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_source_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":436,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.936061 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.admitting_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the admitting_source_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":437,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.364072 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.discharge_to_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the discharge_to_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":438,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.646047 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = preceding_visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.preceding_visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.preceding_visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the preceding_visit_occurrence_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"preceding_visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":439,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.360055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.condition_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":440,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.332035 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.condition_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_type_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":441,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.408560 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.condition_status_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_status_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":442,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.187565 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.provider_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":443,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.089055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_occurrence_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":444,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.605087 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_detail_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":445,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.438036 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.condition_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_source_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":446,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.279071 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.drug_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":447,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.312071 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.drug_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_type_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":448,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.620036 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = refills\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.refills, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the refills in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"refills","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":449,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.709037 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = days_supply\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.days_supply, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the days_supply in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"days_supply","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":450,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.386055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.route_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the route_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":451,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.472027 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.provider_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":452,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.945004 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_occurrence_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":453,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.713040 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_detail_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":454,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.456062 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.drug_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_source_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":455,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.185077 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.procedure_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_occurrence_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":456,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.403045 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":457,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.612069 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.procedure_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":458,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.822044 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.procedure_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_type_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":459,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.512039 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.modifier_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the modifier_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":460,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.405062 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.quantity' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.quantity, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the quantity in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":461,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.033057 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.provider_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":462,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.092065 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":463,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.348037 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_detail_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":464,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.442069 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.procedure_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_source_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":465,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.586039 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.device_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the device_concept_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":466,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.594045 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.device_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the device_type_concept_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":467,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.376073 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.quantity' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.quantity, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the quantity in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":468,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.650034 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.provider_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":469,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.129061 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_occurrence_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":470,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.306072 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_detail_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":471,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.859959 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.device_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the device_source_concept_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":472,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.648091 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.measurement_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":473,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.931084 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":474,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.144091 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.measurement_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":475,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.723090 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.measurement_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_type_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":476,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.109095 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = operator_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.operator_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the operator_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"operator_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":477,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.290084 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_as_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.value_as_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.value_as_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the value_as_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":478,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.594087 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.unit_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the unit_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":479,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.903049 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.provider_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":480,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.160116 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_occurrence_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":481,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.090065 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_detail_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":482,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.076077 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.measurement_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_source_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":483,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.942053 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE REGEXP_INSTR(VISIT_DETAIL.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":484,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.837027 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE REGEXP_INSTR(VISIT_DETAIL.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":485,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.104057 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE REGEXP_INSTR(VISIT_DETAIL.visit_detail_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_concept_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":486,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.863049 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.provider_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE REGEXP_INSTR(VISIT_DETAIL.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":487,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.686036 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.care_site_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE REGEXP_INSTR(VISIT_DETAIL.care_site_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":488,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237984 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.note_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":489,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.245893 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.person_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":490,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.702024 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.note_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_type_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":491,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228029 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_class_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.note_class_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_class_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":492,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.155047 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = encoding_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.encoding_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the encoding_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":493,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.299070 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = language_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.language_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the language_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":494,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.219013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.provider_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":495,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.771044 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_occurrence_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":496,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.241016 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_detail_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":497,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.027039 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE REGEXP_INSTR(NOTE_NLP.note_nlp_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_nlp_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":498,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.717041 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE REGEXP_INSTR(NOTE_NLP.note_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":499,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.934052 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = section_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE REGEXP_INSTR(NOTE_NLP.section_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the section_concept_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"section_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":500,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.595052 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE REGEXP_INSTR(NOTE_NLP.note_nlp_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_nlp_concept_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":501,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.763036 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_source_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE REGEXP_INSTR(NOTE_NLP.note_nlp_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_nlp_source_concept_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":502,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207981 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.observation_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":503,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.285018 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":504,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.397015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.observation_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":505,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.196029 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.observation_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_type_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":506,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.796005 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.qualifier_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the qualifier_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":507,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.360035 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.unit_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the unit_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":508,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.680048 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.provider_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":509,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.005056 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_occurrence_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":510,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.418076 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_detail_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":511,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.820044 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.observation_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_source_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":512,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.164054 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.specimen_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specimen_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":513,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.424986 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":514,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201001 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.specimen_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specimen_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":515,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.982055 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.specimen_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specimen_type_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":516,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.792058 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.unit_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the unit_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":517,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.901062 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.anatomic_site_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the anatomic_site_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":518,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.271017 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.disease_status_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the disease_status_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":519,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.992073 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE REGEXP_INSTR(FACT_RELATIONSHIP.domain_concept_id_1, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the domain_concept_id_1 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":520,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.988064 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE REGEXP_INSTR(FACT_RELATIONSHIP.fact_id_1, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the fact_id_1 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_1","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":521,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.100081 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE REGEXP_INSTR(FACT_RELATIONSHIP.domain_concept_id_2, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the domain_concept_id_2 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":522,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.019070 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE REGEXP_INSTR(FACT_RELATIONSHIP.fact_id_2, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the fact_id_2 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_2","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":523,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.285036 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = relationship_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE REGEXP_INSTR(FACT_RELATIONSHIP.relationship_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the relationship_concept_id in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":524,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.738112 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.location_id' AS violating_field, LOCATION.* \r\n\t\t  FROM cdm.LOCATION\r\n\t\t WHERE REGEXP_INSTR(LOCATION.location_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the location_id in the LOCATION is the expected data type based on the specification.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":525,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.844069 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE REGEXP_INSTR(CARE_SITE.care_site_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the CARE_SITE is the expected data type based on the specification.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":526,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.702018 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE REGEXP_INSTR(CARE_SITE.place_of_service_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the place_of_service_concept_id in the CARE_SITE is the expected data type based on the specification.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":527,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.547044 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.location_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE REGEXP_INSTR(CARE_SITE.location_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the location_id in the CARE_SITE is the expected data type based on the specification.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":528,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.969617 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":529,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.882103 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.specialty_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specialty_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":530,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.909031 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.care_site_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.care_site_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":531,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.288032 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = year_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.year_of_birth' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.year_of_birth, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the year_of_birth in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":532,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.740059 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.gender_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the gender_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":533,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.612086 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.specialty_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specialty_source_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":534,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.453025 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_source_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.gender_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the gender_source_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":535,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.221995 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.payer_plan_period_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the payer_plan_period_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":536,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":537,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.447041 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.payer_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the payer_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":538,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.065078 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.payer_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the payer_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":539,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.276090 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.plan_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the plan_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":540,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234950 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.plan_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the plan_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":541,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.378039 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.sponsor_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the sponsor_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":542,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.sponsor_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the sponsor_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":543,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.181011 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.stop_reason_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the stop_reason_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":544,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227951 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.stop_reason_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the stop_reason_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":545,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.137081 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE REGEXP_INSTR(COST.cost_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the cost_type_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":546,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.714106 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = currency_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.currency_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE REGEXP_INSTR(COST.currency_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the currency_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"currency_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":547,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.813096 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = revenue_code_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.revenue_code_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE REGEXP_INSTR(COST.revenue_code_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the revenue_code_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":548,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.424074 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = drg_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.drg_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE REGEXP_INSTR(COST.drg_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drg_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":549,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.548083 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE REGEXP_INSTR(DRUG_ERA.drug_era_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_era_id in the DRUG_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":550,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.751041 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.person_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE REGEXP_INSTR(DRUG_ERA.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the DRUG_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":551,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.252089 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE REGEXP_INSTR(DRUG_ERA.drug_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_concept_id in the DRUG_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":552,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.975090 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_exposure_count\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_exposure_count' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE REGEXP_INSTR(DRUG_ERA.drug_exposure_count, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_exposure_count in the DRUG_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_exposure_count","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":553,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.845063 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = gap_days\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.gap_days' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE REGEXP_INSTR(DRUG_ERA.gap_days, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the gap_days in the DRUG_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"gap_days","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":554,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246998 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE REGEXP_INSTR(DOSE_ERA.dose_era_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the dose_era_id in the DOSE_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":555,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216010 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.person_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE REGEXP_INSTR(DOSE_ERA.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the DOSE_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":556,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.255019 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE REGEXP_INSTR(DOSE_ERA.drug_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_concept_id in the DOSE_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":557,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.314028 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE REGEXP_INSTR(DOSE_ERA.unit_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the unit_concept_id in the DOSE_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":558,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.974051 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE REGEXP_INSTR(CONDITION_ERA.condition_era_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_era_id in the CONDITION_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":559,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.801091 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.person_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE REGEXP_INSTR(CONDITION_ERA.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the CONDITION_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":560,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.880065 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE REGEXP_INSTR(CONDITION_ERA.condition_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_concept_id in the CONDITION_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":561,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.303992 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_occurrence_count\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_occurrence_count' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE REGEXP_INSTR(CONDITION_ERA.condition_occurrence_count, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_occurrence_count in the CONDITION_ERA is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_occurrence_count","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":562,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"7.095131 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.person_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.person_id IN ( SELECT PERSON.person_id \r\n\t\t                                          FROM cdm.PERSON\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY PERSON.person_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the person_id field of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":563,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"8.540092 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.observation_period_id IN ( SELECT OBSERVATION_PERIOD.observation_period_id \r\n\t\t                                          FROM cdm.OBSERVATION_PERIOD\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY OBSERVATION_PERIOD.observation_period_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the observation_period_id field of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":564,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.926088 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_occurrence_id IN ( SELECT VISIT_OCCURRENCE.visit_occurrence_id \r\n\t\t                                          FROM cdm.VISIT_OCCURRENCE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY VISIT_OCCURRENCE.visit_occurrence_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the visit_occurrence_id field of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":565,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.404110 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_occurrence_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_occurrence_id IN ( SELECT CONDITION_OCCURRENCE.condition_occurrence_id \r\n\t\t                                          FROM cdm.CONDITION_OCCURRENCE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY CONDITION_OCCURRENCE.condition_occurrence_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the condition_occurrence_id field of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_occurrence_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":566,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.244101 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_exposure_id IN ( SELECT DRUG_EXPOSURE.drug_exposure_id \r\n\t\t                                          FROM cdm.DRUG_EXPOSURE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY DRUG_EXPOSURE.drug_exposure_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the drug_exposure_id field of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":567,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.779075 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_occurrence_id IN ( SELECT PROCEDURE_OCCURRENCE.procedure_occurrence_id \r\n\t\t                                          FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY PROCEDURE_OCCURRENCE.procedure_occurrence_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the procedure_occurrence_id field of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_occurrence_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":568,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"8.816152 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_exposure_id IN ( SELECT DEVICE_EXPOSURE.device_exposure_id \r\n\t\t                                          FROM cdm.DEVICE_EXPOSURE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY DEVICE_EXPOSURE.device_exposure_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the device_exposure_id field of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":569,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.941106 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_id IN ( SELECT MEASUREMENT.measurement_id \r\n\t\t                                          FROM cdm.MEASUREMENT\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY MEASUREMENT.measurement_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the measurement_id field of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":570,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.081098 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_id IN ( SELECT VISIT_DETAIL.visit_detail_id \r\n\t\t                                          FROM cdm.VISIT_DETAIL\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY VISIT_DETAIL.visit_detail_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the visit_detail_id field of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":571,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.745583 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_id IN ( SELECT NOTE.note_id \r\n\t\t                                          FROM cdm.NOTE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY NOTE.note_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the note_id field of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":572,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"7.556156 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.note_nlp_id IN ( SELECT NOTE_NLP.note_nlp_id \r\n\t\t                                          FROM cdm.NOTE_NLP\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY NOTE_NLP.note_nlp_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the note_nlp_id field of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":573,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"7.367112 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_id IN ( SELECT OBSERVATION.observation_id \r\n\t\t                                          FROM cdm.OBSERVATION\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY OBSERVATION.observation_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the observation_id field of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":574,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.244012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_id IN ( SELECT SPECIMEN.specimen_id \r\n\t\t                                          FROM cdm.SPECIMEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY SPECIMEN.specimen_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the specimen_id field of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":575,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.936085 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.location_id' AS violating_field, LOCATION.* \r\n\t\t  FROM cdm.LOCATION\r\n\t\t WHERE LOCATION.location_id IN ( SELECT LOCATION.location_id \r\n\t\t                                          FROM cdm.LOCATION\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY LOCATION.location_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the location_id field of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":576,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.674135 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE CARE_SITE.care_site_id IN ( SELECT CARE_SITE.care_site_id \r\n\t\t                                          FROM cdm.CARE_SITE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY CARE_SITE.care_site_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the care_site_id field of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":577,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.491116 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE PROVIDER.provider_id IN ( SELECT PROVIDER.provider_id \r\n\t\t                                          FROM cdm.PROVIDER\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY PROVIDER.provider_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the provider_id field of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":578,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.189031 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE PAYER_PLAN_PERIOD.payer_plan_period_id IN ( SELECT PAYER_PLAN_PERIOD.payer_plan_period_id \r\n\t\t                                          FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY PAYER_PLAN_PERIOD.payer_plan_period_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the payer_plan_period_id field of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":579,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.351128 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_id IN ( SELECT COST.cost_id \r\n\t\t                                          FROM cdm.COST\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY COST.cost_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the cost_id field of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":580,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.259122 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_era_id IN ( SELECT DRUG_ERA.drug_era_id \r\n\t\t                                          FROM cdm.DRUG_ERA\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY DRUG_ERA.drug_era_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the drug_era_id field of the DRUG_ERA.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":581,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203995 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.dose_era_id IN ( SELECT DOSE_ERA.dose_era_id \r\n\t\t                                          FROM cdm.DOSE_ERA\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY DOSE_ERA.dose_era_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the dose_era_id field of the DOSE_ERA.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":582,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.483116 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_era_id IN ( SELECT CONDITION_ERA.condition_era_id \r\n\t\t                                          FROM cdm.CONDITION_ERA\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY CONDITION_ERA.condition_era_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the condition_era_id field of the CONDITION_ERA.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":583,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.296125 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.gender_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.gender_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":584,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.615036 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.race_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.race_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the race_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":585,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.195064 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.ethnicity_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.ethnicity_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the ethnicity_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":586,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.357028 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = location_id\r\nfkTableName = LOCATION\r\nfkFieldName = LOCATION_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.location_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.LOCATION f1\r\n\t\tON p1.location_id = f1.LOCATION_ID\r\n\t\tWHERE f1.LOCATION_ID IS NULL AND p1.location_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the location_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"location_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":587,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.040110 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":588,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.669063 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = care_site_id\r\nfkTableName = CARE_SITE\r\nfkFieldName = CARE_SITE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.care_site_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CARE_SITE f1\r\n\t\tON p1.care_site_id = f1.CARE_SITE_ID\r\n\t\tWHERE f1.CARE_SITE_ID IS NULL AND p1.care_site_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the care_site_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":589,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.474073 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.gender_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.gender_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_source_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":590,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.044059 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.race_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.race_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the race_source_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":591,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.715038 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.ethnicity_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.ethnicity_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the ethnicity_source_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":592,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.961080 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the OBSERVATION_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":593,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.322071 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.period_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.period_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the period_type_concept_id field in the OBSERVATION_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":594,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.303003 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":595,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.135040 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_concept_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":596,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.779010 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_type_concept_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":597,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.242068 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_source_concept_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":598,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.761042 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.admitting_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.admitting_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the admitting_source_concept_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":599,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.849044 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.discharge_to_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.discharge_to_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the discharge_to_concept_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":600,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.653126 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = preceding_visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.preceding_visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.preceding_visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.preceding_visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the preceding_visit_occurrence_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"preceding_visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":601,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.486042 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":602,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.833045 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.condition_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.condition_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":603,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.963052 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.condition_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.condition_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_type_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":604,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.780075 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.condition_status_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.condition_status_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_status_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":605,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.058984 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":606,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.511720 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":607,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.807082 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":608,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.912047 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.condition_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.condition_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_source_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":609,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.631017 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":610,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.506081 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drug_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drug_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":611,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.745043 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drug_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drug_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_type_concept_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":612,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.368073 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.route_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.route_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the route_concept_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":613,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.343017 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":614,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.003185 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":615,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.559066 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":616,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.233038 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drug_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drug_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_source_concept_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":617,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.215063 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the PROCEDURE_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":618,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.074058 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.procedure_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.procedure_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_concept_id field in the PROCEDURE_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":619,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.940051 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.procedure_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.procedure_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_type_concept_id field in the PROCEDURE_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":620,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.008033 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.modifier_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.modifier_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the modifier_concept_id field in the PROCEDURE_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":621,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.485079 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":622,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.466089 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.device_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.device_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_concept_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":623,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.288070 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.device_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.device_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_type_concept_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":624,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.692043 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":625,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.443986 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":626,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.458116 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":627,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.996066 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.device_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.device_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_source_concept_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":628,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.588390 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":629,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.879066 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.measurement_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.measurement_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":630,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.846144 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.measurement_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.measurement_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_type_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":631,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.175049 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = operator_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.operator_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.operator_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the operator_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"operator_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":632,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.791097 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_as_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.value_as_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.value_as_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.value_as_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the value_as_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":633,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.834100 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.unit_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.unit_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":634,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.874046 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":635,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.348110 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":636,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.122089 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":637,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.973073 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.measurement_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.measurement_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_source_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":638,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.209093 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":639,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.384096 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_detail_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_detail_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_concept_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":640,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.043076 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_detail_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_detail_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_type_concept_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":641,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.871079 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":642,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.145083 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = care_site_id\r\nfkTableName = CARE_SITE\r\nfkFieldName = CARE_SITE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.care_site_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CARE_SITE f1\r\n\t\tON p1.care_site_id = f1.CARE_SITE_ID\r\n\t\tWHERE f1.CARE_SITE_ID IS NULL AND p1.care_site_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the care_site_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":643,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.084095 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_detail_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_detail_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_source_concept_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":644,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.132144 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.admitting_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.admitting_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the admitting_source_concept_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":645,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.806062 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.discharge_to_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.discharge_to_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the discharge_to_concept_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":646,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.102097 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = preceding_visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.preceding_visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.preceding_visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.preceding_visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the preceding_visit_detail_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"preceding_visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":647,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.130077 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_parent_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_parent_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_parent_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_parent_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_parent_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_parent_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":648,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.723152 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":649,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.271087 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":650,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.615079 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.note_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.note_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_type_concept_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":651,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.579030 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_class_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.note_class_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.note_class_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_class_concept_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":652,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.959089 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = encoding_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.encoding_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.encoding_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the encoding_concept_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":653,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.595075 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = language_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.language_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.language_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the language_concept_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":654,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.499045 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":655,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.846091 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":656,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.830108 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":657,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.357058 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = section_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE_NLP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.section_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.section_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the section_concept_id field in the NOTE_NLP table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"section_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":658,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.359112 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE_NLP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.note_nlp_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.note_nlp_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_nlp_concept_id field in the NOTE_NLP table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":659,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.249067 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE_NLP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.note_nlp_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.note_nlp_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_nlp_source_concept_id field in the NOTE_NLP table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":660,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.842005 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":661,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.141049 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.observation_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.observation_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":662,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.258097 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.observation_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.observation_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_type_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":663,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.068059 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = value_as_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.value_as_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.value_as_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.value_as_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the value_as_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":664,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.169085 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.qualifier_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.qualifier_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the qualifier_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":665,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.720060 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.unit_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.unit_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":666,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.086062 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":667,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.512052 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":668,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.477970 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":669,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.508987 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.observation_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.observation_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_source_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":670,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.247018 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":671,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.649004 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.specimen_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.specimen_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specimen_concept_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":672,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.423108 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.specimen_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.specimen_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specimen_type_concept_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":673,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.714042 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.unit_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.unit_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":674,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.539082 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.anatomic_site_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.anatomic_site_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the anatomic_site_concept_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":675,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.144047 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.disease_status_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.disease_status_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the disease_status_concept_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":676,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.867097 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_1\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, p1.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.domain_concept_id_1 = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.domain_concept_id_1 IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the domain_concept_id_1 field in the FACT_RELATIONSHIP table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":677,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.051040 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_2\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, p1.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.domain_concept_id_2 = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.domain_concept_id_2 IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the domain_concept_id_2 field in the FACT_RELATIONSHIP table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":678,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.239089 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = relationship_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.relationship_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.relationship_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the relationship_concept_id field in the FACT_RELATIONSHIP table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":679,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.197085 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CARE_SITE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.place_of_service_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.place_of_service_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the place_of_service_concept_id field in the CARE_SITE table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":680,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.044091 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROVIDER p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.specialty_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.specialty_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specialty_concept_id field in the PROVIDER table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":681,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.389560 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = care_site_id\r\nfkTableName = CARE_SITE\r\nfkFieldName = CARE_SITE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.care_site_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROVIDER p1\r\n\t\tLEFT JOIN cdm.CARE_SITE f1\r\n\t\tON p1.care_site_id = f1.CARE_SITE_ID\r\n\t\tWHERE f1.CARE_SITE_ID IS NULL AND p1.care_site_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the care_site_id field in the PROVIDER table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":682,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.846067 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROVIDER p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.gender_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.gender_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PROVIDER table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":683,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.020025 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROVIDER p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.specialty_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.specialty_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specialty_source_concept_id field in the PROVIDER table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":684,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.386075 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROVIDER p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.gender_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.gender_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_source_concept_id field in the PROVIDER table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":685,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.315017 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.payer_plan_period_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.payer_plan_period_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the payer_plan_period_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":686,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.691090 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":687,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.283058 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.payer_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.payer_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the payer_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":688,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.406097 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.payer_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.payer_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the payer_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":689,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.462051 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.plan_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.plan_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the plan_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":690,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.674113 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.plan_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.plan_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the plan_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":691,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.440064 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.sponsor_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.sponsor_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the sponsor_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":692,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.536028 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.sponsor_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.sponsor_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the sponsor_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":693,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.880020 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.stop_reason_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.stop_reason_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the stop_reason_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":694,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.225087 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.stop_reason_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.stop_reason_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the stop_reason_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":695,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.851144 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_domain_id\r\nfkTableName = DOMAIN\r\nfkFieldName = DOMAIN_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_domain_id' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.DOMAIN f1\r\n\t\tON p1.cost_domain_id = f1.DOMAIN_ID\r\n\t\tWHERE f1.DOMAIN_ID IS NULL AND p1.cost_domain_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the cost_domain_id field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_domain_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":696,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.912066 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.cost_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.cost_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the cost_type_concept_id field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":697,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.063079 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = currency_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.currency_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.currency_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.currency_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the currency_concept_id field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"currency_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":698,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.981192 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_patient_copay\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_patient_copay' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.paid_patient_copay = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.paid_patient_copay IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the paid_patient_copay field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_copay","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":699,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.731058 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = revenue_code_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.revenue_code_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.revenue_code_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.revenue_code_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the revenue_code_concept_id field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":700,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.448043 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = drg_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.drg_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drg_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drg_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drg_concept_id field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":701,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.388094 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_ERA p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the DRUG_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":702,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.329092 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_ERA p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drug_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drug_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":703,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.784091 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DOSE_ERA p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the DOSE_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":704,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.506008 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DOSE_ERA p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drug_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drug_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DOSE_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":705,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.205090 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DOSE_ERA p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.unit_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.unit_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the DOSE_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":706,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.595065 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_ERA p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.condition_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.condition_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_concept_id field in the CONDITION_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":707,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.183157 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\nfkDomain = Gender\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PERSON t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.gender_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Gender'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PERSON table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":708,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.663079 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\nfkDomain = Race\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PERSON t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.race_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Race'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the race_concept_id field in the PERSON table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":709,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.317094 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\nfkDomain = Ethnicity\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PERSON t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.ethnicity_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Ethnicity'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the ethnicity_concept_id field in the PERSON table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":710,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.531124 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.period_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the period_type_concept_id field in the OBSERVATION_PERIOD table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":711,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.089061 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\nfkDomain = Visit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.visit_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Visit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_concept_id field in the VISIT_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":712,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.417088 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.visit_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_type_concept_id field in the VISIT_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":713,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.198866 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\nfkDomain = Visit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.admitting_source_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Visit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the admitting_source_concept_id field in the VISIT_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":714,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.031076 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\nfkDomain = Visit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.discharge_to_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Visit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the discharge_to_concept_id field in the VISIT_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":715,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.568121 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\nfkDomain = Condition\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.condition_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Condition'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_concept_id field in the CONDITION_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":716,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.616072 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.condition_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_type_concept_id field in the CONDITION_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":717,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.986074 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\nfkDomain = Drug\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.drug_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Drug'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_EXPOSURE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":718,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.350090 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.drug_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_type_concept_id field in the DRUG_EXPOSURE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":719,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.251053 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\nfkDomain = Route\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.route_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Route'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the route_concept_id field in the DRUG_EXPOSURE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":720,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.170084 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\nfkDomain = Procedure\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.procedure_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Procedure'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_concept_id field in the PROCEDURE_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":721,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.375567 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.procedure_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_type_concept_id field in the PROCEDURE_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":722,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.078576 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\nfkDomain = Device\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.device_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Device'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_concept_id field in the DEVICE_EXPOSURE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":723,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.118082 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.device_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_type_concept_id field in the DEVICE_EXPOSURE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":724,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.258091 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\nfkDomain = Measurement\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.MEASUREMENT t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.measurement_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Measurement'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_concept_id field in the MEASUREMENT table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":725,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.596073 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.MEASUREMENT t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.measurement_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_type_concept_id field in the MEASUREMENT table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":726,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.446100 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\nfkDomain = Unit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.MEASUREMENT t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.unit_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Unit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the MEASUREMENT table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":727,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.790088 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\nfkDomain = Visit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_DETAIL t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.visit_detail_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Visit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_concept_id field in the VISIT_DETAIL table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":728,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.001071 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_DETAIL t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.visit_detail_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_type_concept_id field in the VISIT_DETAIL table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":729,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.424062 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.NOTE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.note_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_type_concept_id field in the NOTE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":730,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.828084 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.OBSERVATION t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.observation_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_type_concept_id field in the OBSERVATION table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":731,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.070076 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\nfkDomain = Unit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.OBSERVATION t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.unit_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Unit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the OBSERVATION table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":732,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.722117 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.SPECIMEN t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.specimen_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specimen_type_concept_id field in the SPECIMEN table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":733,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.709109 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\nfkDomain = Gender\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PROVIDER t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.gender_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Gender'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PROVIDER table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":734,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.189105 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\nfkDomain = Drug\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DRUG_ERA t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.drug_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Drug'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_ERA table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":735,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.479005 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\nfkDomain = Drug\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DOSE_ERA t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.drug_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Drug'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DOSE_ERA table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":736,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.161085 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\nfkDomain = Unit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DOSE_ERA t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.unit_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Unit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the DOSE_ERA table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":737,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.538068 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\nfkDomain = Condition\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.CONDITION_ERA t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.condition_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Condition'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_concept_id field in the CONDITION_ERA table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":738,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.502079 secs","QUERY_TEXT":"\r\n/*********\r\nFK_CLASS\r\nDrug era standard concepts, ingredients only\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\nfkDomain = Drug\r\nfkClass = Ingredient\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tLEFT JOIN cdm.CONCEPT \r\n\t\tON DRUG_ERA.drug_concept_id = CONCEPT.CONCEPT_ID\r\n        WHERE CONCEPT.CONCEPT_ID != 0 AND (CONCEPT.DOMAIN_ID != 'Drug' OR CONCEPT.CONCEPT_CLASS_ID != 'Ingredient') \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"fkClass","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_ERA table that do not conform to the @FK_CLASS class.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_fk_class.sql","CATEGORY":"Conformance","SUBCATEGORY":"Computational","CONTEXT":"Verification","checkId":739,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.757022 secs","QUERY_TEXT":"\r\n/*********\r\nFK_CLASS\r\nDrug era standard concepts, ingredients only\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\nfkDomain = Drug\r\nfkClass = Ingredient\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tLEFT JOIN cdm.CONCEPT \r\n\t\tON DOSE_ERA.drug_concept_id = CONCEPT.CONCEPT_ID\r\n        WHERE CONCEPT.CONCEPT_ID != 0 AND (CONCEPT.DOMAIN_ID != 'Drug' OR CONCEPT.CONCEPT_CLASS_ID != 'Ingredient') \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"fkClass","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DOSE_ERA table that do not conform to the @FK_CLASS class.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_fk_class.sql","CATEGORY":"Conformance","SUBCATEGORY":"Computational","CONTEXT":"Verification","checkId":740,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"11.631268 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.gender_concept_id IN ( SELECT t.gender_concept_id \r\n\t\t                                          FROM cdm.PERSON t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.gender_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the gender_concept_id field in the PERSON table. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":741,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.324267 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.race_concept_id IN ( SELECT t.race_concept_id \r\n\t\t                                          FROM cdm.PERSON t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.race_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the race_concept_id field in the PERSON table. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":742,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.813132 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.ethnicity_concept_id IN ( SELECT t.ethnicity_concept_id \r\n\t\t                                          FROM cdm.PERSON t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.ethnicity_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the ethnicity_concept_id field in the PERSON table. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":743,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.858144 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.period_type_concept_id IN ( SELECT t.period_type_concept_id \r\n\t\t                                          FROM cdm.OBSERVATION_PERIOD t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.period_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the period_type_concept_id field in the OBSERVATION_PERIOD table. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":744,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.987148 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_concept_id IN ( SELECT t.visit_concept_id \r\n\t\t                                          FROM cdm.VISIT_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.visit_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":745,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"7.684179 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_type_concept_id IN ( SELECT t.visit_type_concept_id \r\n\t\t                                          FROM cdm.VISIT_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.visit_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_type_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":746,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"10.059246 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.admitting_source_concept_id IN ( SELECT t.admitting_source_concept_id \r\n\t\t                                          FROM cdm.VISIT_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.admitting_source_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the admitting_source_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":747,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.367178 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.discharge_to_concept_id IN ( SELECT t.discharge_to_concept_id \r\n\t\t                                          FROM cdm.VISIT_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.discharge_to_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the discharge_to_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":748,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.561143 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_concept_id IN ( SELECT t.condition_concept_id \r\n\t\t                                          FROM cdm.CONDITION_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.condition_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the condition_concept_id field in the CONDITION_OCCURRENCE table. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":749,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.652105 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_type_concept_id IN ( SELECT t.condition_type_concept_id \r\n\t\t                                          FROM cdm.CONDITION_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.condition_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the condition_type_concept_id field in the CONDITION_OCCURRENCE table. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":750,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.497174 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_status_concept_id IN ( SELECT t.condition_status_concept_id \r\n\t\t                                          FROM cdm.CONDITION_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.condition_status_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the condition_status_concept_id field in the CONDITION_OCCURRENCE table. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":751,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.725120 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_concept_id IN ( SELECT t.drug_concept_id \r\n\t\t                                          FROM cdm.DRUG_EXPOSURE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.drug_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the drug_concept_id field in the DRUG_EXPOSURE table. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":752,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.884113 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_type_concept_id IN ( SELECT t.drug_type_concept_id \r\n\t\t                                          FROM cdm.DRUG_EXPOSURE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.drug_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the drug_type_concept_id field in the DRUG_EXPOSURE table. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":753,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.366136 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.route_concept_id IN ( SELECT t.route_concept_id \r\n\t\t                                          FROM cdm.DRUG_EXPOSURE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.route_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the route_concept_id field in the DRUG_EXPOSURE table. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":754,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.330106 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_concept_id IN ( SELECT t.procedure_concept_id \r\n\t\t                                          FROM cdm.PROCEDURE_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.procedure_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the procedure_concept_id field in the PROCEDURE_OCCURRENCE table. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":755,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.199120 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_type_concept_id IN ( SELECT t.procedure_type_concept_id \r\n\t\t                                          FROM cdm.PROCEDURE_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.procedure_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the procedure_type_concept_id field in the PROCEDURE_OCCURRENCE table. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":756,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"7.770130 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.modifier_concept_id IN ( SELECT t.modifier_concept_id \r\n\t\t                                          FROM cdm.PROCEDURE_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.modifier_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the modifier_concept_id field in the PROCEDURE_OCCURRENCE table. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":757,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"9.768200 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_concept_id IN ( SELECT t.device_concept_id \r\n\t\t                                          FROM cdm.DEVICE_EXPOSURE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.device_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the device_concept_id field in the DEVICE_EXPOSURE table. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":758,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.983048 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_type_concept_id IN ( SELECT t.device_type_concept_id \r\n\t\t                                          FROM cdm.DEVICE_EXPOSURE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.device_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the device_type_concept_id field in the DEVICE_EXPOSURE table. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":759,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.428095 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_concept_id IN ( SELECT t.measurement_concept_id \r\n\t\t                                          FROM cdm.MEASUREMENT t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.measurement_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the measurement_concept_id field in the MEASUREMENT table. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":760,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.400071 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_type_concept_id IN ( SELECT t.measurement_type_concept_id \r\n\t\t                                          FROM cdm.MEASUREMENT t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.measurement_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the measurement_type_concept_id field in the MEASUREMENT table. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":761,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.922103 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = operator_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.operator_concept_id IN ( SELECT t.operator_concept_id \r\n\t\t                                          FROM cdm.MEASUREMENT t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.operator_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the operator_concept_id field in the MEASUREMENT table. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"operator_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":762,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.565104 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.unit_concept_id IN ( SELECT t.unit_concept_id \r\n\t\t                                          FROM cdm.MEASUREMENT t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.unit_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the unit_concept_id field in the MEASUREMENT table. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":763,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.166095 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_concept_id IN ( SELECT t.visit_detail_concept_id \r\n\t\t                                          FROM cdm.VISIT_DETAIL t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.visit_detail_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_detail_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":764,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.770091 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_type_concept_id IN ( SELECT t.visit_detail_type_concept_id \r\n\t\t                                          FROM cdm.VISIT_DETAIL t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.visit_detail_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_detail_type_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":765,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"12.567209 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.admitting_source_concept_id IN ( SELECT t.admitting_source_concept_id \r\n\t\t                                          FROM cdm.VISIT_DETAIL t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.admitting_source_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the admitting_source_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":766,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.787147 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.discharge_to_concept_id IN ( SELECT t.discharge_to_concept_id \r\n\t\t                                          FROM cdm.VISIT_DETAIL t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.discharge_to_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the discharge_to_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":767,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.676122 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_type_concept_id IN ( SELECT t.note_type_concept_id \r\n\t\t                                          FROM cdm.NOTE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.note_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the note_type_concept_id field in the NOTE table. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":768,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.495078 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_class_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_class_concept_id IN ( SELECT t.note_class_concept_id \r\n\t\t                                          FROM cdm.NOTE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.note_class_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the note_class_concept_id field in the NOTE table. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":769,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.031108 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = encoding_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.encoding_concept_id IN ( SELECT t.encoding_concept_id \r\n\t\t                                          FROM cdm.NOTE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.encoding_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the encoding_concept_id field in the NOTE table. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":770,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.849101 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = language_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.language_concept_id IN ( SELECT t.language_concept_id \r\n\t\t                                          FROM cdm.NOTE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.language_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the language_concept_id field in the NOTE table. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":771,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.753148 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = section_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.section_concept_id IN ( SELECT t.section_concept_id \r\n\t\t                                          FROM cdm.NOTE_NLP t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.section_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the section_concept_id field in the NOTE_NLP table. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"section_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":772,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.575077 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.note_nlp_concept_id IN ( SELECT t.note_nlp_concept_id \r\n\t\t                                          FROM cdm.NOTE_NLP t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.note_nlp_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the note_nlp_concept_id field in the NOTE_NLP table. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":773,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"7.191139 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_concept_id IN ( SELECT t.observation_concept_id \r\n\t\t                                          FROM cdm.OBSERVATION t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.observation_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the observation_concept_id field in the OBSERVATION table. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":774,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.224066 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_type_concept_id IN ( SELECT t.observation_type_concept_id \r\n\t\t                                          FROM cdm.OBSERVATION t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.observation_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the observation_type_concept_id field in the OBSERVATION table. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":775,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.425122 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.qualifier_concept_id IN ( SELECT t.qualifier_concept_id \r\n\t\t                                          FROM cdm.OBSERVATION t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.qualifier_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the qualifier_concept_id field in the OBSERVATION table. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":776,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.267122 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.unit_concept_id IN ( SELECT t.unit_concept_id \r\n\t\t                                          FROM cdm.OBSERVATION t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.unit_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the unit_concept_id field in the OBSERVATION table. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":777,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.638994 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_concept_id IN ( SELECT t.specimen_concept_id \r\n\t\t                                          FROM cdm.SPECIMEN t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.specimen_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the specimen_concept_id field in the SPECIMEN table. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":778,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.576086 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_type_concept_id IN ( SELECT t.specimen_type_concept_id \r\n\t\t                                          FROM cdm.SPECIMEN t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.specimen_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the specimen_type_concept_id field in the SPECIMEN table. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":779,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.728128 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.unit_concept_id IN ( SELECT t.unit_concept_id \r\n\t\t                                          FROM cdm.SPECIMEN t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.unit_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the unit_concept_id field in the SPECIMEN table. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":780,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.509100 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.anatomic_site_concept_id IN ( SELECT t.anatomic_site_concept_id \r\n\t\t                                          FROM cdm.SPECIMEN t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.anatomic_site_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the anatomic_site_concept_id field in the SPECIMEN table. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":781,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.415092 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.disease_status_concept_id IN ( SELECT t.disease_status_concept_id \r\n\t\t                                          FROM cdm.SPECIMEN t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.disease_status_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the disease_status_concept_id field in the SPECIMEN table. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":782,"FAILED":0},{"NUM_VIOLATED_ROWS":172,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"7.959176 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE CARE_SITE.place_of_service_concept_id IN ( SELECT t.place_of_service_concept_id \r\n\t\t                                          FROM cdm.CARE_SITE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.place_of_service_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the place_of_service_concept_id field in the CARE_SITE table. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":783,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.450175 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE PROVIDER.specialty_concept_id IN ( SELECT t.specialty_concept_id \r\n\t\t                                          FROM cdm.PROVIDER t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.specialty_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the specialty_concept_id field in the PROVIDER table. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":784,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"7.050166 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE PROVIDER.gender_concept_id IN ( SELECT t.gender_concept_id \r\n\t\t                                          FROM cdm.PROVIDER t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.gender_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the gender_concept_id field in the PROVIDER table. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":785,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.376077 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_type_concept_id IN ( SELECT t.cost_type_concept_id \r\n\t\t                                          FROM cdm.COST t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.cost_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the cost_type_concept_id field in the COST table. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":786,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.699146 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_concept_id IN ( SELECT t.drug_concept_id \r\n\t\t                                          FROM cdm.DRUG_ERA t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.drug_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the drug_concept_id field in the DRUG_ERA table. ","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":787,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.863102 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.drug_concept_id IN ( SELECT t.drug_concept_id \r\n\t\t                                          FROM cdm.DOSE_ERA t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.drug_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the drug_concept_id field in the DOSE_ERA table. ","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":788,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.597104 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.unit_concept_id IN ( SELECT t.unit_concept_id \r\n\t\t                                          FROM cdm.DOSE_ERA t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.unit_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the unit_concept_id field in the DOSE_ERA table. ","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":789,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.943124 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_concept_id IN ( SELECT t.condition_concept_id \r\n\t\t                                          FROM cdm.CONDITION_ERA t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.condition_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t  ) \r\n  ) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the condition_concept_id field in the CONDITION_ERA table. ","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":790,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.184015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.person_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":791,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.235015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.gender_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":792,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.317985 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = year_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.year_of_birth IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the year_of_birth of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":793,"FAILED":0},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.325027 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = month_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.month_of_birth IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the month_of_birth of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"month_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":794,"FAILED":0},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.127082 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = day_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.day_of_birth IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the day_of_birth of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"day_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":795,"FAILED":0},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.148061 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = birth_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.birth_datetime' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.birth_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the birth_datetime of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"birth_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":796,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.224984 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.race_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":797,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.173001 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ethnicity_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":798,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.193086 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.location_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.location_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":799,"FAILED":0},{"NUM_VIOLATED_ROWS":1144,"PCT_VIOLATED_ROWS":0.1195,"EXECUTION_TIME":"3.064078 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.provider_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":800,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.323036 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.care_site_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":801,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.968072 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.person_source_value' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.person_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_source_value of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":802,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.187082 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_source_value' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.gender_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_value of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":803,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.823094 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.gender_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":804,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.146082 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_source_value' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.race_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_source_value of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":805,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.597050 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.race_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_source_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":806,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.276063 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_source_value' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ethnicity_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_source_value of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":807,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.333069 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ethnicity_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_source_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":808,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.157011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.observation_period_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_id of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":809,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201981 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":810,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.156011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.observation_period_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_start_date of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":811,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.observation_period_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_end_date of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":812,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.181012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.period_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the period_type_concept_id of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":813,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.185975 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":814,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":815,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.259012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":816,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246017 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_start_date of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":817,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.981070 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_start_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_start_datetime of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":818,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198980 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_end_date of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":819,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.192090 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_end_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_end_datetime of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":820,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_type_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":821,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.152075 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.provider_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":822,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.575054 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.care_site_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":823,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.003077 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_value' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_source_value of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":824,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.789065 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_source_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":825,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.977056 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.admitting_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":826,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.078059 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_value' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.admitting_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_value of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":827,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.814049 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.discharge_to_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":828,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.695032 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_source_value' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.discharge_to_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_source_value of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":829,"FAILED":0},{"NUM_VIOLATED_ROWS":9554,"PCT_VIOLATED_ROWS":0.0154,"EXECUTION_TIME":"2.726919 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = preceding_visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.preceding_visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.preceding_visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the preceding_visit_occurrence_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"preceding_visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":830,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.167013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_occurrence_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_occurrence_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":831,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.192013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.person_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":832,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.158011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":833,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_start_date of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":834,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.007055 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_start_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_start_datetime of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":835,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.906052 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_end_date of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":836,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.377022 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_end_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_end_datetime of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":837,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207228 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_type_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":838,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.120063 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_status_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_status_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":839,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.142060 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = stop_reason\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.stop_reason' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.stop_reason IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"stop_reason","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":840,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.748059 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.provider_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":841,"FAILED":0},{"NUM_VIOLATED_ROWS":54564,"PCT_VIOLATED_ROWS":0.222,"EXECUTION_TIME":"3.346073 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_occurrence_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":842,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"4.875033 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_detail_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":843,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.855081 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_value' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_source_value of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":844,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.870051 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_source_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":845,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.046058 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_source_value' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_status_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_status_source_value of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":846,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.208009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_exposure_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":847,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.180974 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.person_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":848,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.446024 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":849,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_exposure_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_start_date of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":850,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.973054 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_exposure_start_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_start_datetime of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":851,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.150967 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_exposure_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_end_date of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":852,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.551067 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_exposure_end_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_end_datetime of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":853,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.621086 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = verbatim_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.verbatim_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the verbatim_end_date of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"verbatim_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":854,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.188009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_type_concept_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":855,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.272050 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = stop_reason\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.stop_reason' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.stop_reason IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"stop_reason","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":856,"FAILED":0},{"NUM_VIOLATED_ROWS":301935,"PCT_VIOLATED_ROWS":0.5897,"EXECUTION_TIME":"3.085023 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = refills\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.refills IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the refills of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"refills","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":857,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.738073 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.quantity' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.quantity IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":858,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.356039 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = days_supply\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.days_supply IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the days_supply of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"days_supply","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":859,"FAILED":0},{"NUM_VIOLATED_ROWS":210103,"PCT_VIOLATED_ROWS":0.4103,"EXECUTION_TIME":"2.978054 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = sig\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.sig' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.sig IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sig of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"sig","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":860,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.463078 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.route_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the route_concept_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":861,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.899044 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = lot_number\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.lot_number' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.lot_number IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the lot_number of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"lot_number","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":862,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.290015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.provider_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":863,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.423075 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_occurrence_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":864,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.961071 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_detail_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":865,"FAILED":0},{"NUM_VIOLATED_ROWS":301935,"PCT_VIOLATED_ROWS":0.5897,"EXECUTION_TIME":"3.436014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_value' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_source_value of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":866,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.950050 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_source_concept_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":867,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.194067 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_source_value' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.route_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the route_source_value of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":868,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.346053 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = dose_unit_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.dose_unit_source_value' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.dose_unit_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_unit_source_value of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"dose_unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":869,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226980 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_occurrence_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":870,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.272980 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":871,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.282013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":872,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_date of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":873,"FAILED":0},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.851047 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_datetime of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":874,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.247979 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_type_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":875,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.451059 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.modifier_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the modifier_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":876,"FAILED":0},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.230044 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.quantity' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.quantity IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":877,"FAILED":0},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.489015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.provider_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":878,"FAILED":0},{"NUM_VIOLATED_ROWS":2538,"PCT_VIOLATED_ROWS":0.1662,"EXECUTION_TIME":"2.876050 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":879,"FAILED":0},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.563068 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_detail_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":880,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.247018 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_value' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_source_value of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":881,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.086056 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_source_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":882,"FAILED":0},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.236050 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_source_value' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.modifier_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the modifier_source_value of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":883,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.154004 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_exposure_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":884,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.167103 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.person_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":885,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_concept_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":886,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.167997 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_exposure_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_start_date of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":887,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.388086 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_exposure_start_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_start_datetime of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":888,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.774044 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_exposure_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_end_date of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":889,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.003051 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_exposure_end_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_end_datetime of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":890,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_type_concept_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":891,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.868045 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = unique_device_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.unique_device_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.unique_device_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unique_device_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"unique_device_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":892,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.225015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.quantity' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.quantity IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":893,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.444011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.provider_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":894,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.084048 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_occurrence_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":895,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.237031 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_detail_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":896,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.303265 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_value' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_source_value of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":897,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.207080 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_source_concept_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":898,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":899,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201959 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":900,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.169993 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":901,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_date of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":902,"FAILED":0},{"NUM_VIOLATED_ROWS":13813277,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.362056 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_datetime' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_datetime of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":903,"FAILED":0},{"NUM_VIOLATED_ROWS":158544,"PCT_VIOLATED_ROWS":0.0115,"EXECUTION_TIME":"3.390075 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_time\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_time' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_time IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_time of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_time","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":904,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.184012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_type_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":905,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.297052 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = operator_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.operator_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the operator_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"operator_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":906,"FAILED":0},{"NUM_VIOLATED_ROWS":347314,"PCT_VIOLATED_ROWS":0.0251,"EXECUTION_TIME":"3.418022 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_as_number\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.value_as_number' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.value_as_number IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_number of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_number","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":907,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.625260 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_as_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.value_as_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.value_as_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":908,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.763072 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.unit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":909,"FAILED":0},{"NUM_VIOLATED_ROWS":3974125,"PCT_VIOLATED_ROWS":0.2877,"EXECUTION_TIME":"2.669037 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = range_low\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.range_low' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.range_low IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the range_low of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"range_low","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":910,"FAILED":0},{"NUM_VIOLATED_ROWS":3994798,"PCT_VIOLATED_ROWS":0.2892,"EXECUTION_TIME":"2.978052 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = range_high\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.range_high' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.range_high IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the range_high of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"range_high","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":911,"FAILED":0},{"NUM_VIOLATED_ROWS":13813277,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.924081 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.provider_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":912,"FAILED":0},{"NUM_VIOLATED_ROWS":158893,"PCT_VIOLATED_ROWS":0.0115,"EXECUTION_TIME":"2.627036 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_occurrence_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":913,"FAILED":0},{"NUM_VIOLATED_ROWS":13813277,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.138031 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_detail_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":914,"FAILED":0},{"NUM_VIOLATED_ROWS":158544,"PCT_VIOLATED_ROWS":0.0115,"EXECUTION_TIME":"2.874048 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_source_value' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_source_value of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":915,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.181061 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_source_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":916,"FAILED":0},{"NUM_VIOLATED_ROWS":159973,"PCT_VIOLATED_ROWS":0.0116,"EXECUTION_TIME":"3.278071 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_source_value' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.unit_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_source_value of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":917,"FAILED":0},{"NUM_VIOLATED_ROWS":13813277,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.960048 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.value_source_value' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.value_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_source_value of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":918,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197968 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":919,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.173009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":920,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250017 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_concept_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":921,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.153969 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_start_date of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":922,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.171071 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_start_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_start_datetime of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":923,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.192011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_end_date of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":924,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.390053 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_end_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_end_datetime of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":925,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_type_concept_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":926,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.780999 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.provider_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":927,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.149073 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.care_site_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":928,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.964892 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_value' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_source_value of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":929,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.540032 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_source_concept_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":930,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.815031 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_value' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.admitting_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_value of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":931,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.783054 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.admitting_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_concept_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":932,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.093053 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.discharge_to_source_value' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.discharge_to_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_source_value of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":933,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.931032 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.discharge_to_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_concept_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":934,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.318054 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = preceding_visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.preceding_visit_detail_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.preceding_visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the preceding_visit_detail_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"preceding_visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":935,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.423024 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_parent_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_parent_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_parent_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_parent_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_parent_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":936,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.294019 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_occurrence_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":937,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.235008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":938,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.177007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.person_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":939,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.235804 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_date' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_date of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":940,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.345954 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_datetime' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_datetime of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":941,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.230019 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_type_concept_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":942,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215976 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_class_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_class_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_class_concept_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":943,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.237227 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_title\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_title' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_title IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_title of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_title","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":944,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.240013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_text\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_text' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_text IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_text of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_text","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":945,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.181921 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = encoding_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.encoding_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the encoding_concept_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":946,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239978 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = language_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.language_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the language_concept_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":947,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.222046 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.provider_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":948,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.957195 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_occurrence_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":949,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.255014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_detail_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":950,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.245976 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_source_value' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_source_value of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":951,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215963 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.note_nlp_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_id of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":952,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.165011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_id' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.note_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":953,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.539990 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = section_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.section_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the section_concept_id of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"section_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":954,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.659071 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = snippet\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.snippet' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.snippet IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the snippet of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"snippet","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":955,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.716039 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = offset\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.offset' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.offset IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the offset of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"offset","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":956,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.434021 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = lexical_variant\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.lexical_variant' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.lexical_variant IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the lexical_variant of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"lexical_variant","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":957,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.270016 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.note_nlp_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_concept_id of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":958,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.760039 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_source_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.note_nlp_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_source_concept_id of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":959,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.360072 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_system\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_system' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.nlp_system IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_system of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_system","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":960,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_date' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.nlp_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_date of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":961,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.071058 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_datetime' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.nlp_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_datetime of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":962,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.925064 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = term_exists\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.term_exists' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.term_exists IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the term_exists of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_exists","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":963,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.263051 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = term_temporal\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.term_temporal' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.term_temporal IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the term_temporal of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_temporal","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":964,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.563126 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = term_modifiers\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.term_modifiers' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.term_modifiers IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the term_modifiers of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_modifiers","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":965,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.176005 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":966,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.270983 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":967,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.169956 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":968,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.194010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_date of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":969,"FAILED":0},{"NUM_VIOLATED_ROWS":61864,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.906047 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_datetime' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_datetime of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":970,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.180030 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_type_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":971,"FAILED":0},{"NUM_VIOLATED_ROWS":60758,"PCT_VIOLATED_ROWS":0.9821,"EXECUTION_TIME":"3.035021 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = value_as_number\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.value_as_number' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.value_as_number IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_number of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_number","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":972,"FAILED":0},{"NUM_VIOLATED_ROWS":34821,"PCT_VIOLATED_ROWS":0.5629,"EXECUTION_TIME":"3.369042 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = value_as_string\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.value_as_string' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.value_as_string IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_string of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_string","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":973,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.235983 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = value_as_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.value_as_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.value_as_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":974,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.212011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.qualifier_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the qualifier_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":975,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227980 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.unit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":976,"FAILED":0},{"NUM_VIOLATED_ROWS":61864,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.636111 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.provider_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":977,"FAILED":0},{"NUM_VIOLATED_ROWS":35163,"PCT_VIOLATED_ROWS":0.5684,"EXECUTION_TIME":"3.165062 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_occurrence_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":978,"FAILED":0},{"NUM_VIOLATED_ROWS":61864,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.231014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_detail_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":979,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.267003 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_source_value' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_source_value of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":980,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_source_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":981,"FAILED":0},{"NUM_VIOLATED_ROWS":60757,"PCT_VIOLATED_ROWS":0.9821,"EXECUTION_TIME":"0.256980 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_source_value' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.unit_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_source_value of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":982,"FAILED":0},{"NUM_VIOLATED_ROWS":61864,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.223064 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.qualifier_source_value' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.qualifier_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the qualifier_source_value of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":983,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":984,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.174009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":985,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"1.607015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_concept_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":986,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.186009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_type_concept_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":987,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.171011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_date of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":988,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.919050 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_datetime' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_datetime of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":989,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.244994 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.quantity' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.quantity IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":990,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.949050 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.unit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":991,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.309070 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.anatomic_site_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the anatomic_site_concept_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":992,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239017 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.disease_status_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the disease_status_concept_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":993,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.111071 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_source_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_source_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_source_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_source_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_source_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":994,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.271020 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_source_value' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_source_value of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":995,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.382088 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_source_value' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.unit_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_source_value of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":996,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.034054 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.anatomic_site_source_value' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.anatomic_site_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the anatomic_site_source_value of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":997,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.660036 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.disease_status_source_value' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.disease_status_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the disease_status_source_value of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":998,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.domain_concept_id_1 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_1 of the FACT_RELATIONSHIP.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":999,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.158007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.fact_id_1 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_1 of the FACT_RELATIONSHIP.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_1","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1000,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.204978 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.domain_concept_id_2 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_2 of the FACT_RELATIONSHIP.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1001,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.163979 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.fact_id_2 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_2 of the FACT_RELATIONSHIP.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_2","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1002,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.223032 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = relationship_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.relationship_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the relationship_concept_id of the FACT_RELATIONSHIP.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1003,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.302067 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.location_id' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.location_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1004,"FAILED":0},{"NUM_VIOLATED_ROWS":46,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.513026 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = address_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.address_1' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.address_1 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the address_1 of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"address_1","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1005,"FAILED":0},{"NUM_VIOLATED_ROWS":46,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.157061 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = address_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.address_2' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.address_2 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the address_2 of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"address_2","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1006,"FAILED":0},{"NUM_VIOLATED_ROWS":46,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.532523 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = city\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.city' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.city IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the city of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"city","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1007,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.518063 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = state\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.state' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.state IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the state of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"state","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1008,"FAILED":0},{"NUM_VIOLATED_ROWS":46,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.337035 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = zip\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.zip' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.zip IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the zip of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"zip","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1009,"FAILED":0},{"NUM_VIOLATED_ROWS":46,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.313071 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = county\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.county' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.county IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the county of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"county","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1010,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.356068 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.location_source_value' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.location_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_source_value of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1011,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.177971 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1012,"FAILED":0},{"NUM_VIOLATED_ROWS":172,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.089068 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_name\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_name' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.care_site_name IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_name of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_name","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1013,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.561067 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.place_of_service_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the place_of_service_concept_id of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1014,"FAILED":0},{"NUM_VIOLATED_ROWS":172,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.495028 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.location_id' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.location_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1015,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.459076 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_source_value' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.care_site_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_source_value of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1016,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.932038 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_source_value' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.place_of_service_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the place_of_service_source_value of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1017,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.160977 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1018,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.101062 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_name\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_name' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.provider_name IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_name of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_name","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1019,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.950070 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = npi\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.npi' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.npi IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the npi of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"npi","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1020,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.923055 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = dea\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.dea' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.dea IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dea of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"dea","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1021,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.018057 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.specialty_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specialty_concept_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1022,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.711066 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.care_site_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1023,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.754045 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = year_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.year_of_birth' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.year_of_birth IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the year_of_birth of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1024,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.221031 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.gender_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_concept_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1025,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.298066 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_source_value' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.provider_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_source_value of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1026,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.302088 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_source_value' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.specialty_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specialty_source_value of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1027,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.326037 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.specialty_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specialty_source_concept_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1028,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.057059 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_source_value' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.gender_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_value of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1029,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.026058 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_source_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.gender_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_concept_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1030,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201000 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_plan_period_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1031,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.188993 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1032,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.169026 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_start_date' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_plan_period_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_start_date of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1033,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199977 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_end_date' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_plan_period_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_end_date of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1034,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.191011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1035,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.987050 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_value' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1036,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.141059 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1037,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.808049 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.plan_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the plan_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1038,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.232040 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_value' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.plan_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the plan_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1039,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.223011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.plan_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the plan_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1040,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.186028 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.sponsor_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sponsor_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1041,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.509084 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_value' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.sponsor_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sponsor_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1042,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.sponsor_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sponsor_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1043,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.253995 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = family_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.family_source_value' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.family_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the family_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"family_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1044,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.307017 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.stop_reason_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1045,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.243012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_value' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.stop_reason_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1046,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215977 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.stop_reason_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1047,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.221013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.cost_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1048,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.185968 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_event_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_event_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.cost_event_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_event_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_event_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1049,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.171013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_domain_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_domain_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.cost_domain_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_domain_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_domain_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1050,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.221980 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.cost_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_type_concept_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1051,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.008054 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = currency_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.currency_concept_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.currency_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the currency_concept_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"currency_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1052,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.843046 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = total_charge\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.total_charge' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.total_charge IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the total_charge of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_charge","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1053,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.460062 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = total_cost\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.total_cost' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.total_cost IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the total_cost of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_cost","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1054,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.319065 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = total_paid\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.total_paid' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.total_paid IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the total_paid of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_paid","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1055,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.409053 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_by_payer\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_by_payer' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_by_payer IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_by_payer of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_payer","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1056,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.393053 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_by_patient\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_by_patient' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_by_patient IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_by_patient of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_patient","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1057,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.716041 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_patient_copay\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_patient_copay' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_patient_copay IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_patient_copay of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_copay","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1058,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.575033 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_patient_coinsurance\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_patient_coinsurance' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_patient_coinsurance IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_patient_coinsurance of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_coinsurance","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1059,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.599070 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_patient_deductible\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_patient_deductible' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_patient_deductible IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_patient_deductible of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_deductible","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1060,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.541029 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_by_primary\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_by_primary' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_by_primary IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_by_primary of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_primary","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1061,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.517085 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_ingredient_cost\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_ingredient_cost' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_ingredient_cost IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_ingredient_cost of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_ingredient_cost","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1062,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.227034 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_dispensing_fee\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_dispensing_fee' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_dispensing_fee IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_dispensing_fee of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_dispensing_fee","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1063,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.195064 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = payer_plan_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.payer_plan_period_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.payer_plan_period_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1064,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.331088 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = amount_allowed\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.amount_allowed' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.amount_allowed IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the amount_allowed of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"amount_allowed","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1065,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.078058 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = revenue_code_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.revenue_code_concept_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.revenue_code_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the revenue_code_concept_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1066,"FAILED":0},{"QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = revenue_code_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.revenue_code_source_value' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.revenue_code_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the revenue_code_source_value of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: column cost.revenue_code_source_value does not exist;\nAn error report has been created at  output/Flatiron/errors/FIELD_measureValueCompleteness_COST_revenue_code_source_value.txt","checkId":1067,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.771048 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = drg_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.drg_concept_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.drg_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drg_concept_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1068,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.748057 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = drg_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.drg_source_value' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.drg_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drg_source_value of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1069,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213021 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_id' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_id of the DRUG_ERA.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1070,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.170011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.person_id' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DRUG_ERA.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1071,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DRUG_ERA.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1072,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.177013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_start_date of the DRUG_ERA.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1073,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.171004 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_end_date' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_end_date of the DRUG_ERA.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1074,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.560065 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_exposure_count\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_exposure_count' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_exposure_count IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_count of the DRUG_ERA.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_exposure_count","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1075,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.122038 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = gap_days\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.gap_days' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.gap_days IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gap_days of the DRUG_ERA.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"gap_days","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1076,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.173108 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.dose_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_id of the DOSE_ERA.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1077,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203978 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.person_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DOSE_ERA.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1078,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.160006 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DOSE_ERA.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1079,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.184022 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.unit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the DOSE_ERA.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1080,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.188017 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_value' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.dose_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_value of the DOSE_ERA.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1081,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.275984 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.dose_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_start_date of the DOSE_ERA.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1082,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.183010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_end_date' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.dose_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_end_date of the DOSE_ERA.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1083,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.254013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_id' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_id of the CONDITION_ERA.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1084,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.295013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.person_id' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the CONDITION_ERA.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1085,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.295014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_concept_id of the CONDITION_ERA.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1086,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.261010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_start_date of the CONDITION_ERA.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1087,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.168210 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_end_date' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_end_date of the CONDITION_ERA.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1088,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.168029 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_occurrence_count\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_occurrence_count' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_occurrence_count IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_occurrence_count of the CONDITION_ERA.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_occurrence_count","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1089,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.287068 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.gender_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field gender_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1090,"FAILED":0},{"NUM_VIOLATED_ROWS":3595,"PCT_VIOLATED_ROWS":0.3756,"EXECUTION_TIME":"2.686039 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.race_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field race_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1091,"FAILED":1},{"NUM_VIOLATED_ROWS":8849,"PCT_VIOLATED_ROWS":0.9245,"EXECUTION_TIME":"2.865048 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ethnicity_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field ethnicity_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1092,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.274068 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.period_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field period_type_concept_id in the OBSERVATION_PERIOD table.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1093,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.650035 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1094,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.313052 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_type_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1095,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.040047 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.admitting_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field admitting_source_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1096,"FAILED":1},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.161066 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.discharge_to_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field discharge_to_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1097,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.118028 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field condition_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1098,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.662086 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field condition_type_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1099,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.287028 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_status_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field condition_status_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1100,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.418057 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field drug_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1101,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.238069 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field drug_type_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1102,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.839038 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.route_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field route_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1103,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.296017 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field procedure_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1104,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.300068 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field procedure_type_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1105,"FAILED":0},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.522023 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.modifier_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field modifier_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1106,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.955055 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field device_concept_id in the DEVICE_EXPOSURE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1107,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.976055 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field device_type_concept_id in the DEVICE_EXPOSURE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1108,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.137026 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field measurement_concept_id in the MEASUREMENT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1109,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.693070 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field measurement_type_concept_id in the MEASUREMENT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1110,"FAILED":0},{"NUM_VIOLATED_ROWS":3993412,"PCT_VIOLATED_ROWS":0.2891,"EXECUTION_TIME":"3.418044 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.unit_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field unit_concept_id in the MEASUREMENT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1111,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.212056 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_detail_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1112,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.075059 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_detail_type_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1113,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.758040 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.admitting_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field admitting_source_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1114,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.704038 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.discharge_to_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field discharge_to_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1115,"FAILED":0},{"NUM_VIOLATED_ROWS":29786,"PCT_VIOLATED_ROWS":0.4815,"EXECUTION_TIME":"2.409058 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field observation_concept_id in the OBSERVATION table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1116,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.886048 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field observation_type_concept_id in the OBSERVATION table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1117,"FAILED":0},{"NUM_VIOLATED_ROWS":61864,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.176066 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.unit_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field unit_concept_id in the OBSERVATION table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1118,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.204976 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field specimen_concept_id in the SPECIMEN table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1119,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.096077 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field specimen_type_concept_id in the SPECIMEN table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1120,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.775076 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.unit_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field unit_concept_id in the SPECIMEN table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1121,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.547062 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.domain_concept_id_1 = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field domain_concept_id_1 in the FACT_RELATIONSHIP table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1122,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.423020 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_2\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.domain_concept_id_2 = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field domain_concept_id_2 in the FACT_RELATIONSHIP table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1123,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.505062 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = relationship_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.relationship_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field relationship_concept_id in the FACT_RELATIONSHIP table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1124,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.393024 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.place_of_service_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field place_of_service_concept_id in the CARE_SITE table.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1125,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.943084 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.specialty_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field specialty_concept_id in the PROVIDER table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1126,"FAILED":1},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.848078 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.gender_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field gender_concept_id in the PROVIDER table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1127,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.087056 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.cost_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field cost_type_concept_id in the COST table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1128,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.452059 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field drug_concept_id in the DRUG_ERA table.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1129,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213013 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.drug_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field drug_concept_id in the DOSE_ERA table.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1130,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.371039 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.unit_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field unit_concept_id in the DOSE_ERA table.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1131,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.551082 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field condition_concept_id in the CONDITION_ERA table.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1132,"FAILED":0},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.461044 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.gender_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field gender_source_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1133,"FAILED":1},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.551056 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.race_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field race_source_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1134,"FAILED":1},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.274328 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ethnicity_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field ethnicity_source_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1135,"FAILED":1},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.982053 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field visit_source_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1136,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.459057 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field condition_source_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1137,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"2.453025 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field drug_source_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1138,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.535078 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field procedure_source_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1139,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.491030 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field device_source_concept_id in the DEVICE_EXPOSURE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1140,"FAILED":0},{"NUM_VIOLATED_ROWS":11244091,"PCT_VIOLATED_ROWS":0.814,"EXECUTION_TIME":"2.838064 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field measurement_source_concept_id in the MEASUREMENT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1141,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.048058 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field visit_detail_source_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1142,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217012 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.admitting_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field admitting_source_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1143,"FAILED":0},{"NUM_VIOLATED_ROWS":29786,"PCT_VIOLATED_ROWS":0.4815,"EXECUTION_TIME":"0.319971 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field observation_source_concept_id in the OBSERVATION table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1144,"FAILED":1},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"3.337036 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.specialty_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field specialty_source_concept_id in the PROVIDER table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1145,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"11.158204 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_value\r\nstandardConceptFieldName = GENDER_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PERSON.gender_source_value' AS violating_field, PERSON.gender_source_value\r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.GENDER_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT gender_source_value) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the gender_source_value field of the PERSON table mapped to 0.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1146,"FAILED":0},{"NUM_VIOLATED_ROWS":4,"PCT_VIOLATED_ROWS":0.6667,"EXECUTION_TIME":"9.264315 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_value\r\nstandardConceptFieldName = RACE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PERSON.race_source_value' AS violating_field, PERSON.race_source_value\r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.RACE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT race_source_value) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the race_source_value field of the PERSON table mapped to 0.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1147,"FAILED":1},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0.5,"EXECUTION_TIME":"9.165135 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_value\r\nstandardConceptFieldName = ETHNICITY_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PERSON.ethnicity_source_value' AS violating_field, PERSON.ethnicity_source_value\r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ETHNICITY_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT ethnicity_source_value) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the ethnicity_source_value field of the PERSON table mapped to 0.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1148,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"9.825156 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_value\r\nstandardConceptFieldName = VISIT_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_OCCURRENCE.visit_source_value' AS violating_field, VISIT_OCCURRENCE.visit_source_value\r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.VISIT_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT visit_source_value) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the visit_source_value field of the VISIT_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1149,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"8.818151 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_value\r\nstandardConceptFieldName = ADMITTING_SOURCE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_OCCURRENCE.admitting_source_value' AS violating_field, VISIT_OCCURRENCE.admitting_source_value\r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.ADMITTING_SOURCE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT admitting_source_value) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the admitting_source_value field of the VISIT_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1150,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"9.153178 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_source_value\r\nstandardConceptFieldName = DISCHARGE_TO_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_OCCURRENCE.discharge_to_source_value' AS violating_field, VISIT_OCCURRENCE.discharge_to_source_value\r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.DISCHARGE_TO_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT discharge_to_source_value) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the discharge_to_source_value field of the VISIT_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1151,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"8.399127 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_value\r\nstandardConceptFieldName = CONDITION_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'CONDITION_OCCURRENCE.condition_source_value' AS violating_field, CONDITION_OCCURRENCE.condition_source_value\r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT condition_source_value) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the condition_source_value field of the CONDITION_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1152,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"8.763148 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_source_value\r\nstandardConceptFieldName = CONDITION_STATUS_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'CONDITION_OCCURRENCE.condition_status_source_value' AS violating_field, CONDITION_OCCURRENCE.condition_status_source_value\r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT condition_status_source_value) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the condition_status_source_value field of the CONDITION_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1153,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"10.592176 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_value\r\nstandardConceptFieldName = DRUG_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'DRUG_EXPOSURE.drug_source_value' AS violating_field, DRUG_EXPOSURE.drug_source_value\r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.DRUG_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT drug_source_value) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the drug_source_value field of the DRUG_EXPOSURE table mapped to 0.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1154,"FAILED":0},{"NUM_VIOLATED_ROWS":26,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"6.508101 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_source_value\r\nstandardConceptFieldName = ROUTE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'DRUG_EXPOSURE.route_source_value' AS violating_field, DRUG_EXPOSURE.route_source_value\r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.ROUTE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT route_source_value) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the route_source_value field of the DRUG_EXPOSURE table mapped to 0.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1155,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.737111 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_value\r\nstandardConceptFieldName = PROCEDURE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PROCEDURE_OCCURRENCE.procedure_source_value' AS violating_field, PROCEDURE_OCCURRENCE.procedure_source_value\r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT procedure_source_value) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the procedure_source_value field of the PROCEDURE_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1156,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.124113 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_source_value\r\nstandardConceptFieldName = MODIFIER_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PROCEDURE_OCCURRENCE.modifier_source_value' AS violating_field, PROCEDURE_OCCURRENCE.modifier_source_value\r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.MODIFIER_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT modifier_source_value) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the modifier_source_value field of the PROCEDURE_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1157,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"9.032161 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_value\r\nstandardConceptFieldName = DEVICE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'DEVICE_EXPOSURE.device_source_value' AS violating_field, DEVICE_EXPOSURE.device_source_value\r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.DEVICE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT device_source_value) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the device_source_value field of the DEVICE_EXPOSURE table mapped to 0.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1158,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.573104 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_value\r\nstandardConceptFieldName = MEASUREMENT_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'MEASUREMENT.measurement_source_value' AS violating_field, MEASUREMENT.measurement_source_value\r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.MEASUREMENT_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT measurement_source_value) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the measurement_source_value field of the MEASUREMENT table mapped to 0.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1159,"FAILED":0},{"NUM_VIOLATED_ROWS":15,"PCT_VIOLATED_ROWS":0.4839,"EXECUTION_TIME":"6.849150 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_source_value\r\nstandardConceptFieldName = UNIT_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'MEASUREMENT.unit_source_value' AS violating_field, MEASUREMENT.unit_source_value\r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.UNIT_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT unit_source_value) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the unit_source_value field of the MEASUREMENT table mapped to 0.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1160,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"8.929154 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_value\r\nstandardConceptFieldName = VISIT_DETAIL_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_DETAIL.visit_detail_source_value' AS violating_field, VISIT_DETAIL.visit_detail_source_value\r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT visit_detail_source_value) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the visit_detail_source_value field of the VISIT_DETAIL table mapped to 0.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1161,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.929118 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_value\r\nstandardConceptFieldName = ADMITTING_SOURCE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_DETAIL.admitting_source_value' AS violating_field, VISIT_DETAIL.admitting_source_value\r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.ADMITTING_SOURCE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT admitting_source_value) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the admitting_source_value field of the VISIT_DETAIL table mapped to 0.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1162,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.010112 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_source_value\r\nstandardConceptFieldName = DISCHARGE_TO_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_DETAIL.discharge_to_source_value' AS violating_field, VISIT_DETAIL.discharge_to_source_value\r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.DISCHARGE_TO_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT discharge_to_source_value) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the discharge_to_source_value field of the VISIT_DETAIL table mapped to 0.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1163,"FAILED":0},{"NUM_VIOLATED_ROWS":9,"PCT_VIOLATED_ROWS":0.0106,"EXECUTION_TIME":"3.914064 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_value\r\nstandardConceptFieldName = OBSERVATION_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'OBSERVATION.observation_source_value' AS violating_field, OBSERVATION.observation_source_value\r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.OBSERVATION_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT observation_source_value) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the observation_source_value field of the OBSERVATION table mapped to 0.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1164,"FAILED":1},{"NUM_VIOLATED_ROWS":2,"PCT_VIOLATED_ROWS":2,"EXECUTION_TIME":"3.183030 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_source_value\r\nstandardConceptFieldName = UNIT_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'OBSERVATION.unit_source_value' AS violating_field, OBSERVATION.unit_source_value\r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.UNIT_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT unit_source_value) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the unit_source_value field of the OBSERVATION table mapped to 0.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1165,"FAILED":1},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"8.427164 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_source_value\r\nstandardConceptFieldName = QUALIFIER_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'OBSERVATION.qualifier_source_value' AS violating_field, OBSERVATION.qualifier_source_value\r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.QUALIFIER_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT qualifier_source_value) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the qualifier_source_value field of the OBSERVATION table mapped to 0.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1166,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"7.428106 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_source_value\r\nstandardConceptFieldName = SPECIMEN_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'SPECIMEN.specimen_source_value' AS violating_field, SPECIMEN.specimen_source_value\r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.SPECIMEN_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT specimen_source_value) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the specimen_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1167,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"7.312137 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_source_value\r\nstandardConceptFieldName = UNIT_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'SPECIMEN.unit_source_value' AS violating_field, SPECIMEN.unit_source_value\r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.UNIT_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT unit_source_value) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the unit_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1168,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.781116 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_source_value\r\nstandardConceptFieldName = ANATOMIC_SITE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'SPECIMEN.anatomic_site_source_value' AS violating_field, SPECIMEN.anatomic_site_source_value\r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.ANATOMIC_SITE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT anatomic_site_source_value) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the anatomic_site_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1169,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.503151 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_source_value\r\nstandardConceptFieldName = DISEASE_STATUS_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'SPECIMEN.disease_status_source_value' AS violating_field, SPECIMEN.disease_status_source_value\r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.DISEASE_STATUS_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT disease_status_source_value) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the disease_status_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1170,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.796124 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_value\r\nstandardConceptFieldName = SPECIALTY_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PROVIDER.specialty_source_value' AS violating_field, PROVIDER.specialty_source_value\r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.SPECIALTY_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT specialty_source_value) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the specialty_source_value field of the PROVIDER table mapped to 0.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1171,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.628116 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_value\r\nstandardConceptFieldName = GENDER_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PROVIDER.gender_source_value' AS violating_field, PROVIDER.gender_source_value\r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.GENDER_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT gender_source_value) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the gender_source_value field of the PROVIDER table mapped to 0.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1172,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.838117 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_value\r\nstandardConceptFieldName = PAYER_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.payer_source_value' AS violating_field, PAYER_PLAN_PERIOD.payer_source_value\r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.PAYER_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT payer_source_value) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the payer_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1173,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.624141 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_value\r\nstandardConceptFieldName = PLAN_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.plan_source_value' AS violating_field, PAYER_PLAN_PERIOD.plan_source_value\r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.PLAN_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT plan_source_value) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the plan_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1174,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.151098 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_value\r\nstandardConceptFieldName = SPONSOR_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.sponsor_source_value' AS violating_field, PAYER_PLAN_PERIOD.sponsor_source_value\r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.SPONSOR_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT sponsor_source_value) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the sponsor_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1175,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.275013 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_value\r\nstandardConceptFieldName = STOP_REASON_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.stop_reason_source_value' AS violating_field, PAYER_PLAN_PERIOD.stop_reason_source_value\r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.STOP_REASON_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT stop_reason_source_value) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the stop_reason_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1176,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.412075 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = year_of_birth\r\nplausibleValueLow = 1850\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, PERSON.*\r\n\t\tfrom cdm.PERSON\r\n    where year_of_birth < 1850\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n\twhere year_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the year_of_birth field of the PERSON table less than 1850.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1177,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.421053 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = month_of_birth\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, PERSON.*\r\n\t\tfrom cdm.PERSON\r\n    where month_of_birth < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n\twhere month_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the month_of_birth field of the PERSON table less than 1.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"month_of_birth","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1178,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.773077 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = day_of_birth\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, PERSON.*\r\n\t\tfrom cdm.PERSON\r\n    where day_of_birth < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n\twhere day_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the day_of_birth field of the PERSON table less than 1.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"day_of_birth","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1179,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.030093 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = birth_datetime\r\nplausibleValueLow = '1850-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.birth_datetime' AS violating_field, PERSON.*\r\n\t\tfrom cdm.PERSON\r\n    where birth_datetime < '1850-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n\twhere birth_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the birth_datetime field of the PERSON table less than '1850-01-01'.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"birth_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1180,"FAILED":0},{"NUM_VIOLATED_ROWS":8,"PCT_VIOLATED_ROWS":0.0008,"EXECUTION_TIME":"3.360042 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.*\r\n\t\tfrom cdm.OBSERVATION_PERIOD\r\n    where observation_period_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n\twhere observation_period_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_start_date field of the OBSERVATION_PERIOD table less than '1950-01-01'.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1181,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.862047 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.*\r\n\t\tfrom cdm.OBSERVATION_PERIOD\r\n    where observation_period_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n\twhere observation_period_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_end_date field of the OBSERVATION_PERIOD table less than '1950-01-01'.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1182,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.210070 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.*\r\n\t\tfrom cdm.VISIT_OCCURRENCE\r\n    where visit_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere visit_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_date field of the VISIT_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1183,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.729074 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n\t\tfrom cdm.VISIT_OCCURRENCE\r\n    where visit_start_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere visit_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_datetime field of the VISIT_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1184,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.158063 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.*\r\n\t\tfrom cdm.VISIT_OCCURRENCE\r\n    where visit_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere visit_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_date field of the VISIT_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1185,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.191068 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n\t\tfrom cdm.VISIT_OCCURRENCE\r\n    where visit_end_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere visit_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_datetime field of the VISIT_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1186,"FAILED":0},{"NUM_VIOLATED_ROWS":8,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.446059 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n\t\tfrom cdm.CONDITION_OCCURRENCE\r\n    where condition_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere condition_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_date field of the CONDITION_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1187,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.211115 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n\t\tfrom cdm.CONDITION_OCCURRENCE\r\n    where condition_start_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere condition_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_datetime field of the CONDITION_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1188,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.595105 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n\t\tfrom cdm.CONDITION_OCCURRENCE\r\n    where condition_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere condition_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_date field of the CONDITION_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1189,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.425126 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n\t\tfrom cdm.CONDITION_OCCURRENCE\r\n    where condition_end_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere condition_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_datetime field of the CONDITION_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1190,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.440025 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where drug_exposure_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere drug_exposure_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_date field of the DRUG_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1191,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.444115 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where drug_exposure_start_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere drug_exposure_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_datetime field of the DRUG_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1192,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.840044 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where drug_exposure_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere drug_exposure_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_date field of the DRUG_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1193,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.586107 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where drug_exposure_end_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere drug_exposure_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_datetime field of the DRUG_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1194,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.063092 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = verbatim_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where verbatim_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere verbatim_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the verbatim_end_date field of the DRUG_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"verbatim_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1195,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.807098 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = refills\r\nplausibleValueLow = 0\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where refills < 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere refills is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the refills field of the DRUG_EXPOSURE table less than 0.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"refills","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1196,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.248105 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = quantity\r\nplausibleValueLow = 0\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.quantity' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where quantity < 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere quantity is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the DRUG_EXPOSURE table less than 0.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1197,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.854079 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = days_supply\r\nplausibleValueLow = 0\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where days_supply < 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere days_supply is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the days_supply field of the DRUG_EXPOSURE table less than 0.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"days_supply","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1198,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.363681 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n\t\tfrom cdm.PROCEDURE_OCCURRENCE\r\n    where procedure_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\twhere procedure_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_date field of the PROCEDURE_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1199,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.327073 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n\t\tfrom cdm.PROCEDURE_OCCURRENCE\r\n    where procedure_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\twhere procedure_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_datetime field of the PROCEDURE_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1200,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.304106 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = quantity\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.quantity' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n\t\tfrom cdm.PROCEDURE_OCCURRENCE\r\n    where quantity < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\twhere quantity is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the PROCEDURE_OCCURRENCE table less than 1.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1201,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.146082 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.*\r\n\t\tfrom cdm.DEVICE_EXPOSURE\r\n    where device_exposure_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere device_exposure_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_date field of the DEVICE_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1202,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.797020 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n\t\tfrom cdm.DEVICE_EXPOSURE\r\n    where device_exposure_start_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere device_exposure_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_datetime field of the DEVICE_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1203,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.203118 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, DEVICE_EXPOSURE.*\r\n\t\tfrom cdm.DEVICE_EXPOSURE\r\n    where device_exposure_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere device_exposure_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_date field of the DEVICE_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1204,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.514105 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n\t\tfrom cdm.DEVICE_EXPOSURE\r\n    where device_exposure_end_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere device_exposure_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_datetime field of the DEVICE_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1205,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.850084 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = quantity\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.quantity' AS violating_field, DEVICE_EXPOSURE.*\r\n\t\tfrom cdm.DEVICE_EXPOSURE\r\n    where quantity < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere quantity is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the DEVICE_EXPOSURE table less than 1.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1206,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.340071 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, MEASUREMENT.*\r\n\t\tfrom cdm.MEASUREMENT\r\n    where measurement_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n\twhere measurement_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the measurement_date field of the MEASUREMENT table less than '1950-01-01'.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1207,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.530048 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.*\r\n\t\tfrom cdm.VISIT_DETAIL\r\n    where visit_detail_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere visit_detail_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_date field of the VISIT_DETAIL table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1208,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.689134 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, VISIT_DETAIL.*\r\n\t\tfrom cdm.VISIT_DETAIL\r\n    where visit_detail_start_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere visit_detail_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_datetime field of the VISIT_DETAIL table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1209,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.992064 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.*\r\n\t\tfrom cdm.VISIT_DETAIL\r\n    where visit_detail_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere visit_detail_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_date field of the VISIT_DETAIL table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1210,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.140115 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, VISIT_DETAIL.*\r\n\t\tfrom cdm.VISIT_DETAIL\r\n    where visit_detail_end_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere visit_detail_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_datetime field of the VISIT_DETAIL table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1211,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.932048 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_date' AS violating_field, NOTE.*\r\n\t\tfrom cdm.NOTE\r\n    where note_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n\twhere note_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_date field of the NOTE table less than '1950-01-01'.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1212,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.717112 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_datetime' AS violating_field, NOTE.*\r\n\t\tfrom cdm.NOTE\r\n    where note_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n\twhere note_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_datetime field of the NOTE table less than '1950-01-01'.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1213,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.981087 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_datetime' AS violating_field, NOTE_NLP.*\r\n\t\tfrom cdm.NOTE_NLP\r\n    where nlp_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n\twhere nlp_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the nlp_datetime field of the NOTE_NLP table less than '1950-01-01'.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1214,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.875049 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, OBSERVATION.*\r\n\t\tfrom cdm.OBSERVATION\r\n    where observation_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n\twhere observation_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_date field of the OBSERVATION table less than '1950-01-01'.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1215,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.300073 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_datetime' AS violating_field, OBSERVATION.*\r\n\t\tfrom cdm.OBSERVATION\r\n    where observation_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n\twhere observation_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_datetime field of the OBSERVATION table less than '1950-01-01'.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1216,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.534192 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, SPECIMEN.*\r\n\t\tfrom cdm.SPECIMEN\r\n    where specimen_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n\twhere specimen_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_date field of the SPECIMEN table less than '1950-01-01'.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1217,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.482081 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_datetime' AS violating_field, SPECIMEN.*\r\n\t\tfrom cdm.SPECIMEN\r\n    where specimen_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n\twhere specimen_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_datetime field of the SPECIMEN table less than '1950-01-01'.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1218,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.329053 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = quantity\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.quantity' AS violating_field, SPECIMEN.*\r\n\t\tfrom cdm.SPECIMEN\r\n    where quantity < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n\twhere quantity is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the SPECIMEN table less than 1.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1219,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.721035 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.*\r\n\t\tfrom cdm.DRUG_ERA\r\n    where drug_era_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n\twhere drug_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_start_date field of the DRUG_ERA table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1220,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.950051 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_end_date' AS violating_field, DRUG_ERA.*\r\n\t\tfrom cdm.DRUG_ERA\r\n    where drug_era_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n\twhere drug_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_end_date field of the DRUG_ERA table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1221,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.306100 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_exposure_count\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_exposure_count' AS violating_field, DRUG_ERA.*\r\n\t\tfrom cdm.DRUG_ERA\r\n    where drug_exposure_count < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n\twhere drug_exposure_count is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_count field of the DRUG_ERA table less than 1.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_exposure_count","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1222,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.991107 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = gap_days\r\nplausibleValueLow = 0\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.gap_days' AS violating_field, DRUG_ERA.*\r\n\t\tfrom cdm.DRUG_ERA\r\n    where gap_days < 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n\twhere gap_days is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the gap_days field of the DRUG_ERA table less than 0.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"gap_days","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1223,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.123058 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_value\r\nplausibleValueLow = 0\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_value' AS violating_field, DOSE_ERA.*\r\n\t\tfrom cdm.DOSE_ERA\r\n    where dose_value < 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n\twhere dose_value is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_value field of the DOSE_ERA table less than 0.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_value","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1224,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.762122 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.*\r\n\t\tfrom cdm.DOSE_ERA\r\n    where dose_era_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n\twhere dose_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_start_date field of the DOSE_ERA table less than '1950-01-01'.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1225,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.062060 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_end_date' AS violating_field, DOSE_ERA.*\r\n\t\tfrom cdm.DOSE_ERA\r\n    where dose_era_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n\twhere dose_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_end_date field of the DOSE_ERA table less than '1950-01-01'.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1226,"FAILED":0},{"NUM_VIOLATED_ROWS":8,"PCT_VIOLATED_ROWS":0.0001,"EXECUTION_TIME":"2.669024 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.*\r\n\t\tfrom cdm.CONDITION_ERA\r\n    where condition_era_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n\twhere condition_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_start_date field of the CONDITION_ERA table less than '1950-01-01'.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1227,"FAILED":1},{"NUM_VIOLATED_ROWS":8,"PCT_VIOLATED_ROWS":0.0001,"EXECUTION_TIME":"2.796055 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_end_date' AS violating_field, CONDITION_ERA.*\r\n\t\tfrom cdm.CONDITION_ERA\r\n    where condition_era_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n\twhere condition_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_end_date field of the CONDITION_ERA table less than '1950-01-01'.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1228,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.515223 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_occurrence_count\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_occurrence_count' AS violating_field, CONDITION_ERA.*\r\n\t\tfrom cdm.CONDITION_ERA\r\n    where condition_occurrence_count < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n\twhere condition_occurrence_count is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_occurrence_count field of the CONDITION_ERA table less than 1.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_occurrence_count","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1229,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.825082 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = year_of_birth\r\nplausibleValueHigh = YEAR(GETDATE())+1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, PERSON.*\r\n    from cdm.PERSON\r\n    where year_of_birth > EXTRACT(YEAR FROM CURRENT_DATE)+1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n  where year_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the year_of_birth field of the PERSON table greater than YEAR(GETDATE())+1.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1230,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.549060 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = month_of_birth\r\nplausibleValueHigh = 12\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, PERSON.*\r\n    from cdm.PERSON\r\n    where month_of_birth > 12\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n  where month_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the month_of_birth field of the PERSON table greater than 12.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"month_of_birth","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1231,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.432074 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = day_of_birth\r\nplausibleValueHigh = 31\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, PERSON.*\r\n    from cdm.PERSON\r\n    where day_of_birth > 31\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n  where day_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the day_of_birth field of the PERSON table greater than 31.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"day_of_birth","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1232,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.802039 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = birth_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.birth_datetime' AS violating_field, PERSON.*\r\n    from cdm.PERSON\r\n    where birth_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n  where birth_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the birth_datetime field of the PERSON table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"birth_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1233,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.306072 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    where observation_period_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n  where observation_period_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_start_date field of the OBSERVATION_PERIOD table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1234,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0.0001,"EXECUTION_TIME":"2.660040 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    where observation_period_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n  where observation_period_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_end_date field of the OBSERVATION_PERIOD table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1235,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.671089 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    where visit_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n  where visit_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_date field of the VISIT_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1236,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.177031 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    where visit_start_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n  where visit_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_datetime field of the VISIT_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1237,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.371074 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    where visit_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n  where visit_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_date field of the VISIT_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1238,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.678020 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    where visit_end_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n  where visit_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_datetime field of the VISIT_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1239,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.219073 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    where condition_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n  where condition_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_date field of the CONDITION_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1240,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.601016 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    where condition_start_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n  where condition_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_datetime field of the CONDITION_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1241,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.500059 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    where condition_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n  where condition_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_date field of the CONDITION_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1242,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.470026 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    where condition_end_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n  where condition_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_datetime field of the CONDITION_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1243,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.727074 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where drug_exposure_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where drug_exposure_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_date field of the DRUG_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1244,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.406075 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where drug_exposure_start_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where drug_exposure_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_datetime field of the DRUG_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1245,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.652035 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where drug_exposure_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where drug_exposure_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_date field of the DRUG_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1246,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.608070 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where drug_exposure_end_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where drug_exposure_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_datetime field of the DRUG_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1247,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.432061 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = verbatim_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where verbatim_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where verbatim_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the verbatim_end_date field of the DRUG_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"verbatim_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1248,"FAILED":0},{"NUM_VIOLATED_ROWS":27,"PCT_VIOLATED_ROWS":0.0001,"EXECUTION_TIME":"2.352019 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = refills\r\nplausibleValueHigh = 12\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where refills > 12\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where refills is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the refills field of the DRUG_EXPOSURE table greater than 12.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"refills","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1249,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.127060 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = quantity\r\nplausibleValueHigh = 1095\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.quantity' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where quantity > 1095\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where quantity is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the DRUG_EXPOSURE table greater than 1095.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1250,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.940048 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = days_supply\r\nplausibleValueHigh = 365\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where days_supply > 365\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where days_supply is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the days_supply field of the DRUG_EXPOSURE table greater than 365.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"days_supply","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1251,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.590032 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    where procedure_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n  where procedure_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_date field of the PROCEDURE_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1252,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.812061 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    where procedure_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n  where procedure_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_datetime field of the PROCEDURE_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1253,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.290057 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    where device_exposure_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n  where device_exposure_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_date field of the DEVICE_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1254,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.345073 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    where device_exposure_start_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n  where device_exposure_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_datetime field of the DEVICE_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1255,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.858181 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    where device_exposure_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n  where device_exposure_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_date field of the DEVICE_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1256,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.246141 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    where device_exposure_end_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n  where device_exposure_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_datetime field of the DEVICE_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1257,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":7.2394e-008,"EXECUTION_TIME":"2.517066 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, MEASUREMENT.*\r\n    from cdm.MEASUREMENT\r\n    where measurement_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n  where measurement_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the measurement_date field of the MEASUREMENT table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1258,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.148052 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    where visit_detail_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n  where visit_detail_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_date field of the VISIT_DETAIL table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1259,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.199019 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    where visit_detail_start_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n  where visit_detail_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_datetime field of the VISIT_DETAIL table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1260,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.144061 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    where visit_detail_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n  where visit_detail_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_date field of the VISIT_DETAIL table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1261,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.123056 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    where visit_detail_end_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n  where visit_detail_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_datetime field of the VISIT_DETAIL table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1262,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.350088 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_date' AS violating_field, NOTE.*\r\n    from cdm.NOTE\r\n    where note_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n  where note_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_date field of the NOTE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1263,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.451035 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_datetime' AS violating_field, NOTE.*\r\n    from cdm.NOTE\r\n    where note_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n  where note_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_datetime field of the NOTE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1264,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.923051 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_datetime' AS violating_field, NOTE_NLP.*\r\n    from cdm.NOTE_NLP\r\n    where nlp_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n  where nlp_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the nlp_datetime field of the NOTE_NLP table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1265,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.381057 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, OBSERVATION.*\r\n    from cdm.OBSERVATION\r\n    where observation_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n  where observation_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_date field of the OBSERVATION table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1266,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.419212 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_datetime' AS violating_field, OBSERVATION.*\r\n    from cdm.OBSERVATION\r\n    where observation_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n  where observation_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_datetime field of the OBSERVATION table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1267,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.781041 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, SPECIMEN.*\r\n    from cdm.SPECIMEN\r\n    where specimen_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n  where specimen_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_date field of the SPECIMEN table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1268,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.195052 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_datetime' AS violating_field, SPECIMEN.*\r\n    from cdm.SPECIMEN\r\n    where specimen_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n  where specimen_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_datetime field of the SPECIMEN table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1269,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.378092 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.*\r\n    from cdm.DRUG_ERA\r\n    where drug_era_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n  where drug_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_start_date field of the DRUG_ERA table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1270,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.150006 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_end_date' AS violating_field, DRUG_ERA.*\r\n    from cdm.DRUG_ERA\r\n    where drug_era_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n  where drug_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_end_date field of the DRUG_ERA table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1271,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.574053 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.*\r\n    from cdm.DOSE_ERA\r\n    where dose_era_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n  where dose_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_start_date field of the DOSE_ERA table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1272,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.205104 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_end_date' AS violating_field, DOSE_ERA.*\r\n    from cdm.DOSE_ERA\r\n    where dose_era_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n  where dose_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_end_date field of the DOSE_ERA table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1273,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.104125 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.*\r\n    from cdm.CONDITION_ERA\r\n    where condition_era_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n  where condition_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_start_date field of the CONDITION_ERA table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1274,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.313060 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_end_date' AS violating_field, CONDITION_ERA.*\r\n    from cdm.CONDITION_ERA\r\n    where condition_era_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n  where condition_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_end_date field of the CONDITION_ERA table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1275,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.179097 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.OBSERVATION_PERIOD.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > observation_period_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_start_date field of the OBSERVATION_PERIOD that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1276,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.331051 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\nplausibleTemporalAfterTableName = OBSERVATION_PERIOD\r\nplausibleTemporalAfterFieldName = OBSERVATION_PERIOD_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    \r\n    where OBSERVATION_PERIOD_START_DATE > observation_period_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_end_date field of the OBSERVATION_PERIOD that occurs prior to the date in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1277,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.366164 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.VISIT_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > visit_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_date field of the VISIT_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1278,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.388071 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.VISIT_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > visit_start_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_datetime field of the VISIT_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1279,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.968056 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\r\nplausibleTemporalAfterFieldName = VISIT_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    \r\n    where VISIT_START_DATE > visit_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_date field of the VISIT_OCCURRENCE that occurs prior to the date in the VISIT_START_DATE field of the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1280,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.134064 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_datetime\r\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\r\nplausibleTemporalAfterFieldName = VISIT_START_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    \r\n    where VISIT_START_DATETIME > visit_end_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_datetime field of the VISIT_OCCURRENCE that occurs prior to the date in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1281,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.141118 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.CONDITION_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > condition_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_date field of the CONDITION_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1282,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.881061 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.CONDITION_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > condition_start_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_datetime field of the CONDITION_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1283,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.793028 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_date\r\nplausibleTemporalAfterTableName = CONDITION_OCCURRENCE\r\nplausibleTemporalAfterFieldName = CONDITION_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    \r\n    where CONDITION_START_DATE > condition_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_date field of the CONDITION_OCCURRENCE that occurs prior to the date in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1284,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.746041 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_datetime\r\nplausibleTemporalAfterTableName = CONDITION_OCCURRENCE\r\nplausibleTemporalAfterFieldName = CONDITION_START_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    \r\n    where CONDITION_START_DATETIME > condition_end_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_datetime field of the CONDITION_OCCURRENCE that occurs prior to the date in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1285,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.379063 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DRUG_EXPOSURE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > drug_exposure_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_date field of the DRUG_EXPOSURE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1286,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.698033 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DRUG_EXPOSURE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > drug_exposure_start_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_datetime field of the DRUG_EXPOSURE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1287,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.164063 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\nplausibleTemporalAfterTableName = DRUG_EXPOSURE\r\nplausibleTemporalAfterFieldName = DRUG_EXPOSURE_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    \r\n    where DRUG_EXPOSURE_START_DATE > drug_exposure_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_date field of the DRUG_EXPOSURE that occurs prior to the date in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1288,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.352036 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_datetime\r\nplausibleTemporalAfterTableName = DRUG_EXPOSURE\r\nplausibleTemporalAfterFieldName = DRUG_EXPOSURE_START_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    \r\n    where DRUG_EXPOSURE_START_DATETIME > drug_exposure_end_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_datetime field of the DRUG_EXPOSURE that occurs prior to the date in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1289,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.200062 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = verbatim_end_date\r\nplausibleTemporalAfterTableName = DRUG_EXPOSURE\r\nplausibleTemporalAfterFieldName = DRUG_EXPOSURE_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    \r\n    where DRUG_EXPOSURE_START_DATE > verbatim_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the verbatim_end_date field of the DRUG_EXPOSURE that occurs prior to the date in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"verbatim_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1290,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.569075 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.PROCEDURE_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > procedure_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_date field of the PROCEDURE_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1291,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.581036 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.PROCEDURE_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > procedure_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_datetime field of the PROCEDURE_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1292,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.943152 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DEVICE_EXPOSURE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > device_exposure_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_date field of the DEVICE_EXPOSURE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1293,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.041111 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DEVICE_EXPOSURE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > device_exposure_start_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_datetime field of the DEVICE_EXPOSURE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1294,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.531061 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_date\r\nplausibleTemporalAfterTableName = DEVICE_EXPOSURE\r\nplausibleTemporalAfterFieldName = DEVICE_EXPOSURE_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    \r\n    where DEVICE_EXPOSURE_START_DATE > device_exposure_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_date field of the DEVICE_EXPOSURE that occurs prior to the date in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1295,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.865045 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_datetime\r\nplausibleTemporalAfterTableName = DEVICE_EXPOSURE\r\nplausibleTemporalAfterFieldName = DEVICE_EXPOSURE_START_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    \r\n    where DEVICE_EXPOSURE_START_DATETIME > device_exposure_end_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_datetime field of the DEVICE_EXPOSURE that occurs prior to the date in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1296,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.118062 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, MEASUREMENT.*\r\n    from cdm.MEASUREMENT\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.MEASUREMENT.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > measurement_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the measurement_date field of the MEASUREMENT that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1297,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.135093 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.VISIT_DETAIL.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > visit_detail_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_date field of the VISIT_DETAIL that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1298,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.046110 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.VISIT_DETAIL.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > visit_detail_start_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_datetime field of the VISIT_DETAIL that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1299,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.234119 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\r\nplausibleTemporalAfterFieldName = VISIT_DETAIL_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    \r\n\t\tjoin cdm.VISIT_OCCURRENCE\r\n\t\t\ton cdm.VISIT_DETAIL.person_id = cdm.VISIT_OCCURRENCE.person_id\r\n\t\t\r\n    where VISIT_DETAIL_START_DATE > visit_detail_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_date field of the VISIT_DETAIL that occurs prior to the date in the VISIT_DETAIL_START_DATE field of the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1300,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.384042 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_datetime\r\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\r\nplausibleTemporalAfterFieldName = VISIT_DETAIL_START_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    \r\n\t\tjoin cdm.VISIT_OCCURRENCE\r\n\t\t\ton cdm.VISIT_DETAIL.person_id = cdm.VISIT_OCCURRENCE.person_id\r\n\t\t\r\n    where VISIT_DETAIL_START_DATETIME > visit_detail_end_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_datetime field of the VISIT_DETAIL that occurs prior to the date in the VISIT_DETAIL_START_DATETIME field of the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1301,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.400055 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_date' AS violating_field, NOTE.*\r\n    from cdm.NOTE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.NOTE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > note_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_date field of the NOTE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1302,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.374021 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_datetime' AS violating_field, NOTE.*\r\n    from cdm.NOTE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.NOTE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > note_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_datetime field of the NOTE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1303,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.806042 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, OBSERVATION.*\r\n    from cdm.OBSERVATION\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.OBSERVATION.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > observation_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_date field of the OBSERVATION that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1304,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.375048 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_datetime' AS violating_field, OBSERVATION.*\r\n    from cdm.OBSERVATION\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.OBSERVATION.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > observation_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_datetime field of the OBSERVATION that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1305,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.791049 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, SPECIMEN.*\r\n    from cdm.SPECIMEN\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.SPECIMEN.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > specimen_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_date field of the SPECIMEN that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1306,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.950066 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_datetime' AS violating_field, SPECIMEN.*\r\n    from cdm.SPECIMEN\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.SPECIMEN.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > specimen_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_datetime field of the SPECIMEN that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1307,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.228623 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_end_date\r\nplausibleTemporalAfterTableName = PAYER_PLAN_PERIOD\r\nplausibleTemporalAfterFieldName = PAYER_PLAN_PERIOD_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_end_date' AS violating_field, PAYER_PLAN_PERIOD.*\r\n    from cdm.PAYER_PLAN_PERIOD\r\n    \r\n    where PAYER_PLAN_PERIOD_START_DATE > payer_plan_period_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the payer_plan_period_end_date field of the PAYER_PLAN_PERIOD that occurs prior to the date in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1308,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.710055 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.*\r\n    from cdm.DRUG_ERA\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DRUG_ERA.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > drug_era_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_start_date field of the DRUG_ERA that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1309,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.808063 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_end_date\r\nplausibleTemporalAfterTableName = DRUG_ERA\r\nplausibleTemporalAfterFieldName = DRUG_ERA_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_end_date' AS violating_field, DRUG_ERA.*\r\n    from cdm.DRUG_ERA\r\n    \r\n    where DRUG_ERA_START_DATE > drug_era_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_end_date field of the DRUG_ERA that occurs prior to the date in the DRUG_ERA_START_DATE field of the DRUG_ERA table.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1310,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.259015 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.*\r\n    from cdm.DOSE_ERA\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DOSE_ERA.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > dose_era_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_start_date field of the DOSE_ERA that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1311,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.822061 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_end_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_end_date' AS violating_field, DOSE_ERA.*\r\n    from cdm.DOSE_ERA\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DOSE_ERA.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > dose_era_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_end_date field of the DOSE_ERA that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1312,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.979131 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.*\r\n    from cdm.CONDITION_ERA\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.CONDITION_ERA.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > condition_era_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_start_date field of the CONDITION_ERA that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1313,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.989073 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_end_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_end_date' AS violating_field, CONDITION_ERA.*\r\n    from cdm.CONDITION_ERA\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.CONDITION_ERA.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > condition_era_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleTemporalAfter","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_end_date field of the CONDITION_ERA that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1314,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"10.356197 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    join cdm.death on cdm.OBSERVATION_PERIOD.person_id = cdm.death.person_id\r\n    where observation_period_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the observation_period_start_date field of the OBSERVATION_PERIOD table that occurs after death.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1315,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.151063 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    join cdm.death on cdm.OBSERVATION_PERIOD.person_id = cdm.death.person_id\r\n    where observation_period_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the observation_period_end_date field of the OBSERVATION_PERIOD table that occurs after death.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1316,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.837081 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    join cdm.death on cdm.VISIT_OCCURRENCE.person_id = cdm.death.person_id\r\n    where visit_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_start_date field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1317,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.927053 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    join cdm.death on cdm.VISIT_OCCURRENCE.person_id = cdm.death.person_id\r\n    where visit_start_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_start_datetime field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1318,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.299999 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    join cdm.death on cdm.VISIT_OCCURRENCE.person_id = cdm.death.person_id\r\n    where visit_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_end_date field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1319,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.384092 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    join cdm.death on cdm.VISIT_OCCURRENCE.person_id = cdm.death.person_id\r\n    where visit_end_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_end_datetime field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1320,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"8.911133 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    join cdm.death on cdm.CONDITION_OCCURRENCE.person_id = cdm.death.person_id\r\n    where condition_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_start_date field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1321,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.669037 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    join cdm.death on cdm.CONDITION_OCCURRENCE.person_id = cdm.death.person_id\r\n    where condition_start_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_start_datetime field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1322,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.142032 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    join cdm.death on cdm.CONDITION_OCCURRENCE.person_id = cdm.death.person_id\r\n    where condition_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_end_date field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1323,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.696036 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    join cdm.death on cdm.CONDITION_OCCURRENCE.person_id = cdm.death.person_id\r\n    where condition_end_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_end_datetime field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1324,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.453271 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    join cdm.death on cdm.DRUG_EXPOSURE.person_id = cdm.death.person_id\r\n    where drug_exposure_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_start_date field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1325,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.089038 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    join cdm.death on cdm.DRUG_EXPOSURE.person_id = cdm.death.person_id\r\n    where drug_exposure_start_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_start_datetime field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1326,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.906064 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    join cdm.death on cdm.DRUG_EXPOSURE.person_id = cdm.death.person_id\r\n    where drug_exposure_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_end_date field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1327,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.132041 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    join cdm.death on cdm.DRUG_EXPOSURE.person_id = cdm.death.person_id\r\n    where drug_exposure_end_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_end_datetime field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1328,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.924051 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = verbatim_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    join cdm.death on cdm.DRUG_EXPOSURE.person_id = cdm.death.person_id\r\n    where verbatim_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the verbatim_end_date field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"verbatim_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1329,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.117100 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    join cdm.death on cdm.PROCEDURE_OCCURRENCE.person_id = cdm.death.person_id\r\n    where procedure_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the procedure_date field of the PROCEDURE_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1330,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.573051 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    join cdm.death on cdm.PROCEDURE_OCCURRENCE.person_id = cdm.death.person_id\r\n    where procedure_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the procedure_datetime field of the PROCEDURE_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1331,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"8.267157 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    join cdm.death on cdm.DEVICE_EXPOSURE.person_id = cdm.death.person_id\r\n    where device_exposure_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_start_date field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1332,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.469049 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    join cdm.death on cdm.DEVICE_EXPOSURE.person_id = cdm.death.person_id\r\n    where device_exposure_start_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_start_datetime field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1333,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.026092 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    join cdm.death on cdm.DEVICE_EXPOSURE.person_id = cdm.death.person_id\r\n    where device_exposure_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_end_date field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1334,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.294777 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    join cdm.death on cdm.DEVICE_EXPOSURE.person_id = cdm.death.person_id\r\n    where device_exposure_end_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_end_datetime field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1335,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.871095 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    join cdm.death on cdm.VISIT_DETAIL.person_id = cdm.death.person_id\r\n    where visit_detail_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_start_date field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1336,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.437026 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    join cdm.death on cdm.VISIT_DETAIL.person_id = cdm.death.person_id\r\n    where visit_detail_start_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_start_datetime field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1337,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"3.164083 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    join cdm.death on cdm.VISIT_DETAIL.person_id = cdm.death.person_id\r\n    where visit_detail_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_end_date field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1338,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"2.633087 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    join cdm.death on cdm.VISIT_DETAIL.person_id = cdm.death.person_id\r\n    where visit_detail_end_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_end_datetime field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1339,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.112128 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.*\r\n    from cdm.DRUG_ERA\r\n    join cdm.death on cdm.DRUG_ERA.person_id = cdm.death.person_id\r\n    where drug_era_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_era_start_date field of the DRUG_ERA table that occurs after death.","CDM_TABLE_NAME":"DRUG_ERA","CDM_FIELD_NAME":"drug_era_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1340,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.688165 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.*\r\n    from cdm.DOSE_ERA\r\n    join cdm.death on cdm.DOSE_ERA.person_id = cdm.death.person_id\r\n    where dose_era_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the dose_era_start_date field of the DOSE_ERA table that occurs after death.","CDM_TABLE_NAME":"DOSE_ERA","CDM_FIELD_NAME":"dose_era_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1341,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"6.498329 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.*\r\n    from cdm.CONDITION_ERA\r\n    join cdm.death on cdm.CONDITION_ERA.person_id = cdm.death.person_id\r\n    where condition_era_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_era_start_date field of the CONDITION_ERA table that occurs after death.","CDM_TABLE_NAME":"CONDITION_ERA","CDM_FIELD_NAME":"condition_era_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1342,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.491150 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_LOW - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value < plausible low value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3004410\r\nunitConceptId = 8554\r\nplausibleValueLow =  4.0\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3004410\r\n\t\tAND unit_concept_id = 8554\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number <  4.0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3004410\r\n\tAND unit_concept_id = 8554\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3004410 (Hemoglobin A1c/Hemoglobin.total in Blood) and UNIT_CONCEPT_ID 8554 (percent), the number and percent of records that have a value less than  4.0.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3004410","SQL_FILE":"concept_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1343,"FAILED":0},{"NUM_VIOLATED_ROWS":26,"PCT_VIOLATED_ROWS":0.0001,"EXECUTION_TIME":"5.849134 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_LOW - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value < plausible low value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3036277\r\nunitConceptId = 8582\r\nplausibleValueLow =  1.0\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3036277\r\n\t\tAND unit_concept_id = 8582\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number <  1.0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3036277\r\n\tAND unit_concept_id = 8582\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3036277 (Body height) and UNIT_CONCEPT_ID 8582 (centimeter), the number and percent of records that have a value less than  1.0.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3036277","SQL_FILE":"concept_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1344,"FAILED":0},{"NUM_VIOLATED_ROWS":3052,"PCT_VIOLATED_ROWS":0.0102,"EXECUTION_TIME":"3.124078 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_LOW - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value < plausible low value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3016723\r\nunitConceptId = 8840\r\nplausibleValueLow =  0.1\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3016723\r\n\t\tAND unit_concept_id = 8840\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number <  0.1\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3016723\r\n\tAND unit_concept_id = 8840\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3016723 (Creatinine [Mass/volume] in Serum or Plasma) and UNIT_CONCEPT_ID 8840 (milligram per deciliter), the number and percent of records that have a value less than  0.1.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3016723","SQL_FILE":"concept_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1345,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.340976 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_LOW - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value < plausible low value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3004249\r\nunitConceptId = 8876\r\nplausibleValueLow = 60.0\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3004249\r\n\t\tAND unit_concept_id = 8876\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number < 60.0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3004249\r\n\tAND unit_concept_id = 8876\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3004249 (Systolic blood pressure) and UNIT_CONCEPT_ID 8876 (millimeter mercury column), the number and percent of records that have a value less than 60.0.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3004249","SQL_FILE":"concept_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1346,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.342197 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_LOW - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value < plausible low value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3012888\r\nunitConceptId = 8876\r\nplausibleValueLow = 30.0\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3012888\r\n\t\tAND unit_concept_id = 8876\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number < 30.0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3012888\r\n\tAND unit_concept_id = 8876\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3012888 (Diastolic blood pressure) and UNIT_CONCEPT_ID 8876 (millimeter mercury column), the number and percent of records that have a value less than 30.0.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3012888","SQL_FILE":"concept_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1347,"FAILED":0},{"NUM_VIOLATED_ROWS":105,"PCT_VIOLATED_ROWS":0.0003,"EXECUTION_TIME":"0.351020 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_LOW - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value < plausible low value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3025315\r\nunitConceptId = 9529\r\nplausibleValueLow =  1.0\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3025315\r\n\t\tAND unit_concept_id = 9529\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number <  1.0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3025315\r\n\tAND unit_concept_id = 9529\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3025315 (Body weight) and UNIT_CONCEPT_ID 9529 (kilogram), the number and percent of records that have a value less than  1.0.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3025315","SQL_FILE":"concept_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1348,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_LOW - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value < plausible low value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3038553\r\nunitConceptId = 9531\r\nplausibleValueLow = 10.0\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3038553\r\n\t\tAND unit_concept_id = 9531\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number < 10.0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3038553\r\n\tAND unit_concept_id = 9531\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3038553 (Body mass index (BMI) [Ratio]) and UNIT_CONCEPT_ID 9531 (kilogram per square meter), the number and percent of records that have a value less than 10.0.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3038553","SQL_FILE":"concept_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1349,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0.0006,"EXECUTION_TIME":"2.591049 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_HIGH - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value > plausible high value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3004410\r\nunitConceptId = 8554\r\nplausibleValueHigh =  15\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3004410\r\n\t\tAND unit_concept_id = 8554\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number >  15\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3004410\r\n\tAND unit_concept_id = 8554\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3004410 (Hemoglobin A1c/Hemoglobin.total in Blood) and UNIT_CONCEPT_ID 8554 (percent), the number and percent of records that have a value less than  15.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3004410","SQL_FILE":"concept_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1350,"FAILED":0},{"NUM_VIOLATED_ROWS":26,"PCT_VIOLATED_ROWS":0.0001,"EXECUTION_TIME":"2.683090 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_HIGH - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value > plausible high value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3036277\r\nunitConceptId = 8582\r\nplausibleValueHigh = 272\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3036277\r\n\t\tAND unit_concept_id = 8582\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number > 272\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3036277\r\n\tAND unit_concept_id = 8582\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3036277 (Body height) and UNIT_CONCEPT_ID 8582 (centimeter), the number and percent of records that have a value less than 272.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3036277","SQL_FILE":"concept_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1351,"FAILED":0},{"NUM_VIOLATED_ROWS":551,"PCT_VIOLATED_ROWS":0.0018,"EXECUTION_TIME":"0.330986 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_HIGH - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value > plausible high value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3016723\r\nunitConceptId = 8840\r\nplausibleValueHigh =  10\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3016723\r\n\t\tAND unit_concept_id = 8840\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number >  10\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3016723\r\n\tAND unit_concept_id = 8840\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3016723 (Creatinine [Mass/volume] in Serum or Plasma) and UNIT_CONCEPT_ID 8840 (milligram per deciliter), the number and percent of records that have a value less than  10.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3016723","SQL_FILE":"concept_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1352,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.288017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_HIGH - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value > plausible high value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3004249\r\nunitConceptId = 8876\r\nplausibleValueHigh = 300\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3004249\r\n\t\tAND unit_concept_id = 8876\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number > 300\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3004249\r\n\tAND unit_concept_id = 8876\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3004249 (Systolic blood pressure) and UNIT_CONCEPT_ID 8876 (millimeter mercury column), the number and percent of records that have a value less than 300.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3004249","SQL_FILE":"concept_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1353,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.325021 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_HIGH - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value > plausible high value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3012888\r\nunitConceptId = 8876\r\nplausibleValueHigh = 200\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3012888\r\n\t\tAND unit_concept_id = 8876\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number > 200\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3012888\r\n\tAND unit_concept_id = 8876\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3012888 (Diastolic blood pressure) and UNIT_CONCEPT_ID 8876 (millimeter mercury column), the number and percent of records that have a value less than 200.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3012888","SQL_FILE":"concept_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1354,"FAILED":0},{"NUM_VIOLATED_ROWS":6,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.324986 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_HIGH - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value > plausible high value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3025315\r\nunitConceptId = 9529\r\nplausibleValueHigh = 635\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3025315\r\n\t\tAND unit_concept_id = 9529\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number > 635\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3025315\r\n\tAND unit_concept_id = 9529\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3025315 (Body weight) and UNIT_CONCEPT_ID 9529 (kilogram), the number and percent of records that have a value less than 635.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3025315","SQL_FILE":"concept_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1355,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.245013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_VALUE_HIGH - find any MEASUREMENT records that have VALUE_AS_NUMBER with non-null value > plausible high value\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\nconceptId = 3038553\r\nunitConceptId = 9531\r\nplausibleValueHigh =  80\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT measurement.* \r\n\t\tFROM cdm.measurement\r\n\t\tWHERE measurement_concept_id = 3038553\r\n\t\tAND unit_concept_id = 9531\r\n\t\tAND value_as_number IS NOT NULL\r\n\t\tAND value_as_number >  80\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.measurement\r\n\tWHERE measurement_concept_id = 3038553\r\n\tAND unit_concept_id = 9531\r\n\tAND value_as_number IS NOT NULL\r\n) denominator\r\n;","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For the combination of CONCEPT_ID 3038553 (Body mass index (BMI) [Ratio]) and UNIT_CONCEPT_ID 9531 (kilogram per square meter), the number and percent of records that have a value less than  80.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"MEASUREMENT_CONCEPT_ID","CONCEPT_ID":"3038553","SQL_FILE":"concept_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1356,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"7.153190 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =    26662\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    26662\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    26662\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID    26662 (Testicular hypofunction), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"   26662","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1357,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.233015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =    26935\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    26935\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    26935\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID    26935 (Disorder of endocrine testis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"   26935","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1358,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217027 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =    30969\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    30969\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    30969\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID    30969 (Testicular hyperfunction), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"   30969","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1359,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.259016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =    73801\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    73801\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    73801\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID    73801 (Scrotal varices), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"   73801","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1360,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.223042 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =    74322\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    74322\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    74322\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID    74322 (Benign neoplasm of scrotum), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"   74322","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1361,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.195199 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =    78193\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    78193\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    78193\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID    78193 (Orchitis and epididymitis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"   78193","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1362,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.221007 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =    79758\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    79758\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =    79758\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID    79758 (Primary malignant neoplasm of scrotum), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"   79758","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1363,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.240016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   141917\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   141917\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   141917\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   141917 (Balanitis xerotica obliterans), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  141917","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1364,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.274019 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   192367\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   192367\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   192367\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   192367 (Dysplasia of cervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  192367","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1365,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.206007 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   192676\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   192676\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   192676\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   192676 (Cervical intraepithelial neoplasia grade 1), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  192676","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1366,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218983 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   192683\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   192683\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   192683\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   192683 (Uterovaginal prolapse), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  192683","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1367,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   192854\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   192854\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   192854\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   192854 (Intramural leiomyoma of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  192854","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1368,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.247988 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   192858\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   192858\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   192858\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   192858 (Ovarian hyperfunction), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  192858","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1369,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   193254\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193254\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193254\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   193254 (Disorder of vagina), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  193254","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1370,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.224977 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   193261\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193261\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193261\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   193261 (Vaginospasm), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  193261","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1371,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   193262\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193262\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193262\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   193262 (Inflammatory disorder of penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  193262","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1372,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213001 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   193277\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193277\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193277\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   193277 (Deliveries by cesarean), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  193277","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1373,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   193437\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193437\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193437\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   193437 (Neoplasm of uncertain behavior of female genital organ), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  193437","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1374,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.224020 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   193439\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193439\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193439\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   193439 (Benign neoplasm of body of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  193439","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1375,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217628 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   193522\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193522\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193522\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   193522 (Acute prostatitis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  193522","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1376,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   193530\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193530\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193530\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   193530 (Follicular cyst of ovary), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  193530","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1377,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.206017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   193739\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193739\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193739\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   193739 (Ovarian failure), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  193739","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1378,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.206015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   193818\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193818\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   193818\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   193818 (Calculus of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  193818","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1379,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248771 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   194092\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194092\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194092\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   194092 (Uterine prolapse without vaginal wall prolapse), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  194092","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1380,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213047 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   194286\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194286\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194286\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   194286 (Malignant neoplasm of corpus uteri, excluding isthmus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  194286","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1381,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.204028 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   194412\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194412\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194412\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   194412 (Dysplasia of vagina), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  194412","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1382,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.221132 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   194420\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194420\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194420\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   194420 (Endometriosis of fallopian tube), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  194420","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1383,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211006 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   194611\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194611\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194611\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   194611 (Carcinoma in situ of uterine cervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  194611","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1384,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   194696\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194696\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194696\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   194696 (Dysmenorrhea), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  194696","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1385,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.238016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   194871\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194871\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194871\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   194871 (Trichomonal vulvovaginitis), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  194871","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1386,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.251012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   194997\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194997\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   194997\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   194997 (Prostatitis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  194997","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1387,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195009\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195009\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195009\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195009 (Leukoplakia of penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195009","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1388,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.214013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195012\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195012\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195012\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195012 (Intermenstrual bleeding - irregular), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195012","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1389,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.221978 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195197\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195197\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195197\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195197 (Primary malignant neoplasm of vulva), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195197","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1390,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.204011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195316\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195316\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195316\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195316 (Atypical endometrial hyperplasia), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195316","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1391,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.230997 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195321\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195321\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195321\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195321 (Postmenopausal bleeding), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195321","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1392,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213640 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195483\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195483\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195483\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195483 (Primary malignant neoplasm of penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195483","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1393,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.233991 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195500\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195500\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195500\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195500 (Benign neoplasm of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195500","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1394,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207019 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195501\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195501\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195501\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195501 (Polycystic ovaries), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195501","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1395,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.233015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195683\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195683\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195683\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195683 (Open wound of penis without complication), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195683","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1396,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202028 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195769\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195769\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195769\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195769 (Submucous leiomyoma of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195769","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1397,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.251977 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195770\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195770\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195770\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195770 (Subserous leiomyoma of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195770","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1398,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.190117 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195793\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195793\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195793\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195793 (Neoplasm of uncertain behavior of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195793","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1399,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.280017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195867\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195867\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195867\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195867 (Noninflammatory disorder of the vagina), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195867","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1400,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.195012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   195873\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195873\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   195873\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   195873 (Leukorrhea), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  195873","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1401,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217979 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196048\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196048\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196048\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196048 (Primary malignant neoplasm of vagina), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196048","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1402,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196051\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196051\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196051\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196051 (Overlapping malignant neoplasm of female genital organs), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196051","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1403,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246179 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196068\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196068\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196068\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196068 (Carcinoma in situ of male genital organ), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196068","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1404,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.205095 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196157\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196157\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196157\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196157 (Induratio penis plastica), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196157","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1405,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.208981 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196158\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196158\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196158\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196158 (Disorder of penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196158","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1406,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196163\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196163\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196163\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196163 (Cervicitis and endocervicitis), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196163","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1407,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.222015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196165\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196165\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196165\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196165 (Cervical intraepithelial neoplasia grade 2), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196165","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1408,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.192004 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196168\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196168\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196168\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196168 (Irregular periods), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196168","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1409,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.235952 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196359\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196359\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196359\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196359 (Primary malignant neoplasm of uterine cervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196359","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1410,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196364\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196364\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196364\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196364 (Benign neoplasm of uterine cervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196364","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1411,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.262018 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196473\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196473\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196473\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196473 (Hypertrophy of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196473","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1412,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196734\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196734\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196734\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196734 (Disorder of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196734","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1413,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.222980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196738\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196738\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196738\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196738 (Disorder of male genital organ), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196738","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1414,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226006 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   196758\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196758\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   196758\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   196758 (Tumor of body of uterus affecting pregnancy), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  196758","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1415,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210883 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197032\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197032\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197032\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197032 (Hyperplasia of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197032","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1416,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197039\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197039\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197039\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197039 (Male genital organ vascular diseases), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197039","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1417,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.225085 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197044\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197044\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197044\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197044 (Female infertility associated with anovulation), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197044","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1418,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209864 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197236\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197236\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197236\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197236 (Uterine leiomyoma), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197236","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1419,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197237\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197237\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197237\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197237 (Benign neoplasm of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197237","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1420,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193977 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197507\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197507\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197507\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197507 (Primary malignant neoplasm of male genital organ), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197507","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1421,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211931 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197601\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197601\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197601\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197601 (Spermatocele), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197601","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1422,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.190013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197605\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197605\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197605\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197605 (Inflammatory disorder of male genital organ), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197605","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1423,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197606\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197606\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197606\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197606 (Female infertility of tubal origin), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197606","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1424,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.206010 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197607\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197607\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197607\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197607 (Excessive and frequent menstruation), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197607","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1425,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197609\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197609\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197609\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197609 (Cervical, vaginal and vulval inflammatory diseases), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197609","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1426,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197610\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197610\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197610\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197610 (Cyst of ovary), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197610","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1427,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201031 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   197938\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197938\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   197938\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   197938 (Uterine inertia), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  197938","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1428,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197976 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198082\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198082\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198082\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198082 (Overlapping malignant neoplasm of body of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198082","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1429,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198108\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198108\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198108\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198108 (Benign neoplasm of fallopian tubes and uterine ligaments), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198108","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1430,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.205013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198194\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198194\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198194\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198194 (Female genital organ symptoms), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198194","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1431,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.206991 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198197\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198197\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198197\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198197 (Male infertility), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198197","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1432,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198198\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198198\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198198\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198198 (Polyp of vagina), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198198","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1433,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.208028 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198202\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198202\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198202\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198202 (Cystocele), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198202","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1434,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198212\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198212\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198212\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198212 (Spotting per vagina in pregnancy), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198212","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1435,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.318990 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198363\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198363\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198363\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198363 (Candidiasis of vagina), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198363","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1436,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248982 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198471\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198471\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198471\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198471 (Complex endometrial hyperplasia), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198471","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1437,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198483\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198483\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198483\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198483 (Stricture or atresia of the vagina), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198483","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1438,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0.0029,"EXECUTION_TIME":"0.225031 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198803\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198803\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198803\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198803 (Benign prostatic hyperplasia), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198803","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1439,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   198806\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198806\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   198806\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   198806 (Abscess of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  198806","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1440,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239976 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   199067\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199067\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199067\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   199067 (Female pelvic inflammatory disease), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  199067","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1441,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.200007 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   199078\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199078\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199078\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   199078 (Vaginal wall prolapse), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  199078","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1442,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.209013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   199752\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199752\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199752\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   199752 (Secondary malignant neoplasm of ovary), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  199752","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1443,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.192008 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   199764\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199764\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199764\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   199764 (Benign neoplasm of ovary), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  199764","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1444,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.241991 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   199876\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199876\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199876\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   199876 (Prolapse of female genital organs), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  199876","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1445,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.191015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   199877\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199877\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199877\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   199877 (Mucous polyp of cervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  199877","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1446,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   199878\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199878\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199878\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   199878 (Light and infrequent menstruation), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  199878","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1447,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193994 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   199881\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199881\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   199881\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   199881 (Endometriosis of ovary), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  199881","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1448,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.191980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200051\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200051\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200051\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200051 (Primary malignant neoplasm of ovary), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200051","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1449,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200052\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200052\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200052\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200052 (Primary malignant neoplasm of uterine adnexa), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200052","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1450,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.235014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200147\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200147\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200147\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200147 (Atrophy of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200147","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1451,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.190011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200445\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200445\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200445\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200445 (Chronic prostatitis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200445","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1452,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226979 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200452\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200452\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200452\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200452 (Disorder of female genital organs), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200452","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1453,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.188015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200461\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200461\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200461\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200461 (Endometriosis of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200461","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1454,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200670\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200670\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200670\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200670 (Benign neoplasm of male genital organ), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200670","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1455,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200675\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200675\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200675\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200675 (Neoplasm of uncertain behavior of ovary), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200675","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1456,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200775\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200775\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200775\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200775 (Endometrial hyperplasia), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200775","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1457,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.219015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200779\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200779\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200779\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200779 (Polyp of corpus uteri), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200779","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1458,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200780\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200780\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200780\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200780 (Disorder of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200780","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1459,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210009 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200962\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200962\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200962\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200962 (Primary malignant neoplasm of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200962","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1460,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.191974 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   200970\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200970\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   200970\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   200970 (Carcinoma in situ of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  200970","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1461,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201072\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201072\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201072\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201072 (Benign prostatic hypertrophy without outflow obstruction), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201072","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1462,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228148 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201078\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201078\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201078\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201078 (Atrophic vaginitis), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201078","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1463,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199994 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201211\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201211\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201211\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201211 (Herpetic vulvovaginitis), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201211","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1464,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201238\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201238\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201238\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201238 (Primary malignant neoplasm of female genital organ), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201238","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1465,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201244\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201244\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201244\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201244 (Benign neoplasm of vagina), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201244","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1466,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201257\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201257\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201257\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201257 (Disorder of endocrine ovary), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201257","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1467,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201346\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201346\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201346\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201346 (Edema of penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201346","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1468,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.204015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201355\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201355\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201355\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201355 (Erosion and ectropion of the cervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201355","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1469,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201527\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201527\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201527\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201527 (Neoplasm of uncertain behavior of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201527","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1470,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207998 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201617\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201617\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201617\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201617 (Prostatic cyst), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201617","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1471,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.184146 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201625\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201625\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201625\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201625 (Malposition of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201625","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1472,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.194009 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201801\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201801\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201801\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201801 (Primary malignant neoplasm of fallopian tube), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201801","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1473,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.231979 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201817\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201817\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201817\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201817 (Benign neoplasm of female genital organ), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201817","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1474,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.206012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201823\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201823\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201823\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201823 (Benign neoplasm of penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201823","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1475,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0.3333,"EXECUTION_TIME":"0.203014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201907\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201907\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201907\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201907 (Edema of male genital organs), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201907","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1476,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.190995 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201909\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201909\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201909\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201909 (Female infertility), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201909","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1477,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.224938 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   201913\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201913\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   201913\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   201913 (Torsion of the ovary, ovarian pedicle or fallopian tube), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  201913","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1478,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.192996 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   314409\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   314409\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   314409\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   314409 (Vascular disorder of penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  314409","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1479,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.194019 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   315586\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   315586\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   315586\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   315586 (Priapism), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  315586","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1480,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   433716\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   433716\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   433716\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   433716 (Primary malignant neoplasm of testis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  433716","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1481,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.221998 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   434251\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   434251\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   434251\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   434251 (Injury of male external genital organs), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  434251","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1482,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.195011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   435315\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   435315\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   435315\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   435315 (Torsion of testis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  435315","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1483,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.225011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   435648\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   435648\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   435648\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   435648 (Retractile testis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  435648","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1484,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   436155\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   436155\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   436155\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   436155 (Redundant prepuce and phimosis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  436155","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1485,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.224998 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   436358\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   436358\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   436358\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   436358 (Primary malignant neoplasm of exocervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  436358","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1486,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.220016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   436366\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   436366\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   436366\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   436366 (Benign neoplasm of testis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  436366","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1487,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218982 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   436466\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   436466\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   436466\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   436466 (Balanoposthitis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  436466","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1488,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213977 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   437501\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   437501\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   437501\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   437501 (Primary malignant neoplasm of labia majora), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  437501","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1489,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.225014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   437655\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   437655\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   437655\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   437655 (Undescended testicle), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  437655","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1490,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   438477\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   438477\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   438477\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   438477 (Atrophy of testis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  438477","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1491,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   439871\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   439871\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   439871\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   439871 (Hemospermia), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  439871","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1492,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197010 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   440971\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   440971\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   440971\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   440971 (Neoplasm of uncertain behavior of testis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  440971","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1493,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   441068\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   441068\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   441068\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   441068 (Torsion of appendix of testis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  441068","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1494,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.232013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   441077\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   441077\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   441077\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   441077 (Stenosis of cervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  441077","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1495,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.212010 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   441805\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   441805\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   441805\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   441805 (Primary malignant neoplasm of endocervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  441805","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1496,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.212980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   442781\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   442781\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   442781\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   442781 (Disorder of uterine cervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  442781","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1497,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.192011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   443211\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   443211\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   443211\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   443211 (Benign prostatic hypertrophy with outflow obstruction), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  443211","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1498,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.240016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   443435\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   443435\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   443435\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   443435 (Primary uterine inertia), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  443435","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1499,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   443800\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   443800\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   443800\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   443800 (Amenorrhea), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  443800","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1500,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   444078\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   444078\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   444078\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   444078 (Inflammation of cervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  444078","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1501,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.286017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =   444106\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   444106\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =   444106\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID   444106 (Candidiasis of vulva), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"  444106","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1502,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.422121 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2003947\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2003947\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2003947\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2003947 (Closed [percutaneous] [needle] biopsy of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2003947","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1503,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.297982 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2003966\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2003966\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2003966\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2003966 (Other transurethral prostatectomy), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2003966","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1504,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.206014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2003983\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2003983\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2003983\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2003983 (Other prostatectomy), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2003983","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1505,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.299019 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2004031\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004031\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004031\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2004031 (Other repair of scrotum and tunica vaginalis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2004031","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1506,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.245963 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2004063\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004063\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004063\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2004063 (Unilateral orchiectomy), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2004063","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1507,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2004070\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004070\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004070\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2004070 (Other repair of testis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2004070","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1508,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237019 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2004090\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004090\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004090\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2004090 (Excision of varicocele and hydrocele of spermatic cord), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2004090","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1509,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2004164\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004164\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004164\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2004164 (Local excision or destruction of lesion of penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2004164","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1510,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.241977 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2004263\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004263\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004263\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2004263 (Other removal of both ovaries and tubes at same operative episode), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2004263","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1511,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.206962 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2004329\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004329\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004329\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2004329 (Other bilateral destruction or occlusion of fallopian tubes), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2004329","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1512,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217008 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2004342\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004342\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004342\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2004342 (Removal of both fallopian tubes at same operative episode), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2004342","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1513,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2004443\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004443\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004443\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2004443 (Closed biopsy of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2004443","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1514,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248984 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2004627\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004627\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2004627\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2004627 (Vaginal suspension and fixation), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2004627","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1515,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201997 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2109825\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109825\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109825\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2109825 (Transurethral electrosurgical resection of prostate, including control of postoperative bleeding, complete (vasectomy, meatotomy, cystourethroscopy, urethral calibration and/or dilation, and internal urethrotomy are included)), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2109825","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1516,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.214005 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2109833\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109833\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109833\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2109833 (Laser vaporization of prostate, including control of postoperative bleeding, complete (vasectomy, meatotomy, cystourethroscopy, urethral calibration and/or dilation, internal urethrotomy and transurethral resection of prostate are included if performed)), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2109833","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1517,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2109900\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109900\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109900\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2109900 (Destruction of lesion(s), penis (eg, condyloma, papilloma, molluscum contagiosum, herpetic vesicle), simple; chemical), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2109900","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1518,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.224980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2109902\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109902\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109902\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2109902 (Destruction of lesion(s), penis (eg, condyloma, papilloma, molluscum contagiosum, herpetic vesicle), simple; cryosurgery), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2109902","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1519,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.205978 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2109905\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109905\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109905\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2109905 (Destruction of lesion(s), penis (eg, condyloma, papilloma, molluscum contagiosum, herpetic vesicle), extensive (eg, laser surgery, electrosurgery, cryosurgery, chemosurgery)), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2109905","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1520,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.230523 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2109916\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109916\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109916\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2109916 (Circumcision, using clamp or other device with regional dorsal penile or ring block), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2109916","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1521,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207032 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2109968\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109968\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109968\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2109968 (Foreskin manipulation including lysis of preputial adhesions and stretching), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2109968","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1522,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2109973\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109973\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109973\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2109973 (Orchiectomy, simple (including subcapsular), with or without testicular prosthesis, scrotal or inguinal approach), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2109973","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1523,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.185008 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2109981\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109981\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2109981\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2109981 (Orchiopexy, inguinal approach, with or without hernia repair), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2109981","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1524,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110004\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110004\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110004\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110004 (Drainage of scrotal wall abscess), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110004","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1525,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.212014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110011\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110011\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110011\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110011 (Vasectomy, unilateral or bilateral (separate procedure), including postoperative semen examination(s)), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110011","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1526,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.244990 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110026\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110026\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110026\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110026 (Biopsy, prostate; needle or punch, single or multiple, any approach), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110026","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1527,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.194010 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110039\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110039\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110039\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110039 (Prostatectomy, retropubic radical, with or without nerve sparing; with bilateral pelvic lymphadenectomy, including external iliac, hypogastric, and obturator nodes), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110039","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1528,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.232014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110044\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110044\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110044\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110044 (Laparoscopy, surgical prostatectomy, retropubic radical, including nerve sparing, includes robotic assistance, when performed), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110044","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1529,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.189010 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110078\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110078\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110078\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110078 (Colposcopy of the vulva), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110078","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1530,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.200979 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110116\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110116\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110116\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110116 (Colpopexy, vaginal; extra-peritoneal approach (sacrospinous, iliococcygeus)), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110116","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1531,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.195995 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110142\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110142\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110142\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110142 (Laparoscopy, surgical, colpopexy (suspension of vaginal apex)), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110142","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1532,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228029 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110169\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110169\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110169\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110169 (Endometrial sampling (biopsy) with or without endocervical sampling (biopsy), without cervical dilation, any method (separate procedure)), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110169","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1533,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.192014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110175\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110175\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110175\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110175 (Total abdominal hysterectomy (corpus and cervix), with or without removal of tube(s), with or without removal of ovary(s)), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110175","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1534,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.190974 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110194\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110194\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110194\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110194 (Insertion of intrauterine device (IUD)), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110194","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1535,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110195\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110195\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110195\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110195 (Removal of intrauterine device (IUD)), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110195","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1536,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110203\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110203\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110203\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110203 (Endometrial ablation, thermal, without hysteroscopic guidance), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110203","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1537,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217025 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110222\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110222\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110222\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110222 (Hysteroscopy, surgical; with sampling (biopsy) of endometrium and/or polypectomy, with or without D & C), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110222","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1538,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.204009 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110227\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110227\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110227\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110227 (Hysteroscopy, surgical; with endometrial ablation (eg, endometrial resection, electrosurgical ablation, thermoablation)), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110227","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1539,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.247013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110230\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110230\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110230\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110230 (Laparoscopy, surgical, with total hysterectomy, for uterus 250 g or less; with removal of tube(s) and/or ovary(s)), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110230","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1540,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.220011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110307\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110307\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110307\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110307 (Routine obstetric care including antepartum care, vaginal delivery (with or without episiotomy, and/or forceps) and postpartum care), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110307","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1541,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.195013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110315\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110315\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110315\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110315 (Routine obstetric care including antepartum care, cesarean delivery, and postpartum care), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110315","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1542,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.223024 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110316\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110316\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110316\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110316 (Cesarean delivery only), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110316","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1543,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2110326\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110326\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2110326\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2110326 (Treatment of missed abortion, completed surgically; first trimester), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2110326","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1544,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.186009 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2211747\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211747\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211747\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2211747 (Ultrasound, pregnant uterus, real time with image documentation, fetal and maternal evaluation, first trimester (< 14 weeks 0 days), transabdominal approach; single or first gestation), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2211747","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1545,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2211749\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211749\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211749\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2211749 (Ultrasound, pregnant uterus, real time with image documentation, fetal and maternal evaluation, after first trimester (> or = 14 weeks 0 days), transabdominal approach; single or first gestation), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2211749","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1546,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2211751\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211751\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211751\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2211751 (Ultrasound, pregnant uterus, real time with image documentation, fetal and maternal evaluation plus detailed fetal anatomic examination, transabdominal approach; single or first gestation), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2211751","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1547,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.245983 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2211753\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211753\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211753\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2211753 (Ultrasound, pregnant uterus, real time with image documentation, first trimester fetal nuchal translucency measurement, transabdominal or transvaginal approach; single or first gestation), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2211753","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1548,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.258927 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2211755\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211755\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211755\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2211755 (Ultrasound, pregnant uterus, real time with image documentation, limited (eg, fetal heart beat, placental location, fetal position and/or qualitative amniotic fluid volume), 1 or more fetuses), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2211755","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1549,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.233001 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2211756\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211756\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211756\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2211756 (Ultrasound, pregnant uterus, real time with image documentation, follow-up (eg, re-evaluation of fetal size by measuring standard growth parameters and amniotic fluid volume, re-evaluation of organ system(s) suspected or confirmed to be abnormal on a prev), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2211756","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1550,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2211757\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211757\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211757\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2211757 (Ultrasound, pregnant uterus, real time with image documentation, transvaginal), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2211757","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1551,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2211765\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211765\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211765\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2211765 (Ultrasound, transvaginal), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2211765","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1552,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.225025 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2211769\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211769\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2211769\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2211769 (Ultrasound, scrotum and contents), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2211769","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1553,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210018 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2721063\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2721063\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2721063\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2721063 (Annual gynecological examination, new patient), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2721063","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1554,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2721064\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2721064\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2721064\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2721064 (Annual gynecological examination, established patient), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2721064","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1555,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193271 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2780478\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2780478\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2780478\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2780478 (Resection of Prostate, Percutaneous Endoscopic Approach), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2780478","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1556,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  2780523\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2780523\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  2780523\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  2780523 (Resection of Prepuce, External Approach), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 2780523","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1557,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.191012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4005743\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4005743\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4005743\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4005743 (Female sterility), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4005743","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1558,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.192999 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4005933\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4005933\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4005933\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4005933 (Hypospadias, penile), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4005933","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1559,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4012343\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4012343\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4012343\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4012343 (Vaginal discharge symptom), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4012343","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1560,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.223009 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4016155\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4016155\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4016155\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4016155 (Prostatism), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4016155","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1561,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197999 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4021531\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4021531\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4021531\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4021531 (Total abdominal hysterectomy), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4021531","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1562,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202018 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4032594\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4032594\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4032594\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4032594 (Inflammation of scrotum), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4032594","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1563,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.214978 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4032622\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4032622\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4032622\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4032622 (Laparoscopic supracervical hysterectomy), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4032622","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1564,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.271039 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4038747\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4038747\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4038747\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4038747 (Obstetric examination), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4038747","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1565,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.200999 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4048225\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4048225\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4048225\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4048225 (Neoplasm of endometrium), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4048225","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1566,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.208011 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4050091\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4050091\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4050091\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4050091 (Open wound of penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4050091","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1567,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.221982 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4051956\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4051956\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4051956\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4051956 (Vulvovaginal disease), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4051956","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1568,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.243019 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4052532\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4052532\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4052532\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4052532 (Hysteroscopy), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4052532","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1569,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4054550\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4054550\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4054550\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4054550 (Open wound of scrotum and testes), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4054550","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1570,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203029 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4056903\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4056903\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4056903\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4056903 (Vaginitis associated with another disorder), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4056903","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1571,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4058792\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4058792\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4058792\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4058792 (Douche of vagina), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4058792","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1572,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.231054 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4060207\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4060207\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4060207\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4060207 (Vulval irritation), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4060207","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1573,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.190969 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4060556\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4060556\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4060556\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4060556 (Uterine scar from previous surgery in pregnancy, childbirth and the puerperium), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4060556","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1574,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.214970 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4060558\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4060558\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4060558\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4060558 (Uterine scar from previous surgery in pregnancy, childbirth and the puerperium - delivered), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4060558","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1575,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.230982 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4060559\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4060559\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4060559\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4060559 (Uterine scar from previous surgery in pregnancy, childbirth and the puerperium with antenatal problem), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4060559","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1576,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.267018 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4061050\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4061050\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4061050\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4061050 (Subacute and chronic vaginitis), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4061050","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1577,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217995 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4071874\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4071874\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4071874\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4071874 (Pain in scrotum), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4071874","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1578,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217895 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4073700\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4073700\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4073700\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4073700 (Transurethral laser prostatectomy), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4073700","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1579,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.214016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4081648\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4081648\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4081648\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4081648 (Acute vaginitis), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4081648","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1580,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.274018 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4083772\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4083772\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4083772\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4083772 (Echography of scrotum and contents), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4083772","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1581,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.493001 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4090039\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4090039\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4090039\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4090039 (Penile arterial insufficiency), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4090039","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1582,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215997 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4092515\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4092515\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4092515\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4092515 (Malignant neoplasm, overlapping lesion of cervix uteri), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4092515","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1583,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.253017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4093346\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4093346\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4093346\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4093346 (Large prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4093346","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1584,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227029 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4095940\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4095940\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4095940\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4095940 (Finding of pattern of menstrual cycle), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4095940","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1585,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249982 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4096783\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4096783\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4096783\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4096783 (Radical prostatectomy), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4096783","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1586,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4109081\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4109081\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4109081\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4109081 (Pain in penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4109081","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1587,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.220951 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4127886\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4127886\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4127886\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4127886 (Hysterectomy), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4127886","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1588,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.350984 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4128329\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4128329\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4128329\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4128329 (Menopause present), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4128329","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1589,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.206008 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4129155\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4129155\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4129155\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4129155 (Vaginal bleeding), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4129155","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1590,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.282019 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4138738\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4138738\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4138738\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4138738 (Vaginal hysterectomy), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4138738","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1591,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4140828\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4140828\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4140828\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4140828 (Acute vulvitis), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4140828","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1592,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.222982 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4141940\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4141940\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4141940\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4141940 (Endometrial ablation), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4141940","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1593,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4143116\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4143116\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4143116\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4143116 (Azoospermia), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4143116","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1594,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.264873 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4146777\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4146777\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4146777\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4146777 (Radical abdominal hysterectomy), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4146777","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1595,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4147021\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4147021\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4147021\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4147021 (Contusion, scrotum or testis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4147021","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1596,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.252981 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4149084\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4149084\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4149084\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4149084 (Vaginitis), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4149084","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1597,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.194013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4150042\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4150042\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4150042\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4150042 (Vaginal ulcer), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4150042","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1598,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209030 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4150816\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4150816\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4150816\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4150816 (Bicornuate uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4150816","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1599,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.242024 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4155529\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4155529\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4155529\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4155529 (Mechanical complication of intrauterine contraceptive device), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4155529","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1600,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.232015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4156113\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4156113\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4156113\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4156113 (Malignant neoplasm of body of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4156113","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1601,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.238015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4161944\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4161944\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4161944\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4161944 (Low cervical cesarean section), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4161944","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1602,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211034 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4162860\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4162860\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4162860\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4162860 (Primary malignant neoplasm of body of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4162860","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1603,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.219984 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4163261\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4163261\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4163261\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4163261 (Malignant tumor of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4163261","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1604,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.253965 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4171394\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4171394\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4171394\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4171394 (Abnormal menstrual cycle), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4171394","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1605,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234029 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4171915\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4171915\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4171915\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4171915 (Orchitis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4171915","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1606,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4180978\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4180978\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4180978\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4180978 (Vulvovaginitis), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4180978","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1607,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281982 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4181912\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4181912\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4181912\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4181912 (Cone biopsy of cervix), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4181912","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1608,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.232012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4194652\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4194652\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4194652\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4194652 (Pruritus of vulva), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4194652","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1609,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4199600\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4199600\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4199600\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4199600 (Candidal balanitis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4199600","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1610,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.212981 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4234536\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4234536\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4234536\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4234536 (Transurethral prostatectomy), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4234536","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1611,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4235215\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4235215\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4235215\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4235215 (Swelling of testicle), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4235215","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1612,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.233016 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4238715\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4238715\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4238715\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4238715 (Removal of intrauterine device), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4238715","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1613,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.225963 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4243919\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4243919\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4243919\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4243919 (Incision of ovary), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4243919","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1614,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.258984 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4260520\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4260520\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4260520\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4260520 (Balanitis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4260520","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1615,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4270932\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4270932\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4270932\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4270932 (Pain in testicle), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4270932","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1616,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.232991 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4275113\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4275113\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4275113\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4275113 (Insertion of intrauterine contraceptive device), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4275113","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1617,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.214081 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4279913\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4279913\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4279913\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4279913 (Primary ovarian failure), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4279913","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1618,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218980 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4281030\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4281030\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4281030\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4281030 (Secondary malignant neoplasm of right ovary), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4281030","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1619,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.288020 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4294393\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4294393\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4294393\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4294393 (Ulcer of penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4294393","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1620,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4294805\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4294805\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4294805\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4294805 (Laparoscopic-assisted vaginal hysterectomy), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4294805","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1621,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.188012 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4295261\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4295261\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4295261\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4295261 (Postmenopausal state), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4295261","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1622,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.201010 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4303258\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4303258\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4303258\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4303258 (Bacterial vaginosis), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4303258","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1623,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.189177 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4306780\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4306780\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4306780\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4306780 (Gynecologic examination), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4306780","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1624,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197014 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4310552\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4310552\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4310552\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4310552 (Orchidopexy), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4310552","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1625,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196995 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4320332\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4320332\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4320332\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4320332 (Hydrocele of tunica vaginalis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4320332","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1626,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248981 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4321575\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4321575\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4321575\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4321575 (Lysis of penile adhesions), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4321575","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1627,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.194015 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = PROCEDURE_CONCEPT_ID\r\nconceptId =  4330583\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON PROCEDURE_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4330583\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\tWHERE PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID =  4330583\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4330583 (Vasectomy), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"PROCEDURE_CONCEPT_ID","CONCEPT_ID":" 4330583","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1628,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197915 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId =  4339088\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4339088\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID =  4339088\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID  4339088 (Testicular mass), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":" 4339088","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1629,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.200993 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId = 40481080\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 40481080\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 40481080\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID 40481080 (Benign localized hyperplasia of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"40481080","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1630,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.332860 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId = 40482030\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 40482030\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 40482030\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID 40482030 (Dysplasia of prostate), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"40482030","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1631,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.212017 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId = 40482406\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 40482406\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 40482406\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID 40482406 (Low lying placenta), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"40482406","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1632,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217985 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId = 40483613\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 40483613\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 40483613\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID 40483613 (Inflammatory disease of female genital structure), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"40483613","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1633,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197981 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId = 40490888\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 40490888\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 40490888\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID 40490888 (Herniation of rectum into vagina), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"40490888","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1634,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.200013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId = 42709954\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 42709954\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 42709954\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID 42709954 (Phimosis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"42709954","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1635,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId = 45757415\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 45757415\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 45757415\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID 45757415 (Benign endometrial hyperplasia), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"45757415","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1636,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217013 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId = 45766654\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 45766654\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 45766654\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID 45766654 (Disorder of skin of penis), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"45766654","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1637,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213981 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId = 45770892\r\nplausibleGender = Female\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 45770892\r\n\t\tAND person.gender_concept_id <> 8532 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 45770892\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID 45770892 (Primary malignant neoplasm of uterus), the number and percent of records associated with patients with an implausible gender (Female).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"45770892","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1638,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.303018 secs","QUERY_TEXT":"\r\n/*********\r\nCONCEPT LEVEL check:\r\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = CONDITION_CONCEPT_ID\r\nconceptId = 45772671\r\nplausibleGender = Male\r\n\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(*) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\t\tINNER JOIN cdm.person\r\n\t\t\tON CONDITION_OCCURRENCE.person_id = person.person_id\r\n\t\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 45772671\r\n\t\tAND person.gender_concept_id <> 8507 \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\tWHERE CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 45772671\r\n) denominator\r\n;","CHECK_NAME":"plausibleGender","CHECK_LEVEL":"CONCEPT","CHECK_DESCRIPTION":"For a CONCEPT_ID 45772671 (Nodular prostate without urinary obstruction), the number and percent of records associated with patients with an implausible gender (Male).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"CONDITION_CONCEPT_ID","CONCEPT_ID":"45772671","SQL_FILE":"concept_plausible_gender.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1639,"FAILED":0}],"Metadata":[{"CDM_SOURCE_NAME":"FlatIron - Multiple Myeloma Core Registry","CDM_SOURCE_ABBREVIATION":"FlatIron MM","CDM_HOLDER":"Janssen R&D","SOURCE_DESCRIPTION":"EMR data for over 9,000 patients from the United State. Contains both structured and unstructured data.","SOURCE_DOCUMENTATION_REFERENCE":"[For further information link to RWE site for Flatiron Multiple Myeloma.](https://catalog.rwe.jnj.com/index#jnjsearches?dataSetUri=%2Fdataset%2F7f67e26c-f0fa-4c51-817e-672a6f6ae4ea.xml)","CDM_ETL_REFERENCE":"https://sourcecode.jnj.com/projects/ITX-ASJ/repos/etl_flatiron_mm/browse","SOURCE_RELEASE_DATE":"2019-06-11","CDM_RELEASE_DATE":"2019-08-01","CDM_VERSION":"v5.3.1","VOCABULARY_VERSION":"v5.0 17-JUN-19"}],"Overview":{"countTotal":[1639],"countPassed":[1593],"countErrorFailed":[2],"countThresholdFailed":[44],"countOverallFailed":[46],"percentPassed":[97],"percentFailed":[3],"countTotalPlausibility":[463],"countTotalConformance":[775],"countTotalCompleteness":[401],"countFailedPlausibility":[6],"countFailedConformance":[2],"countFailedCompleteness":[38],"countPassedPlausibility":[457],"countPassedConformance":[773],"countPassedCompleteness":[363]}}
