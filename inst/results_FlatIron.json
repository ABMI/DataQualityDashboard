{"startTimestamp":["2019-08-07 15:56:08"],"endTimestamp":["2019-08-07 15:59:13"],"executionTime":["3.095645 mins"],"CheckResults":[{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.581951 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.person_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PERSON that is considered not nullable.","CDM_TABLE":"PERSON","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":1,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.374149 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.gender_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_concept_id of the PERSON that is considered not nullable.","CDM_TABLE":"PERSON","CDM_FIELD":"gender_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":2,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.513982 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = year_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.year_of_birth IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the year_of_birth of the PERSON that is considered not nullable.","CDM_TABLE":"PERSON","CDM_FIELD":"year_of_birth","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":3,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.546897 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.race_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_concept_id of the PERSON that is considered not nullable.","CDM_TABLE":"PERSON","CDM_FIELD":"race_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":4,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.505989 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.ethnicity_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_concept_id of the PERSON that is considered not nullable.","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":5,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.313771 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.observation_period_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_id of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":6,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.257742 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":7,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.428020 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.observation_period_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_start_date of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":8,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.521716 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.observation_period_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_end_date of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":9,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.467637 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.period_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the period_type_concept_id of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"period_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":10,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.390642 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":11,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.406268 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":12,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227973 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_concept_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":13,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.421895 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_start_date of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":14,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.208894 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_end_date of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":15,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.274979 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_type_concept_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":16,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.297022 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_occurrence_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_occurrence_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":17,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248519 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.person_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":18,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198734 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_concept_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":19,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.343017 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_start_date of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":20,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.445986 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_type_concept_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":21,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.345777 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_exposure_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":22,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.241893 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.person_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":23,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.223894 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":24,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199008 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_exposure_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_start_date of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":25,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.206394 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_exposure_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_end_date of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":26,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.156223 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_type_concept_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":27,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.328144 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_occurrence_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":28,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.265635 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":29,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234351 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_concept_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":30,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.278501 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_date of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":31,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.280014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_type_concept_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":32,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218745 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_exposure_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":33,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203245 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.person_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":34,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.222774 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_concept_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":35,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218762 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_exposure_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_start_date of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":36,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187364 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_type_concept_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":37,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.183745 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":38,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202485 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":39,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218760 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_concept_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":40,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203098 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_date of the MEASUREMENT that is considered not nullable.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":41,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.241011 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_type_concept_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":42,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250011 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":43,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234355 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":44,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218760 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_concept_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":45,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.364779 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_start_date of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":46,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.265602 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_end_date of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":47,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.157269 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_type_concept_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":48,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.296889 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_occurrence_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":49,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187239 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE that is considered not nullable.","CDM_TABLE":"NOTE","CDM_FIELD":"note_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":50,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.243009 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.person_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the NOTE that is considered not nullable.","CDM_TABLE":"NOTE","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":51,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.296886 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_date' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_date of the NOTE that is considered not nullable.","CDM_TABLE":"NOTE","CDM_FIELD":"note_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":52,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203099 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_type_concept_id of the NOTE that is considered not nullable.","CDM_TABLE":"NOTE","CDM_FIELD":"note_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":53,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281260 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_class_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_class_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_class_concept_id of the NOTE that is considered not nullable.","CDM_TABLE":"NOTE","CDM_FIELD":"note_class_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":54,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.189626 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_text\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_text' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_text IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_text of the NOTE that is considered not nullable.","CDM_TABLE":"NOTE","CDM_FIELD":"note_text","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":55,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.306199 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = encoding_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.encoding_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the encoding_concept_id of the NOTE that is considered not nullable.","CDM_TABLE":"NOTE","CDM_FIELD":"encoding_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":56,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.328138 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = language_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.language_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the language_concept_id of the NOTE that is considered not nullable.","CDM_TABLE":"NOTE","CDM_FIELD":"language_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":57,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203135 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.note_nlp_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_id of the NOTE_NLP that is considered not nullable.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_nlp_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":58,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234340 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.note_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE_NLP that is considered not nullable.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":59,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.254706 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = lexical_variant\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.lexical_variant' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.lexical_variant IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the lexical_variant of the NOTE_NLP that is considered not nullable.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"lexical_variant","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":60,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.262903 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_date' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.nlp_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_date of the NOTE_NLP that is considered not nullable.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"nlp_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":61,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.190865 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_id of the OBSERVATION that is considered not nullable.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":62,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203136 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION that is considered not nullable.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":63,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.247115 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_concept_id of the OBSERVATION that is considered not nullable.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":64,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210902 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_date of the OBSERVATION that is considered not nullable.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":65,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_type_concept_id of the OBSERVATION that is considered not nullable.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":66,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187476 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_id of the SPECIMEN that is considered not nullable.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":67,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.192009 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the SPECIMEN that is considered not nullable.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":68,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_concept_id of the SPECIMEN that is considered not nullable.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":69,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.222249 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_type_concept_id of the SPECIMEN that is considered not nullable.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":70,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_date of the SPECIMEN that is considered not nullable.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":71,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.268157 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE FACT_RELATIONSHIP.domain_concept_id_1 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_1 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"domain_concept_id_1","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":72,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.204620 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE FACT_RELATIONSHIP.fact_id_1 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_1 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"fact_id_1","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":73,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.165525 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE FACT_RELATIONSHIP.domain_concept_id_2 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_2 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"domain_concept_id_2","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":74,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203134 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE FACT_RELATIONSHIP.fact_id_2 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_2 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"fact_id_2","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":75,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.156231 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = relationship_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE FACT_RELATIONSHIP.relationship_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the relationship_concept_id of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"relationship_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":76,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.183990 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.location_id' AS violating_field, LOCATION.* \r\n\t\t  FROM cdm.LOCATION\r\n\t\t WHERE LOCATION.location_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the LOCATION that is considered not nullable.","CDM_TABLE":"LOCATION","CDM_FIELD":"location_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":77,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187510 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE CARE_SITE.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the CARE_SITE that is considered not nullable.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"care_site_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":78,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187509 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE PROVIDER.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PROVIDER that is considered not nullable.","CDM_TABLE":"PROVIDER","CDM_FIELD":"provider_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":79,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187473 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE PAYER_PLAN_PERIOD.payer_plan_period_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_id of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_plan_period_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":80,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215617 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE PAYER_PLAN_PERIOD.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":81,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187510 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_start_date' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE PAYER_PLAN_PERIOD.payer_plan_period_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_start_date of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_plan_period_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":82,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281264 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_end_date' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE PAYER_PLAN_PERIOD.payer_plan_period_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_end_date of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_plan_period_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":83,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207248 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_id of the COST that is considered not nullable.","CDM_TABLE":"COST","CDM_FIELD":"cost_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":84,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218759 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_event_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_event_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_event_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_event_id of the COST that is considered not nullable.","CDM_TABLE":"COST","CDM_FIELD":"cost_event_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":85,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234494 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_domain_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_domain_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_domain_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_domain_id of the COST that is considered not nullable.","CDM_TABLE":"COST","CDM_FIELD":"cost_domain_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":86,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.238288 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_type_concept_id of the COST that is considered not nullable.","CDM_TABLE":"COST","CDM_FIELD":"cost_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":87,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.205612 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_id of the DRUG_ERA that is considered not nullable.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":88,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216154 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.person_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DRUG_ERA that is considered not nullable.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":89,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.265635 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DRUG_ERA that is considered not nullable.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":90,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234350 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_start_date of the DRUG_ERA that is considered not nullable.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":91,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.273188 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_end_date' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_end_date of the DRUG_ERA that is considered not nullable.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":92,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.270040 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.dose_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_id of the DOSE_ERA that is considered not nullable.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":93,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.469854 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.person_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DOSE_ERA that is considered not nullable.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":94,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203135 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DOSE_ERA that is considered not nullable.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":95,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281230 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.unit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the DOSE_ERA that is considered not nullable.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":96,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218727 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_value' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.dose_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_value of the DOSE_ERA that is considered not nullable.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_value","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":97,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239240 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.dose_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_start_date of the DOSE_ERA that is considered not nullable.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":98,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281815 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_end_date' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.dose_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_end_date of the DOSE_ERA that is considered not nullable.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":99,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249979 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_id of the CONDITION_ERA that is considered not nullable.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":100,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.253614 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.person_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the CONDITION_ERA that is considered not nullable.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":101,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_concept_id of the CONDITION_ERA that is considered not nullable.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":102,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234389 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_start_date of the CONDITION_ERA that is considered not nullable.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":103,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.253382 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_NOT_NULLABLE\r\n\r\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_end_date' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_REQUIRED","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_end_date of the CONDITION_ERA that is considered not nullable.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":104,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"5.214027 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.person_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the PERSON is the expected data type based on the specification.","CDM_TABLE":"PERSON","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":105,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.688863 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.gender_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the gender_concept_id in the PERSON is the expected data type based on the specification.","CDM_TABLE":"PERSON","CDM_FIELD":"gender_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":106,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.510746 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = year_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.year_of_birth, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the year_of_birth in the PERSON is the expected data type based on the specification.","CDM_TABLE":"PERSON","CDM_FIELD":"year_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":107,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.515614 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = month_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.month_of_birth, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the month_of_birth in the PERSON is the expected data type based on the specification.","CDM_TABLE":"PERSON","CDM_FIELD":"month_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":108,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.343766 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = day_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.day_of_birth, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the day_of_birth in the PERSON is the expected data type based on the specification.","CDM_TABLE":"PERSON","CDM_FIELD":"day_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":109,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.378803 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.race_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the race_concept_id in the PERSON is the expected data type based on the specification.","CDM_TABLE":"PERSON","CDM_FIELD":"race_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":110,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281263 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.ethnicity_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the ethnicity_concept_id in the PERSON is the expected data type based on the specification.","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":111,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.468736 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.location_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.location_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the location_id in the PERSON is the expected data type based on the specification.","CDM_TABLE":"PERSON","CDM_FIELD":"location_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":112,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.390642 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.provider_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the PERSON is the expected data type based on the specification.","CDM_TABLE":"PERSON","CDM_FIELD":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":113,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.453113 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.care_site_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE REGEXP_INSTR(PERSON.care_site_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the PERSON is the expected data type based on the specification.","CDM_TABLE":"PERSON","CDM_FIELD":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":114,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.296889 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION_PERIOD.observation_period_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_period_id in the OBSERVATION_PERIOD is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":115,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.453110 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION_PERIOD.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the OBSERVATION_PERIOD is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":116,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.416510 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":117,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.327766 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":118,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.312479 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.visit_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":119,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.563033 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.provider_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":120,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281229 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.care_site_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.care_site_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":121,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.538390 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.visit_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_source_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":122,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281227 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.admitting_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the admitting_source_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"admitting_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":123,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.377028 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.discharge_to_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the discharge_to_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"discharge_to_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":124,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.231894 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = preceding_visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.preceding_visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(VISIT_OCCURRENCE.preceding_visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the preceding_visit_occurrence_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"preceding_visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":125,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.305970 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.condition_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":126,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.268750 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.condition_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_type_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":127,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228484 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.condition_status_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_status_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_status_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":128,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203136 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.provider_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":129,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248524 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_occurrence_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":130,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.378004 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_detail_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":131,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234050 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(CONDITION_OCCURRENCE.condition_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_source_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":132,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.299026 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.drug_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":133,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.280751 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.drug_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_type_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":134,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.166791 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = refills\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.refills, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the refills in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"refills","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":135,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203268 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = days_supply\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.days_supply, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the days_supply in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"days_supply","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":136,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.220012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.route_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the route_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"route_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":137,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203100 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.provider_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":138,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239247 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_occurrence_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":139,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.155609 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_detail_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":140,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281262 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DRUG_EXPOSURE.drug_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_source_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":141,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234355 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.procedure_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_occurrence_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":142,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216557 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":143,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.220028 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.procedure_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":144,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.265602 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.procedure_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_type_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":145,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234385 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.modifier_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the modifier_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"modifier_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":146,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.360153 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.quantity' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.quantity, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the quantity in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"quantity","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":147,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281229 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.provider_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":148,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.296887 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":149,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.328138 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_detail_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":150,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202239 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE REGEXP_INSTR(PROCEDURE_OCCURRENCE.procedure_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_source_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":151,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.293778 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.device_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the device_concept_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":152,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218760 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.device_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the device_type_concept_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":153,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.244676 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.quantity' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.quantity, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the quantity in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"quantity","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":154,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.270903 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.provider_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":155,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.347473 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_occurrence_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":156,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.262494 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_detail_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":157,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.156258 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE REGEXP_INSTR(DEVICE_EXPOSURE.device_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the device_source_concept_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":158,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.265635 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.measurement_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":159,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.253460 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":160,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.291319 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.measurement_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":161,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218756 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.measurement_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_type_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":162,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187477 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = operator_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.operator_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the operator_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"operator_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":163,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209243 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_as_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.value_as_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.value_as_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the value_as_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"value_as_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":164,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.235153 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.unit_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the unit_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":165,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203134 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.provider_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":166,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234309 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_occurrence_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":167,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.254493 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_detail_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":168,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.274011 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE REGEXP_INSTR(MEASUREMENT.measurement_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_source_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":169,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.312478 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE REGEXP_INSTR(VISIT_DETAIL.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":170,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.233013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE REGEXP_INSTR(VISIT_DETAIL.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":171,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.265629 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE REGEXP_INSTR(VISIT_DETAIL.visit_detail_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_concept_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":172,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.163742 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.provider_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE REGEXP_INSTR(VISIT_DETAIL.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":173,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.375015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.care_site_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE REGEXP_INSTR(VISIT_DETAIL.care_site_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":174,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.204880 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.note_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_id in the NOTE is the expected data type based on the specification.","CDM_TABLE":"NOTE","CDM_FIELD":"note_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":175,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.401339 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.person_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the NOTE is the expected data type based on the specification.","CDM_TABLE":"NOTE","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":176,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234385 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.note_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_type_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE":"NOTE","CDM_FIELD":"note_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":177,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218760 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_class_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.note_class_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_class_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE":"NOTE","CDM_FIELD":"note_class_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":178,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216981 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = encoding_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.encoding_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the encoding_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE":"NOTE","CDM_FIELD":"encoding_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":179,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.190014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = language_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.language_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the language_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE":"NOTE","CDM_FIELD":"language_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":180,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.289013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.provider_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the NOTE is the expected data type based on the specification.","CDM_TABLE":"NOTE","CDM_FIELD":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":181,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202489 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_occurrence_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the NOTE is the expected data type based on the specification.","CDM_TABLE":"NOTE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":182,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.240603 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_detail_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE REGEXP_INSTR(NOTE.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the NOTE is the expected data type based on the specification.","CDM_TABLE":"NOTE","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":183,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE REGEXP_INSTR(NOTE_NLP.note_nlp_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_nlp_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_nlp_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":184,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.253113 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE REGEXP_INSTR(NOTE_NLP.note_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":185,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.230979 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = section_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE REGEXP_INSTR(NOTE_NLP.section_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the section_concept_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"section_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":186,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281219 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE REGEXP_INSTR(NOTE_NLP.note_nlp_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_nlp_concept_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_nlp_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":187,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.296890 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_source_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE REGEXP_INSTR(NOTE_NLP.note_nlp_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_nlp_source_concept_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_nlp_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":188,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187529 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.observation_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":189,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.288815 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":190,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.191739 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.observation_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":191,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249976 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.observation_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_type_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":192,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.240239 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.qualifier_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the qualifier_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"qualifier_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":193,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203135 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.unit_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the unit_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":194,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228907 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.provider_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":195,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213233 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_occurrence_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.visit_occurrence_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":196,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249973 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_detail_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.visit_detail_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":197,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.188358 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE REGEXP_INSTR(OBSERVATION.observation_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_source_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":198,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249427 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.specimen_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specimen_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":199,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239239 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":200,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.257347 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.specimen_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specimen_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":201,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234389 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.specimen_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specimen_type_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":202,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.236987 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.unit_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the unit_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":203,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.270116 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.anatomic_site_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the anatomic_site_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"anatomic_site_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":204,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.290980 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE REGEXP_INSTR(SPECIMEN.disease_status_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the disease_status_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"disease_status_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":205,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.308273 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE REGEXP_INSTR(FACT_RELATIONSHIP.domain_concept_id_1, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the domain_concept_id_1 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"domain_concept_id_1","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":206,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.352245 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE REGEXP_INSTR(FACT_RELATIONSHIP.fact_id_1, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the fact_id_1 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"fact_id_1","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":207,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.302960 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE REGEXP_INSTR(FACT_RELATIONSHIP.domain_concept_id_2, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the domain_concept_id_2 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"domain_concept_id_2","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":208,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.404546 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE REGEXP_INSTR(FACT_RELATIONSHIP.fact_id_2, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the fact_id_2 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"fact_id_2","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":209,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249976 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = relationship_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\t  FROM cdm.FACT_RELATIONSHIP\r\n\t\t WHERE REGEXP_INSTR(FACT_RELATIONSHIP.relationship_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the relationship_concept_id in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"relationship_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":210,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.270486 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.location_id' AS violating_field, LOCATION.* \r\n\t\t  FROM cdm.LOCATION\r\n\t\t WHERE REGEXP_INSTR(LOCATION.location_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the location_id in the LOCATION is the expected data type based on the specification.","CDM_TABLE":"LOCATION","CDM_FIELD":"location_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":211,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.276990 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE REGEXP_INSTR(CARE_SITE.care_site_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the CARE_SITE is the expected data type based on the specification.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":212,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203135 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE REGEXP_INSTR(CARE_SITE.place_of_service_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the place_of_service_concept_id in the CARE_SITE is the expected data type based on the specification.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"place_of_service_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":213,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.205862 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.location_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE REGEXP_INSTR(CARE_SITE.location_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the location_id in the CARE_SITE is the expected data type based on the specification.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"location_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":214,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.220910 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.provider_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE":"PROVIDER","CDM_FIELD":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":215,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234384 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.specialty_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specialty_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE":"PROVIDER","CDM_FIELD":"specialty_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":216,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187475 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.care_site_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.care_site_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE":"PROVIDER","CDM_FIELD":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":217,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.219085 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = year_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.year_of_birth' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.year_of_birth, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the year_of_birth in the PROVIDER is the expected data type based on the specification.","CDM_TABLE":"PROVIDER","CDM_FIELD":"year_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":218,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.303864 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.gender_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the gender_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE":"PROVIDER","CDM_FIELD":"gender_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":219,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218727 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.specialty_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specialty_source_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE":"PROVIDER","CDM_FIELD":"specialty_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":220,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.718786 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_source_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE REGEXP_INSTR(PROVIDER.gender_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the gender_source_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE":"PROVIDER","CDM_FIELD":"gender_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":221,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250032 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.payer_plan_period_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the payer_plan_period_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_plan_period_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":222,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.268110 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":223,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.390023 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.payer_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the payer_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":224,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.280479 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.payer_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the payer_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":225,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.290017 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.plan_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the plan_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"plan_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":226,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.296511 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.plan_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the plan_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"plan_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":227,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196509 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.sponsor_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the sponsor_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"sponsor_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":228,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.340517 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.sponsor_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the sponsor_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"sponsor_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":229,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.262516 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.stop_reason_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the stop_reason_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"stop_reason_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":230,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.258516 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE REGEXP_INSTR(PAYER_PLAN_PERIOD.stop_reason_source_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the stop_reason_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"stop_reason_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":231,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE REGEXP_INSTR(COST.cost_type_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the cost_type_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE":"COST","CDM_FIELD":"cost_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":232,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.304493 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = currency_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.currency_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE REGEXP_INSTR(COST.currency_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the currency_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE":"COST","CDM_FIELD":"currency_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":233,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.272014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = revenue_code_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.revenue_code_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE REGEXP_INSTR(COST.revenue_code_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the revenue_code_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE":"COST","CDM_FIELD":"revenue_code_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":234,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.291016 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = drg_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.drg_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE REGEXP_INSTR(COST.drg_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drg_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE":"COST","CDM_FIELD":"drg_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":235,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248980 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE REGEXP_INSTR(DRUG_ERA.drug_era_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_era_id in the DRUG_ERA is the expected data type based on the specification.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":236,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.290015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.person_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE REGEXP_INSTR(DRUG_ERA.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the DRUG_ERA is the expected data type based on the specification.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":237,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.418025 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE REGEXP_INSTR(DRUG_ERA.drug_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_concept_id in the DRUG_ERA is the expected data type based on the specification.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":238,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.292014 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_exposure_count\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_exposure_count' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE REGEXP_INSTR(DRUG_ERA.drug_exposure_count, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_exposure_count in the DRUG_ERA is the expected data type based on the specification.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_exposure_count","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":239,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.374017 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = gap_days\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.gap_days' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE REGEXP_INSTR(DRUG_ERA.gap_days, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the gap_days in the DRUG_ERA is the expected data type based on the specification.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"gap_days","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":240,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.339986 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE REGEXP_INSTR(DOSE_ERA.dose_era_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the dose_era_id in the DOSE_ERA is the expected data type based on the specification.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":241,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.351022 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.person_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE REGEXP_INSTR(DOSE_ERA.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the DOSE_ERA is the expected data type based on the specification.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":242,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.364985 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE REGEXP_INSTR(DOSE_ERA.drug_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_concept_id in the DOSE_ERA is the expected data type based on the specification.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":243,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215010 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE REGEXP_INSTR(DOSE_ERA.unit_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the unit_concept_id in the DOSE_ERA is the expected data type based on the specification.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":244,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.367022 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE REGEXP_INSTR(CONDITION_ERA.condition_era_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_era_id in the CONDITION_ERA is the expected data type based on the specification.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":245,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.272979 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.person_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE REGEXP_INSTR(CONDITION_ERA.person_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the CONDITION_ERA is the expected data type based on the specification.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":246,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.265013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE REGEXP_INSTR(CONDITION_ERA.condition_concept_id, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_concept_id in the CONDITION_ERA is the expected data type based on the specification.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":247,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234013 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_CDM_DATATYPE\r\n\r\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_occurrence_count\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_occurrence_count' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE REGEXP_INSTR(CONDITION_ERA.condition_occurrence_count, '^[\\-\\+]?(\\\\d*\\\\.)?\\\\d+([Ee][\\-\\+]?\\\\d+)?$') = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"CDM_DATATYPE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_occurrence_count in the CONDITION_ERA is the expected data type based on the specification.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_occurrence_count","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":248,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"4.529415 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.person_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.person_id IN ( SELECT PERSON.person_id \r\n\t\t                                          FROM cdm.PERSON\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY PERSON.person_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the person_id field of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"person_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":249,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.703155 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.observation_period_id IN ( SELECT OBSERVATION_PERIOD.observation_period_id \r\n\t\t                                          FROM cdm.OBSERVATION_PERIOD\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY OBSERVATION_PERIOD.observation_period_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the observation_period_id field of the OBSERVATION_PERIOD.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":250,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.521245 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_occurrence_id IN ( SELECT VISIT_OCCURRENCE.visit_occurrence_id \r\n\t\t                                          FROM cdm.VISIT_OCCURRENCE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY VISIT_OCCURRENCE.visit_occurrence_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the visit_occurrence_id field of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":251,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.635362 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_occurrence_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_occurrence_id IN ( SELECT CONDITION_OCCURRENCE.condition_occurrence_id \r\n\t\t                                          FROM cdm.CONDITION_OCCURRENCE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY CONDITION_OCCURRENCE.condition_occurrence_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the condition_occurrence_id field of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_occurrence_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":252,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.468773 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_exposure_id IN ( SELECT DRUG_EXPOSURE.drug_exposure_id \r\n\t\t                                          FROM cdm.DRUG_EXPOSURE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY DRUG_EXPOSURE.drug_exposure_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the drug_exposure_id field of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":253,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.483610 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_occurrence_id IN ( SELECT PROCEDURE_OCCURRENCE.procedure_occurrence_id \r\n\t\t                                          FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY PROCEDURE_OCCURRENCE.procedure_occurrence_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the procedure_occurrence_id field of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_occurrence_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":254,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.328771 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_exposure_id IN ( SELECT DEVICE_EXPOSURE.device_exposure_id \r\n\t\t                                          FROM cdm.DEVICE_EXPOSURE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY DEVICE_EXPOSURE.device_exposure_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the device_exposure_id field of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":255,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.269423 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_id IN ( SELECT MEASUREMENT.measurement_id \r\n\t\t                                          FROM cdm.MEASUREMENT\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY MEASUREMENT.measurement_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the measurement_id field of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":256,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250268 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_id IN ( SELECT VISIT_DETAIL.visit_detail_id \r\n\t\t                                          FROM cdm.VISIT_DETAIL\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY VISIT_DETAIL.visit_detail_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the visit_detail_id field of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":257,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.468739 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_id IN ( SELECT NOTE.note_id \r\n\t\t                                          FROM cdm.NOTE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY NOTE.note_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the note_id field of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"note_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":258,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.500019 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.note_nlp_id IN ( SELECT NOTE_NLP.note_nlp_id \r\n\t\t                                          FROM cdm.NOTE_NLP\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY NOTE_NLP.note_nlp_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the note_nlp_id field of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_nlp_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":259,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.308489 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_id IN ( SELECT OBSERVATION.observation_id \r\n\t\t                                          FROM cdm.OBSERVATION\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY OBSERVATION.observation_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the observation_id field of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":260,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.390642 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_id IN ( SELECT SPECIMEN.specimen_id \r\n\t\t                                          FROM cdm.SPECIMEN\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY SPECIMEN.specimen_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the specimen_id field of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":261,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.312514 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.location_id' AS violating_field, LOCATION.* \r\n\t\t  FROM cdm.LOCATION\r\n\t\t WHERE LOCATION.location_id IN ( SELECT LOCATION.location_id \r\n\t\t                                          FROM cdm.LOCATION\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY LOCATION.location_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the location_id field of the LOCATION.","CDM_TABLE":"LOCATION","CDM_FIELD":"location_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":262,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234351 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE CARE_SITE.care_site_id IN ( SELECT CARE_SITE.care_site_id \r\n\t\t                                          FROM cdm.CARE_SITE\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY CARE_SITE.care_site_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the care_site_id field of the CARE_SITE.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"care_site_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":263,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.437521 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE PROVIDER.provider_id IN ( SELECT PROVIDER.provider_id \r\n\t\t                                          FROM cdm.PROVIDER\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY PROVIDER.provider_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the provider_id field of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"provider_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":264,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.232519 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\t  FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t WHERE PAYER_PLAN_PERIOD.payer_plan_period_id IN ( SELECT PAYER_PLAN_PERIOD.payer_plan_period_id \r\n\t\t                                          FROM cdm.PAYER_PLAN_PERIOD\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY PAYER_PLAN_PERIOD.payer_plan_period_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the payer_plan_period_id field of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_plan_period_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":265,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.244611 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_id IN ( SELECT COST.cost_id \r\n\t\t                                          FROM cdm.COST\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY COST.cost_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the cost_id field of the COST.","CDM_TABLE":"COST","CDM_FIELD":"cost_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":266,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.321618 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_era_id IN ( SELECT DRUG_ERA.drug_era_id \r\n\t\t                                          FROM cdm.DRUG_ERA\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY DRUG_ERA.drug_era_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the drug_era_id field of the DRUG_ERA.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":267,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.278015 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.dose_era_id IN ( SELECT DOSE_ERA.dose_era_id \r\n\t\t                                          FROM cdm.DOSE_ERA\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY DOSE_ERA.dose_era_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the dose_era_id field of the DOSE_ERA.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":268,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187508 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_PRIMARY_KEY\r\n\r\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_era_id IN ( SELECT CONDITION_ERA.condition_era_id \r\n\t\t                                          FROM cdm.CONDITION_ERA\r\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY CONDITION_ERA.condition_era_id\r\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_PRIMARY_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the condition_era_id field of the CONDITION_ERA.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":269,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.318016 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.gender_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.gender_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PERSON","CDM_FIELD":"gender_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":270,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.392985 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.race_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.race_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the race_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PERSON","CDM_FIELD":"race_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":271,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.326275 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.ethnicity_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.ethnicity_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the ethnicity_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":272,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.270650 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = location_id\r\nfkTableName = LOCATION\r\nfkFieldName = LOCATION_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.location_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.LOCATION f1\r\n\t\tON p1.location_id = f1.LOCATION_ID\r\n\t\tWHERE f1.LOCATION_ID IS NULL AND p1.location_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the location_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PERSON","CDM_FIELD":"location_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":273,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215250 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PERSON","CDM_FIELD":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":274,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.243109 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = care_site_id\r\nfkTableName = CARE_SITE\r\nfkFieldName = CARE_SITE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.care_site_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CARE_SITE f1\r\n\t\tON p1.care_site_id = f1.CARE_SITE_ID\r\n\t\tWHERE f1.CARE_SITE_ID IS NULL AND p1.care_site_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the care_site_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PERSON","CDM_FIELD":"care_site_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":275,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.594995 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.gender_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.gender_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_source_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PERSON","CDM_FIELD":"gender_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":276,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187508 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.race_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.race_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the race_source_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PERSON","CDM_FIELD":"race_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":277,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218758 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PERSON p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.ethnicity_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.ethnicity_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the ethnicity_source_concept_id field in the PERSON table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":278,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203101 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the OBSERVATION_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":279,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.313537 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.period_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.period_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the period_type_concept_id field in the OBSERVATION_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"period_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":280,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.253754 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":281,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.381113 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_concept_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":282,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.265634 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_type_concept_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":283,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218757 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_source_concept_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":284,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187475 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.admitting_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.admitting_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the admitting_source_concept_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"admitting_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":285,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.562525 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.discharge_to_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.discharge_to_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the discharge_to_concept_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"discharge_to_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":286,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.298489 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = preceding_visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.preceding_visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.preceding_visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.preceding_visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the preceding_visit_occurrence_id field in the VISIT_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"preceding_visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":287,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250010 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":288,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237035 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.condition_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.condition_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":289,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.296854 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.condition_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.condition_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_type_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":290,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.221008 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.condition_status_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.condition_status_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_status_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_status_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":291,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.265639 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":292,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187475 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":293,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281262 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":294,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281264 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.condition_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.condition_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_source_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":295,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218726 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":296,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239011 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drug_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drug_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":297,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.312514 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drug_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drug_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_type_concept_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":298,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218728 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.route_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.route_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the route_concept_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"route_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":299,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.219621 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":300,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187524 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":301,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.296915 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":302,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.640654 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drug_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drug_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_source_concept_id field in the DRUG_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":303,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237241 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the PROCEDURE_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":304,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217492 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.procedure_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.procedure_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_concept_id field in the PROCEDURE_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":305,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198904 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.procedure_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.procedure_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_type_concept_id field in the PROCEDURE_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":306,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.312514 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.modifier_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.modifier_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the modifier_concept_id field in the PROCEDURE_OCCURRENCE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"modifier_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":307,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.184242 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":308,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.292974 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.device_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.device_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_concept_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":309,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234384 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.device_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.device_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_type_concept_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":310,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218725 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":311,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234384 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":312,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.231882 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":313,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.343734 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.device_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.device_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_source_concept_id field in the DEVICE_EXPOSURE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":314,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218731 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":315,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.317015 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.measurement_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.measurement_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":316,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234351 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.measurement_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.measurement_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_type_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":317,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.359393 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = operator_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.operator_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.operator_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the operator_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"operator_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":318,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.236132 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_as_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.value_as_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.value_as_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.value_as_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the value_as_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"value_as_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":319,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203102 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.unit_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.unit_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"unit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":320,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.156247 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":321,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.191403 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":322,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.312513 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":323,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187476 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.MEASUREMENT p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.measurement_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.measurement_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_source_concept_id field in the MEASUREMENT table that does not exist in the @FK_TABLE table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":324,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.437520 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":325,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250011 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_detail_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_detail_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_concept_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":326,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203100 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_detail_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_detail_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_type_concept_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":327,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.336890 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":328,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.251990 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = care_site_id\r\nfkTableName = CARE_SITE\r\nfkFieldName = CARE_SITE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.care_site_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CARE_SITE f1\r\n\t\tON p1.care_site_id = f1.CARE_SITE_ID\r\n\t\tWHERE f1.CARE_SITE_ID IS NULL AND p1.care_site_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the care_site_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"care_site_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":329,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187507 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.visit_detail_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.visit_detail_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_source_concept_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":330,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.183547 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.admitting_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.admitting_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the admitting_source_concept_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"admitting_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":331,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.244153 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.discharge_to_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.discharge_to_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the discharge_to_concept_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"discharge_to_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":332,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203135 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = preceding_visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.preceding_visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.preceding_visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.preceding_visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the preceding_visit_detail_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"preceding_visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":333,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281228 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_parent_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_parent_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_parent_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_parent_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_parent_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_parent_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":334,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281262 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.VISIT_DETAIL p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the VISIT_DETAIL table that does not exist in the @FK_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":335,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218255 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"NOTE","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":336,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203099 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.note_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.note_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_type_concept_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"NOTE","CDM_FIELD":"note_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":337,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.312512 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_class_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.note_class_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.note_class_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_class_concept_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"NOTE","CDM_FIELD":"note_class_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":338,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.181341 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = encoding_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.encoding_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.encoding_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the encoding_concept_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"NOTE","CDM_FIELD":"encoding_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":339,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.195265 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = language_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.language_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.language_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the language_concept_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"NOTE","CDM_FIELD":"language_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":340,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218724 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"NOTE","CDM_FIELD":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":341,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.244700 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"NOTE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":342,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.265635 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the NOTE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"NOTE","CDM_FIELD":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":343,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.236958 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = section_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE_NLP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.section_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.section_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the section_concept_id field in the NOTE_NLP table that does not exist in the @FK_TABLE table.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"section_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":344,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.356264 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE_NLP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.note_nlp_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.note_nlp_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_nlp_concept_id field in the NOTE_NLP table that does not exist in the @FK_TABLE table.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_nlp_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":345,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.251535 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.NOTE_NLP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.note_nlp_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.note_nlp_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_nlp_source_concept_id field in the NOTE_NLP table that does not exist in the @FK_TABLE table.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_nlp_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":346,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.236578 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":347,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.289992 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.observation_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.observation_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":348,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.423221 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.observation_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.observation_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_type_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":349,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.437523 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = value_as_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.value_as_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.value_as_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.value_as_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the value_as_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"value_as_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":350,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.315368 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.qualifier_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.qualifier_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the qualifier_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"qualifier_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":351,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.293584 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.unit_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.unit_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"unit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":352,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.247163 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = provider_id\r\nfkTableName = PROVIDER\r\nfkFieldName = PROVIDER_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.provider_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.PROVIDER f1\r\n\t\tON p1.provider_id = f1.PROVIDER_ID\r\n\t\tWHERE f1.PROVIDER_ID IS NULL AND p1.provider_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":353,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249974 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_occurrence_id\r\nfkTableName = VISIT_OCCURRENCE\r\nfkFieldName = VISIT_OCCURRENCE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_occurrence_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.VISIT_OCCURRENCE f1\r\n\t\tON p1.visit_occurrence_id = f1.VISIT_OCCURRENCE_ID\r\n\t\tWHERE f1.VISIT_OCCURRENCE_ID IS NULL AND p1.visit_occurrence_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":354,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209702 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_detail_id\r\nfkTableName = VISIT_DETAIL\r\nfkFieldName = VISIT_DETAIL_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_detail_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.VISIT_DETAIL f1\r\n\t\tON p1.visit_detail_id = f1.VISIT_DETAIL_ID\r\n\t\tWHERE f1.VISIT_DETAIL_ID IS NULL AND p1.visit_detail_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":355,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.262790 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.OBSERVATION p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.observation_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.observation_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_source_concept_id field in the OBSERVATION table that does not exist in the @FK_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":356,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.250013 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":357,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203103 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.specimen_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.specimen_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specimen_concept_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":358,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.285727 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.specimen_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.specimen_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specimen_type_concept_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":359,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.257365 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.unit_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.unit_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"unit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":360,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249979 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.anatomic_site_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.anatomic_site_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the anatomic_site_concept_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"anatomic_site_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":361,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234390 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.SPECIMEN p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.disease_status_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.disease_status_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the disease_status_concept_id field in the SPECIMEN table that does not exist in the @FK_TABLE table.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"disease_status_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":362,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.344168 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_1\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, p1.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.domain_concept_id_1 = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.domain_concept_id_1 IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the domain_concept_id_1 field in the FACT_RELATIONSHIP table that does not exist in the @FK_TABLE table.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"domain_concept_id_1","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":363,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187476 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_2\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, p1.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.domain_concept_id_2 = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.domain_concept_id_2 IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the domain_concept_id_2 field in the FACT_RELATIONSHIP table that does not exist in the @FK_TABLE table.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"domain_concept_id_2","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":364,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226236 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = relationship_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.relationship_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.relationship_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the relationship_concept_id field in the FACT_RELATIONSHIP table that does not exist in the @FK_TABLE table.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"relationship_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":365,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.406270 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CARE_SITE p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.place_of_service_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.place_of_service_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the place_of_service_concept_id field in the CARE_SITE table that does not exist in the @FK_TABLE table.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"place_of_service_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":366,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187507 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROVIDER p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.specialty_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.specialty_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specialty_concept_id field in the PROVIDER table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PROVIDER","CDM_FIELD":"specialty_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":367,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249514 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = care_site_id\r\nfkTableName = CARE_SITE\r\nfkFieldName = CARE_SITE_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.care_site_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROVIDER p1\r\n\t\tLEFT JOIN cdm.CARE_SITE f1\r\n\t\tON p1.care_site_id = f1.CARE_SITE_ID\r\n\t\tWHERE f1.CARE_SITE_ID IS NULL AND p1.care_site_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the care_site_id field in the PROVIDER table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PROVIDER","CDM_FIELD":"care_site_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":368,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.323021 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROVIDER p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.gender_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.gender_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PROVIDER table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PROVIDER","CDM_FIELD":"gender_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":369,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.222011 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROVIDER p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.specialty_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.specialty_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specialty_source_concept_id field in the PROVIDER table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PROVIDER","CDM_FIELD":"specialty_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":370,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.233515 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PROVIDER p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.gender_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.gender_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_source_concept_id field in the PROVIDER table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PROVIDER","CDM_FIELD":"gender_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":371,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.192010 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.payer_plan_period_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.payer_plan_period_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the payer_plan_period_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_plan_period_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":372,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.220512 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":373,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.295514 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.payer_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.payer_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the payer_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":374,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.274014 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.payer_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.payer_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the payer_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":375,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.251515 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.plan_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.plan_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the plan_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"plan_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":376,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.280515 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.plan_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.plan_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the plan_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"plan_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":377,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.254480 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.sponsor_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.sponsor_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the sponsor_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"sponsor_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":378,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.316517 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.sponsor_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.sponsor_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the sponsor_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"sponsor_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":379,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.291016 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.stop_reason_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.stop_reason_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the stop_reason_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"stop_reason_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":380,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.222981 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.stop_reason_source_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.stop_reason_source_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the stop_reason_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the @FK_TABLE table.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"stop_reason_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":381,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.243011 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_domain_id\r\nfkTableName = DOMAIN\r\nfkFieldName = DOMAIN_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_domain_id' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.DOMAIN f1\r\n\t\tON p1.cost_domain_id = f1.DOMAIN_ID\r\n\t\tWHERE f1.DOMAIN_ID IS NULL AND p1.cost_domain_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the cost_domain_id field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE":"COST","CDM_FIELD":"cost_domain_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":382,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.433025 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.cost_type_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.cost_type_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the cost_type_concept_id field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE":"COST","CDM_FIELD":"cost_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":383,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.354020 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = currency_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.currency_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.currency_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.currency_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the currency_concept_id field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE":"COST","CDM_FIELD":"currency_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":384,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.342018 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_patient_copay\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_patient_copay' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.paid_patient_copay = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.paid_patient_copay IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the paid_patient_copay field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE":"COST","CDM_FIELD":"paid_patient_copay","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":385,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.377988 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = revenue_code_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.revenue_code_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.revenue_code_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.revenue_code_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the revenue_code_concept_id field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE":"COST","CDM_FIELD":"revenue_code_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":386,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.426023 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = drg_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.drg_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.COST p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drg_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drg_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drg_concept_id field in the COST table that does not exist in the @FK_TABLE table.","CDM_TABLE":"COST","CDM_FIELD":"drg_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":387,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.386987 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_ERA p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the DRUG_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":388,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.233011 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DRUG_ERA p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drug_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drug_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":389,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.356987 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = person_id\r\nfkTableName = PERSON\r\nfkFieldName = PERSON_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.person_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DOSE_ERA p1\r\n\t\tLEFT JOIN cdm.PERSON f1\r\n\t\tON p1.person_id = f1.PERSON_ID\r\n\t\tWHERE f1.PERSON_ID IS NULL AND p1.person_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the DOSE_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":390,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.231013 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DOSE_ERA p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.drug_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.drug_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DOSE_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":391,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.272019 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.DOSE_ERA p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.unit_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.unit_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the DOSE_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"unit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":392,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237013 secs","QUERY_TEXT":"\r\n/*********\r\nIS_FOREIGN_KEY\r\nForeign key check\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\nfkTableName = CONCEPT\r\nfkFieldName = CONCEPT_ID\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, p1.* \r\n\t\tFROM cdm.CONDITION_ERA p1\r\n\t\tLEFT JOIN cdm.CONCEPT f1\r\n\t\tON p1.condition_concept_id = f1.CONCEPT_ID\r\n\t\tWHERE f1.CONCEPT_ID IS NULL AND p1.condition_concept_id IS NOT NULL \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_FOREIGN_KEY","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_concept_id field in the CONDITION_ERA table that does not exist in the @FK_TABLE table.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":393,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.295412 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\nfkDomain = Gender\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PERSON t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.gender_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Gender'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PERSON table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"PERSON","CDM_FIELD":"gender_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":394,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.358088 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\nfkDomain = Race\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PERSON t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.race_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Race'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the race_concept_id field in the PERSON table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"PERSON","CDM_FIELD":"race_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":395,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.296940 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\nfkDomain = Ethnicity\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PERSON t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.ethnicity_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Ethnicity'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the ethnicity_concept_id field in the PERSON table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":396,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234387 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.period_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the period_type_concept_id field in the OBSERVATION_PERIOD table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"period_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":397,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.205986 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\nfkDomain = Visit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.visit_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Visit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_concept_id field in the VISIT_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":398,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.165406 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.visit_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_type_concept_id field in the VISIT_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":399,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218763 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\nfkDomain = Visit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.admitting_source_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Visit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the admitting_source_concept_id field in the VISIT_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"admitting_source_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":400,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218728 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\nfkDomain = Visit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.discharge_to_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Visit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the discharge_to_concept_id field in the VISIT_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"discharge_to_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":401,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.296845 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\nfkDomain = Condition\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.condition_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Condition'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_concept_id field in the CONDITION_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":402,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.220615 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.condition_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_type_concept_id field in the CONDITION_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":403,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203135 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\nfkDomain = Drug\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.drug_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Drug'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_EXPOSURE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":404,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.247112 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.drug_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_type_concept_id field in the DRUG_EXPOSURE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":405,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218911 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\nfkDomain = Route\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.route_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Route'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the route_concept_id field in the DRUG_EXPOSURE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"route_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":406,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218760 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\nfkDomain = Procedure\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.procedure_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Procedure'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_concept_id field in the PROCEDURE_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":407,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249978 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.procedure_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_type_concept_id field in the PROCEDURE_OCCURRENCE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":408,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.362413 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\nfkDomain = Device\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.device_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Device'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_concept_id field in the DEVICE_EXPOSURE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":409,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234381 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.device_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_type_concept_id field in the DEVICE_EXPOSURE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":410,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.240505 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\nfkDomain = Measurement\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.MEASUREMENT t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.measurement_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Measurement'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_concept_id field in the MEASUREMENT table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":411,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187507 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.MEASUREMENT t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.measurement_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_type_concept_id field in the MEASUREMENT table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":412,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.402422 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\nfkDomain = Unit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.MEASUREMENT t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.unit_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Unit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the MEASUREMENT table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":413,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203155 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\nfkDomain = Visit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_DETAIL t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.visit_detail_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Visit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_concept_id field in the VISIT_DETAIL table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":414,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.312114 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.VISIT_DETAIL t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.visit_detail_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_type_concept_id field in the VISIT_DETAIL table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":415,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.288016 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.NOTE t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.note_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_type_concept_id field in the NOTE table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"NOTE","CDM_FIELD":"note_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":416,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.311481 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.OBSERVATION t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.observation_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_type_concept_id field in the OBSERVATION table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":417,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.233513 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\nfkDomain = Unit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.OBSERVATION t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.unit_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Unit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the OBSERVATION table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":418,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202512 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\nfkDomain = Type Concept\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.SPECIMEN t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.specimen_type_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Type Concept'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specimen_type_concept_id field in the SPECIMEN table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":419,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.251515 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\nfkDomain = Gender\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.PROVIDER t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.gender_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Gender'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PROVIDER table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"PROVIDER","CDM_FIELD":"gender_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":420,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.229012 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\nfkDomain = Drug\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DRUG_ERA t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.drug_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Drug'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_ERA table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":421,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.222981 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\nfkDomain = Drug\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DOSE_ERA t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.drug_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Drug'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DOSE_ERA table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":422,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.295513 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\nfkDomain = Unit\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.DOSE_ERA t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.unit_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Unit'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the DOSE_ERA table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":423,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.312016 secs","QUERY_TEXT":"\r\n/*********\r\nFIELD_FK_DOMAIN\r\n\r\nall standard concept ids are part of specified domain\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\nfkDomain = Condition\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, t.* \r\n\t\t  FROM cdm.CONDITION_ERA t\r\n\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t    ON t.condition_concept_id = c.CONCEPT_ID\r\n\t\t WHERE c.CONCEPT_ID != 0 AND c.DOMAIN_ID != 'Condition'\r\n\t\t  \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"FK_DOMAIN","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_concept_id field in the CONDITION_ERA table that do not conform to the @FK_DOMAIN domain.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":424,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.274518 secs","QUERY_TEXT":"\r\n/*********\r\nFK_CLASS\r\nDrug era standard concepts, ingredients only\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\nfkDomain = Drug\r\nfkClass = Ingredient\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tLEFT JOIN cdm.CONCEPT \r\n\t\tON DRUG_ERA.drug_concept_id = CONCEPT.CONCEPT_ID\r\n        WHERE CONCEPT.CONCEPT_ID != 0 AND (CONCEPT.DOMAIN_ID != 'Drug' OR CONCEPT.CONCEPT_CLASS_ID != 'Ingredient') \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"FK_CLASS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_ERA table that do not conform to the @FK_CLASS class.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_fk_class.sql","CATEGORY":"Conformance","SUBCATEGORY":"Computational","CONTEXT":"Verification","checkId":425,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.315515 secs","QUERY_TEXT":"\r\n/*********\r\nFK_CLASS\r\nDrug era standard concepts, ingredients only\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\nfkDomain = Drug\r\nfkClass = Ingredient\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tLEFT JOIN cdm.CONCEPT \r\n\t\tON DOSE_ERA.drug_concept_id = CONCEPT.CONCEPT_ID\r\n        WHERE CONCEPT.CONCEPT_ID != 0 AND (CONCEPT.DOMAIN_ID != 'Drug' OR CONCEPT.CONCEPT_CLASS_ID != 'Ingredient') \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"FK_CLASS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DOSE_ERA table that do not conform to the @FK_CLASS class.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_fk_class.sql","CATEGORY":"Conformance","SUBCATEGORY":"Computational","CONTEXT":"Verification","checkId":426,"FAILED":0},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.gender_concept_id IN ( SELECT t.gender_concept_id \r\n\t\t                                          FROM cdm.PERSON t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.gender_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the gender_concept_id field in the PERSON table. ","CDM_TABLE":"PERSON","CDM_FIELD":"gender_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 658;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_PERSON_gender_concept_id.txt","checkId":427,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.race_concept_id IN ( SELECT t.race_concept_id \r\n\t\t                                          FROM cdm.PERSON t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.race_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the race_concept_id field in the PERSON table. ","CDM_TABLE":"PERSON","CDM_FIELD":"race_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 650;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_PERSON_race_concept_id.txt","checkId":428,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, PERSON.* \r\n\t\t  FROM cdm.PERSON\r\n\t\t WHERE PERSON.ethnicity_concept_id IN ( SELECT t.ethnicity_concept_id \r\n\t\t                                          FROM cdm.PERSON t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.ethnicity_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the ethnicity_concept_id field in the PERSON table. ","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 670;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_PERSON_ethnicity_concept_id.txt","checkId":429,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\t  FROM cdm.OBSERVATION_PERIOD\r\n\t\t WHERE OBSERVATION_PERIOD.period_type_concept_id IN ( SELECT t.period_type_concept_id \r\n\t\t                                          FROM cdm.OBSERVATION_PERIOD t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.period_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the period_type_concept_id field in the OBSERVATION_PERIOD table. ","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"period_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 738;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_OBSERVATION_PERIOD_period_type_concept_id.txt","checkId":430,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_concept_id IN ( SELECT t.visit_concept_id \r\n\t\t                                          FROM cdm.VISIT_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.visit_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 704;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_VISIT_OCCURRENCE_visit_concept_id.txt","checkId":431,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.visit_type_concept_id IN ( SELECT t.visit_type_concept_id \r\n\t\t                                          FROM cdm.VISIT_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.visit_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_type_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 724;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_VISIT_OCCURRENCE_visit_type_concept_id.txt","checkId":432,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.admitting_source_concept_id IN ( SELECT t.admitting_source_concept_id \r\n\t\t                                          FROM cdm.VISIT_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.admitting_source_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the admitting_source_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"admitting_source_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 748;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_VISIT_OCCURRENCE_admitting_source_concept_id.txt","checkId":433,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\t  FROM cdm.VISIT_OCCURRENCE\r\n\t\t WHERE VISIT_OCCURRENCE.discharge_to_concept_id IN ( SELECT t.discharge_to_concept_id \r\n\t\t                                          FROM cdm.VISIT_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.discharge_to_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the discharge_to_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"discharge_to_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 732;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_VISIT_OCCURRENCE_discharge_to_concept_id.txt","checkId":434,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_concept_id IN ( SELECT t.condition_concept_id \r\n\t\t                                          FROM cdm.CONDITION_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.condition_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the condition_concept_id field in the CONDITION_OCCURRENCE table. ","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 740;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_CONDITION_OCCURRENCE_condition_concept_id.txt","checkId":435,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_type_concept_id IN ( SELECT t.condition_type_concept_id \r\n\t\t                                          FROM cdm.CONDITION_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.condition_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the condition_type_concept_id field in the CONDITION_OCCURRENCE table. ","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 760;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_CONDITION_OCCURRENCE_condition_type_concept_id.txt","checkId":436,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\t  FROM cdm.CONDITION_OCCURRENCE\r\n\t\t WHERE CONDITION_OCCURRENCE.condition_status_concept_id IN ( SELECT t.condition_status_concept_id \r\n\t\t                                          FROM cdm.CONDITION_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.condition_status_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the condition_status_concept_id field in the CONDITION_OCCURRENCE table. ","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_status_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 768;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_CONDITION_OCCURRENCE_condition_status_concept_id.txt","checkId":437,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_concept_id IN ( SELECT t.drug_concept_id \r\n\t\t                                          FROM cdm.DRUG_EXPOSURE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.drug_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the drug_concept_id field in the DRUG_EXPOSURE table. ","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 685;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_DRUG_EXPOSURE_drug_concept_id.txt","checkId":438,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.drug_type_concept_id IN ( SELECT t.drug_type_concept_id \r\n\t\t                                          FROM cdm.DRUG_EXPOSURE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.drug_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the drug_type_concept_id field in the DRUG_EXPOSURE table. ","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 705;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_DRUG_EXPOSURE_drug_type_concept_id.txt","checkId":439,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\t  FROM cdm.DRUG_EXPOSURE\r\n\t\t WHERE DRUG_EXPOSURE.route_concept_id IN ( SELECT t.route_concept_id \r\n\t\t                                          FROM cdm.DRUG_EXPOSURE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.route_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the route_concept_id field in the DRUG_EXPOSURE table. ","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"route_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 689;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_DRUG_EXPOSURE_route_concept_id.txt","checkId":440,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_concept_id IN ( SELECT t.procedure_concept_id \r\n\t\t                                          FROM cdm.PROCEDURE_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.procedure_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the procedure_concept_id field in the PROCEDURE_OCCURRENCE table. ","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 740;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_PROCEDURE_OCCURRENCE_procedure_concept_id.txt","checkId":441,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.procedure_type_concept_id IN ( SELECT t.procedure_type_concept_id \r\n\t\t                                          FROM cdm.PROCEDURE_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.procedure_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the procedure_type_concept_id field in the PROCEDURE_OCCURRENCE table. ","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 760;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_PROCEDURE_OCCURRENCE_procedure_type_concept_id.txt","checkId":442,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\t  FROM cdm.PROCEDURE_OCCURRENCE\r\n\t\t WHERE PROCEDURE_OCCURRENCE.modifier_concept_id IN ( SELECT t.modifier_concept_id \r\n\t\t                                          FROM cdm.PROCEDURE_OCCURRENCE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.modifier_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the modifier_concept_id field in the PROCEDURE_OCCURRENCE table. ","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"modifier_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 736;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_PROCEDURE_OCCURRENCE_modifier_concept_id.txt","checkId":443,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_concept_id IN ( SELECT t.device_concept_id \r\n\t\t                                          FROM cdm.DEVICE_EXPOSURE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.device_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the device_concept_id field in the DEVICE_EXPOSURE table. ","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 703;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_DEVICE_EXPOSURE_device_concept_id.txt","checkId":444,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\t  FROM cdm.DEVICE_EXPOSURE\r\n\t\t WHERE DEVICE_EXPOSURE.device_type_concept_id IN ( SELECT t.device_type_concept_id \r\n\t\t                                          FROM cdm.DEVICE_EXPOSURE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.device_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the device_type_concept_id field in the DEVICE_EXPOSURE table. ","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 723;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_DEVICE_EXPOSURE_device_type_concept_id.txt","checkId":445,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_concept_id IN ( SELECT t.measurement_concept_id \r\n\t\t                                          FROM cdm.MEASUREMENT t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.measurement_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the measurement_concept_id field in the MEASUREMENT table. ","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 703;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_MEASUREMENT_measurement_concept_id.txt","checkId":446,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.measurement_type_concept_id IN ( SELECT t.measurement_type_concept_id \r\n\t\t                                          FROM cdm.MEASUREMENT t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.measurement_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the measurement_type_concept_id field in the MEASUREMENT table. ","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 723;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_MEASUREMENT_measurement_type_concept_id.txt","checkId":447,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = operator_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.operator_concept_id IN ( SELECT t.operator_concept_id \r\n\t\t                                          FROM cdm.MEASUREMENT t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.operator_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the operator_concept_id field in the MEASUREMENT table. ","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"operator_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 691;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_MEASUREMENT_operator_concept_id.txt","checkId":448,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\t  FROM cdm.MEASUREMENT\r\n\t\t WHERE MEASUREMENT.unit_concept_id IN ( SELECT t.unit_concept_id \r\n\t\t                                          FROM cdm.MEASUREMENT t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.unit_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the unit_concept_id field in the MEASUREMENT table. ","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 675;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_MEASUREMENT_unit_concept_id.txt","checkId":449,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_concept_id IN ( SELECT t.visit_detail_concept_id \r\n\t\t                                          FROM cdm.VISIT_DETAIL t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.visit_detail_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_detail_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 712;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_VISIT_DETAIL_visit_detail_concept_id.txt","checkId":450,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.visit_detail_type_concept_id IN ( SELECT t.visit_detail_type_concept_id \r\n\t\t                                          FROM cdm.VISIT_DETAIL t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.visit_detail_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_detail_type_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 732;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_VISIT_DETAIL_visit_detail_type_concept_id.txt","checkId":451,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.admitting_source_concept_id IN ( SELECT t.admitting_source_concept_id \r\n\t\t                                          FROM cdm.VISIT_DETAIL t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.admitting_source_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the admitting_source_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"admitting_source_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 728;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_VISIT_DETAIL_admitting_source_concept_id.txt","checkId":452,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\t  FROM cdm.VISIT_DETAIL\r\n\t\t WHERE VISIT_DETAIL.discharge_to_concept_id IN ( SELECT t.discharge_to_concept_id \r\n\t\t                                          FROM cdm.VISIT_DETAIL t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.discharge_to_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the discharge_to_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"discharge_to_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 712;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_VISIT_DETAIL_discharge_to_concept_id.txt","checkId":453,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_type_concept_id IN ( SELECT t.note_type_concept_id \r\n\t\t                                          FROM cdm.NOTE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.note_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the note_type_concept_id field in the NOTE table. ","CDM_TABLE":"NOTE","CDM_FIELD":"note_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 660;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_NOTE_note_type_concept_id.txt","checkId":454,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_class_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.note_class_concept_id IN ( SELECT t.note_class_concept_id \r\n\t\t                                          FROM cdm.NOTE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.note_class_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the note_class_concept_id field in the NOTE table. ","CDM_TABLE":"NOTE","CDM_FIELD":"note_class_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 664;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_NOTE_note_class_concept_id.txt","checkId":455,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = encoding_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.encoding_concept_id IN ( SELECT t.encoding_concept_id \r\n\t\t                                          FROM cdm.NOTE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.encoding_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the encoding_concept_id field in the NOTE table. ","CDM_TABLE":"NOTE","CDM_FIELD":"encoding_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 656;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_NOTE_encoding_concept_id.txt","checkId":456,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = language_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, NOTE.* \r\n\t\t  FROM cdm.NOTE\r\n\t\t WHERE NOTE.language_concept_id IN ( SELECT t.language_concept_id \r\n\t\t                                          FROM cdm.NOTE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.language_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the language_concept_id field in the NOTE table. ","CDM_TABLE":"NOTE","CDM_FIELD":"language_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 656;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_NOTE_language_concept_id.txt","checkId":457,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = section_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.section_concept_id IN ( SELECT t.section_concept_id \r\n\t\t                                          FROM cdm.NOTE_NLP t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.section_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the section_concept_id field in the NOTE_NLP table. ","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"section_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 672;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_NOTE_NLP_section_concept_id.txt","checkId":458,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\t  FROM cdm.NOTE_NLP\r\n\t\t WHERE NOTE_NLP.note_nlp_concept_id IN ( SELECT t.note_nlp_concept_id \r\n\t\t                                          FROM cdm.NOTE_NLP t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.note_nlp_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the note_nlp_concept_id field in the NOTE_NLP table. ","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_nlp_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 676;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_NOTE_NLP_note_nlp_concept_id.txt","checkId":459,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_concept_id IN ( SELECT t.observation_concept_id \r\n\t\t                                          FROM cdm.OBSERVATION t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.observation_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the observation_concept_id field in the OBSERVATION table. ","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 703;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_OBSERVATION_observation_concept_id.txt","checkId":460,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.observation_type_concept_id IN ( SELECT t.observation_type_concept_id \r\n\t\t                                          FROM cdm.OBSERVATION t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.observation_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the observation_type_concept_id field in the OBSERVATION table. ","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 723;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_OBSERVATION_observation_type_concept_id.txt","checkId":461,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.qualifier_concept_id IN ( SELECT t.qualifier_concept_id \r\n\t\t                                          FROM cdm.OBSERVATION t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.qualifier_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the qualifier_concept_id field in the OBSERVATION table. ","CDM_TABLE":"OBSERVATION","CDM_FIELD":"qualifier_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 695;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_OBSERVATION_qualifier_concept_id.txt","checkId":462,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, OBSERVATION.* \r\n\t\t  FROM cdm.OBSERVATION\r\n\t\t WHERE OBSERVATION.unit_concept_id IN ( SELECT t.unit_concept_id \r\n\t\t                                          FROM cdm.OBSERVATION t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.unit_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the unit_concept_id field in the OBSERVATION table. ","CDM_TABLE":"OBSERVATION","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 675;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_OBSERVATION_unit_concept_id.txt","checkId":463,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_concept_id IN ( SELECT t.specimen_concept_id \r\n\t\t                                          FROM cdm.SPECIMEN t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.specimen_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the specimen_concept_id field in the SPECIMEN table. ","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 676;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_SPECIMEN_specimen_concept_id.txt","checkId":464,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.specimen_type_concept_id IN ( SELECT t.specimen_type_concept_id \r\n\t\t                                          FROM cdm.SPECIMEN t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.specimen_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the specimen_type_concept_id field in the SPECIMEN table. ","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 696;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_SPECIMEN_specimen_type_concept_id.txt","checkId":465,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.unit_concept_id IN ( SELECT t.unit_concept_id \r\n\t\t                                          FROM cdm.SPECIMEN t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.unit_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the unit_concept_id field in the SPECIMEN table. ","CDM_TABLE":"SPECIMEN","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 660;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_SPECIMEN_unit_concept_id.txt","checkId":466,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.anatomic_site_concept_id IN ( SELECT t.anatomic_site_concept_id \r\n\t\t                                          FROM cdm.SPECIMEN t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.anatomic_site_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the anatomic_site_concept_id field in the SPECIMEN table. ","CDM_TABLE":"SPECIMEN","CDM_FIELD":"anatomic_site_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 696;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_SPECIMEN_anatomic_site_concept_id.txt","checkId":467,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, SPECIMEN.* \r\n\t\t  FROM cdm.SPECIMEN\r\n\t\t WHERE SPECIMEN.disease_status_concept_id IN ( SELECT t.disease_status_concept_id \r\n\t\t                                          FROM cdm.SPECIMEN t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.disease_status_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the disease_status_concept_id field in the SPECIMEN table. ","CDM_TABLE":"SPECIMEN","CDM_FIELD":"disease_status_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 700;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_SPECIMEN_disease_status_concept_id.txt","checkId":468,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, CARE_SITE.* \r\n\t\t  FROM cdm.CARE_SITE\r\n\t\t WHERE CARE_SITE.place_of_service_concept_id IN ( SELECT t.place_of_service_concept_id \r\n\t\t                                          FROM cdm.CARE_SITE t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.place_of_service_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the place_of_service_concept_id field in the CARE_SITE table. ","CDM_TABLE":"CARE_SITE","CDM_FIELD":"place_of_service_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 713;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_CARE_SITE_place_of_service_concept_id.txt","checkId":469,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE PROVIDER.specialty_concept_id IN ( SELECT t.specialty_concept_id \r\n\t\t                                          FROM cdm.PROVIDER t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.specialty_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the specialty_concept_id field in the PROVIDER table. ","CDM_TABLE":"PROVIDER","CDM_FIELD":"specialty_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 680;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_PROVIDER_specialty_concept_id.txt","checkId":470,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, PROVIDER.* \r\n\t\t  FROM cdm.PROVIDER\r\n\t\t WHERE PROVIDER.gender_concept_id IN ( SELECT t.gender_concept_id \r\n\t\t                                          FROM cdm.PROVIDER t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.gender_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the gender_concept_id field in the PROVIDER table. ","CDM_TABLE":"PROVIDER","CDM_FIELD":"gender_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 668;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_PROVIDER_gender_concept_id.txt","checkId":471,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, COST.* \r\n\t\t  FROM cdm.COST\r\n\t\t WHERE COST.cost_type_concept_id IN ( SELECT t.cost_type_concept_id \r\n\t\t                                          FROM cdm.COST t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.cost_type_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the cost_type_concept_id field in the COST table. ","CDM_TABLE":"COST","CDM_FIELD":"cost_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 660;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_COST_cost_type_concept_id.txt","checkId":472,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\t  FROM cdm.DRUG_ERA\r\n\t\t WHERE DRUG_ERA.drug_concept_id IN ( SELECT t.drug_concept_id \r\n\t\t                                          FROM cdm.DRUG_ERA t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.drug_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the drug_concept_id field in the DRUG_ERA table. ","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 660;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_DRUG_ERA_drug_concept_id.txt","checkId":473,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.drug_concept_id IN ( SELECT t.drug_concept_id \r\n\t\t                                          FROM cdm.DOSE_ERA t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.drug_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the drug_concept_id field in the DOSE_ERA table. ","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 660;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_DOSE_ERA_drug_concept_id.txt","checkId":474,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\t  FROM cdm.DOSE_ERA\r\n\t\t WHERE DOSE_ERA.unit_concept_id IN ( SELECT t.unit_concept_id \r\n\t\t                                          FROM cdm.DOSE_ERA t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.unit_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the unit_concept_id field in the DOSE_ERA table. ","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 660;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_DOSE_ERA_unit_concept_id.txt","checkId":475,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nFIELD_IS_STANDARD_VALID_CONCEPT\r\n\r\nall standard concept id fields are standard and valid\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, CONDITION_ERA.* \r\n\t\t  FROM cdm.CONDITION_ERA\r\n\t\t WHERE CONDITION_ERA.condition_concept_id IN ( SELECT t.condition_concept_id \r\n\t\t                                          FROM cdm.CONDITION_ERA t   \r\n\t\t\t\t\t\t\t\t\t\t\t\t  LEFT JOIN cdm.CONCEPT c\r\n\t\t\t\t\t\t\t\t\t\t\t\t    ON t.condition_concept_id = c.CONCEPT_ID \r\n\t\t\t\t\t\t\t\t\t\t\t     WHERE c.CONCEPT_ID != 0 AND (c.STANDARD_CONCEPT != 'S' OR c.INVALID_REASON IS NOT NULL ) \r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;","CHECK_NAME":"IS_STANDARD_VALID_CONCEPT","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the condition_concept_id field in the CONDITION_ERA table. ","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: syntax error at or near \"violated_rows\" \nPosition: 705;\nAn error report has been created at  output/Flatiron/errors/FIELD_IS_STANDARD_VALID_CONCEPT_CONDITION_ERA_condition_concept_id.txt","checkId":476,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.person_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":477,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.352020 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.gender_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_concept_id of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"gender_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":478,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.229011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = year_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.year_of_birth IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the year_of_birth of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"year_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":479,"FAILED":0},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.493029 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = month_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.month_of_birth IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the month_of_birth of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"month_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":480,"FAILED":1},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.256981 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = day_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.day_of_birth IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the day_of_birth of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"day_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":481,"FAILED":1},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.291014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = birth_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.birth_datetime' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.birth_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the birth_datetime of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"birth_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":482,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.271013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.race_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_concept_id of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"race_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":483,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.200992 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ethnicity_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_concept_id of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":484,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.238012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.location_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.location_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"location_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":485,"FAILED":0},{"NUM_VIOLATED_ROWS":1144,"PCT_VIOLATED_ROWS":0.1195,"EXECUTION_TIME":"0.215013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.provider_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":486,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.care_site_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":487,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.221978 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = person_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.person_source_value' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.person_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_source_value of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"person_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":488,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.186012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_source_value' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.gender_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_value of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"gender_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":489,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.gender_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_concept_id of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"gender_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":490,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_source_value' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.race_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_source_value of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"race_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":491,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197978 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.race_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_source_concept_id of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"race_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":492,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.233010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_source_value' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ethnicity_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_source_value of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":493,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ethnicity_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_source_concept_id of the PERSON.","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":494,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.235980 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.observation_period_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_id of the OBSERVATION_PERIOD.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":495,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.353021 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION_PERIOD.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":496,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.320016 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.observation_period_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_start_date of the OBSERVATION_PERIOD.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":497,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.268986 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.observation_period_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_end_date of the OBSERVATION_PERIOD.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":498,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.654033 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.period_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the period_type_concept_id of the OBSERVATION_PERIOD.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"period_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":499,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.264982 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":500,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.336019 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":501,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":502,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.275980 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_start_date of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":503,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.161009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_start_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_start_datetime of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":504,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.178012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_end_date of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":505,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.387984 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_end_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_end_datetime of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":506,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.256015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_type_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":507,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.182009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.provider_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":508,"FAILED":1},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.189979 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.care_site_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":509,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.240758 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_value' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_source_value of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":510,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.223043 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_source_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":511,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.208996 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.admitting_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"admitting_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":512,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.390022 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_value' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.admitting_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_value of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"admitting_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":513,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.174007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.discharge_to_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"discharge_to_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":514,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.285981 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_source_value' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.discharge_to_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_source_value of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"discharge_to_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":515,"FAILED":1},{"NUM_VIOLATED_ROWS":9554,"PCT_VIOLATED_ROWS":0.0154,"EXECUTION_TIME":"0.271015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = preceding_visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.preceding_visit_occurrence_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.preceding_visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the preceding_visit_occurrence_id of the VISIT_OCCURRENCE.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"preceding_visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":516,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.341019 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_occurrence_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_occurrence_id of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":517,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.187977 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.person_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":518,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":519,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.309017 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_start_date of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":520,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.394987 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_start_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_start_datetime of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":521,"FAILED":1},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.248013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_end_date of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":522,"FAILED":1},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.214012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_end_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_end_datetime of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":523,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246979 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_type_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":524,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.291003 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_status_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_status_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_status_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":525,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.230014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = stop_reason\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.stop_reason' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.stop_reason IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"stop_reason","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":526,"FAILED":1},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.234980 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.provider_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":527,"FAILED":1},{"NUM_VIOLATED_ROWS":54564,"PCT_VIOLATED_ROWS":0.222,"EXECUTION_TIME":"0.225014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_occurrence_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":528,"FAILED":1},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.280013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_detail_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":529,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.306984 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_value' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_source_value of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":530,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.484024 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_source_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":531,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.258979 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_source_value' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_status_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_status_source_value of the CONDITION_OCCURRENCE.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_status_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":532,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.259015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_exposure_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_id of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":533,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.361018 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.person_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":534,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.149007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":535,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.224013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_exposure_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_start_date of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":536,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.228012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_exposure_start_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_start_datetime of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":537,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.272982 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_exposure_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_end_date of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":538,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.186007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_exposure_end_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_end_datetime of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":539,"FAILED":1},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.209010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = verbatim_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.verbatim_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the verbatim_end_date of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"verbatim_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":540,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_type_concept_id of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":541,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.411989 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = stop_reason\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.stop_reason' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.stop_reason IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"stop_reason","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":542,"FAILED":1},{"NUM_VIOLATED_ROWS":301935,"PCT_VIOLATED_ROWS":0.5897,"EXECUTION_TIME":"0.366018 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = refills\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.refills IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the refills of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"refills","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":543,"FAILED":1},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.341986 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.quantity' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.quantity IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":544,"FAILED":1},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.366019 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = days_supply\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.days_supply IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the days_supply of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"days_supply","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":545,"FAILED":1},{"NUM_VIOLATED_ROWS":210103,"PCT_VIOLATED_ROWS":0.4103,"EXECUTION_TIME":"0.295016 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = sig\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.sig' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.sig IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sig of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"sig","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":546,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.307017 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.route_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the route_concept_id of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"route_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":547,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.189952 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = lot_number\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.lot_number' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.lot_number IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the lot_number of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"lot_number","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":548,"FAILED":1},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.229009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.provider_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":549,"FAILED":1},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.203008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_occurrence_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":550,"FAILED":1},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.167011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.visit_detail_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":551,"FAILED":1},{"NUM_VIOLATED_ROWS":301935,"PCT_VIOLATED_ROWS":0.5897,"EXECUTION_TIME":"0.197976 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_value' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_source_value of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":552,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.214013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_source_concept_id of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":553,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_source_value' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.route_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the route_source_value of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"route_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":554,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.197014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = dose_unit_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.dose_unit_source_value' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.dose_unit_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_unit_source_value of the DRUG_EXPOSURE.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"dose_unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":555,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.503994 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_occurrence_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":556,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.225012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":557,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.153997 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":558,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.183008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_date of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":559,"FAILED":0},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.200010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_datetime of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":560,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.163010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_type_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":561,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.modifier_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the modifier_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"modifier_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":562,"FAILED":0},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.157977 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.quantity' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.quantity IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":563,"FAILED":1},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.230012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.provider_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":564,"FAILED":1},{"NUM_VIOLATED_ROWS":2538,"PCT_VIOLATED_ROWS":0.1662,"EXECUTION_TIME":"0.241015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_occurrence_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":565,"FAILED":1},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.249980 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_detail_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":566,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.254012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_value' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_source_value of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":567,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.254010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_source_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":568,"FAILED":0},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.238013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_source_value' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.modifier_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the modifier_source_value of the PROCEDURE_OCCURRENCE.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"modifier_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":569,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.376022 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_exposure_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_id of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":570,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.266014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.person_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":571,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.437969 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_concept_id of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":572,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_exposure_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_start_date of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":573,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_exposure_start_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_start_datetime of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":574,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.242979 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_exposure_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_end_date of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":575,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_exposure_end_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_end_datetime of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":576,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.182008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_type_concept_id of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":577,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.297982 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = unique_device_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.unique_device_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.unique_device_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unique_device_id of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"unique_device_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":578,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.289017 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.quantity' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.quantity IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":579,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.311989 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.provider_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":580,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.279983 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_occurrence_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":581,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.173010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.visit_detail_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":582,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.165012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_value' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_source_value of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":583,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.224011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_source_concept_id of the DEVICE_EXPOSURE.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":584,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.206976 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_id of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":585,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.180009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":586,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.186022 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_concept_id of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":587,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_date of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":588,"FAILED":0},{"NUM_VIOLATED_ROWS":13813277,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.194976 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_datetime' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_datetime of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":589,"FAILED":1},{"NUM_VIOLATED_ROWS":158544,"PCT_VIOLATED_ROWS":0.0115,"EXECUTION_TIME":"0.192010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_time\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_time' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_time IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_time of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_time","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":590,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.208011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_type_concept_id of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":591,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.309018 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = operator_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.operator_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the operator_concept_id of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"operator_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":592,"FAILED":0},{"NUM_VIOLATED_ROWS":347314,"PCT_VIOLATED_ROWS":0.0251,"EXECUTION_TIME":"0.230981 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_as_number\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.value_as_number' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.value_as_number IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_number of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"value_as_number","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":593,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227016 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_as_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.value_as_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.value_as_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_concept_id of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"value_as_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":594,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.180012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.unit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":595,"FAILED":0},{"NUM_VIOLATED_ROWS":3974125,"PCT_VIOLATED_ROWS":0.2877,"EXECUTION_TIME":"0.176011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = range_low\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.range_low' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.range_low IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the range_low of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"range_low","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":596,"FAILED":1},{"NUM_VIOLATED_ROWS":3994798,"PCT_VIOLATED_ROWS":0.2892,"EXECUTION_TIME":"0.212012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = range_high\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.range_high' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.range_high IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the range_high of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"range_high","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":597,"FAILED":1},{"NUM_VIOLATED_ROWS":13813277,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.225014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.provider_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":598,"FAILED":1},{"NUM_VIOLATED_ROWS":158893,"PCT_VIOLATED_ROWS":0.0115,"EXECUTION_TIME":"0.245961 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_occurrence_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":599,"FAILED":1},{"NUM_VIOLATED_ROWS":13813277,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.211981 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.visit_detail_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":600,"FAILED":1},{"NUM_VIOLATED_ROWS":158544,"PCT_VIOLATED_ROWS":0.0115,"EXECUTION_TIME":"0.281018 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_source_value' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_source_value of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":601,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.284014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_source_concept_id of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":602,"FAILED":0},{"NUM_VIOLATED_ROWS":159973,"PCT_VIOLATED_ROWS":0.0116,"EXECUTION_TIME":"0.256979 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_source_value' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.unit_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_source_value of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":603,"FAILED":1},{"NUM_VIOLATED_ROWS":13813277,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.268015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = value_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.value_source_value' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.value_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_source_value of the MEASUREMENT.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"value_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":604,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.225013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":605,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.208007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":606,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.232016 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_concept_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":607,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_start_date of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":608,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_start_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_start_datetime of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":609,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.272982 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_end_date of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":610,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.349020 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_end_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_end_datetime of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":611,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.240011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_type_concept_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":612,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.514039 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.provider_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":613,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.236014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.care_site_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":614,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249983 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_value' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_source_value of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":615,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.252012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_source_concept_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":616,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.266015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_value' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.admitting_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_value of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"admitting_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":617,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.403985 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.admitting_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_concept_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"admitting_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":618,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.300021 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.discharge_to_source_value' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.discharge_to_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_source_value of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"discharge_to_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":619,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.241981 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.discharge_to_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_concept_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"discharge_to_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":620,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.366020 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = preceding_visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.preceding_visit_detail_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.preceding_visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the preceding_visit_detail_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"preceding_visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":621,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.191015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_parent_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_parent_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_parent_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_parent_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_parent_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":622,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.191977 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_occurrence_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_DETAIL.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":623,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.178009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"note_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":624,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.245015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.person_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":625,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.161007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_date' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_date of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"note_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":626,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.152973 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_datetime' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_datetime of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"note_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":627,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.159009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_type_concept_id of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"note_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":628,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.146009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_class_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_class_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_class_concept_id of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"note_class_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":629,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.144016 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_title\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_title' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_title IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_title of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"note_title","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":630,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.141959 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_text\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_text' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_text IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_text of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"note_text","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":631,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.144013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = encoding_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.encoding_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the encoding_concept_id of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"encoding_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":632,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.142972 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = language_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.language_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the language_concept_id of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"language_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":633,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.152958 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.provider_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":634,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.374001 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_occurrence_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":635,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.149002 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.visit_detail_id' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":636,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.153978 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_source_value' AS violating_field, NOTE.* \r\n\t\tFROM cdm.NOTE\r\n\t\tWHERE cdm.NOTE.note_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_source_value of the NOTE.","CDM_TABLE":"NOTE","CDM_FIELD":"note_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":637,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.155034 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.note_nlp_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_id of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_nlp_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":638,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.139007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_id' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.note_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":639,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.148008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = section_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.section_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the section_concept_id of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"section_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":640,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.150010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = snippet\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.snippet' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.snippet IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the snippet of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"snippet","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":641,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.147000 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = offset\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.offset' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.offset IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the offset of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"offset","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":642,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.169972 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = lexical_variant\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.lexical_variant' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.lexical_variant IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the lexical_variant of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"lexical_variant","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":643,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.141082 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.note_nlp_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_concept_id of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_nlp_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":644,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.148008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = note_nlp_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.note_nlp_source_concept_id' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.note_nlp_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_source_concept_id of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"note_nlp_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":645,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.137004 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_system\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_system' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.nlp_system IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_system of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"nlp_system","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":646,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.148008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_date' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.nlp_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_date of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"nlp_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":647,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217978 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_datetime' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.nlp_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_datetime of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"nlp_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":648,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.147004 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = term_exists\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.term_exists' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.term_exists IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the term_exists of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"term_exists","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":649,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.145986 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = term_temporal\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.term_temporal' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.term_temporal IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the term_temporal of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"term_temporal","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":650,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.135009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = term_modifiers\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.term_modifiers' AS violating_field, NOTE_NLP.* \r\n\t\tFROM cdm.NOTE_NLP\r\n\t\tWHERE cdm.NOTE_NLP.term_modifiers IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the term_modifiers of the NOTE_NLP.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"term_modifiers","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":651,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.155019 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_id of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":652,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.151010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":653,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.137007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_concept_id of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":654,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.151019 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_date of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":655,"FAILED":0},{"NUM_VIOLATED_ROWS":61864,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.161024 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_datetime' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_datetime of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":656,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.136031 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_type_concept_id of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":657,"FAILED":0},{"NUM_VIOLATED_ROWS":60758,"PCT_VIOLATED_ROWS":0.9821,"EXECUTION_TIME":"0.150005 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = value_as_number\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.value_as_number' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.value_as_number IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_number of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"value_as_number","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":658,"FAILED":1},{"NUM_VIOLATED_ROWS":34821,"PCT_VIOLATED_ROWS":0.5629,"EXECUTION_TIME":"0.146976 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = value_as_string\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.value_as_string' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.value_as_string IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_string of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"value_as_string","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":659,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.149006 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = value_as_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.value_as_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.value_as_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_concept_id of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"value_as_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":660,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.144992 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.qualifier_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the qualifier_concept_id of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"qualifier_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":661,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.334020 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.unit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":662,"FAILED":0},{"NUM_VIOLATED_ROWS":61864,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.138004 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.provider_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":663,"FAILED":1},{"NUM_VIOLATED_ROWS":35163,"PCT_VIOLATED_ROWS":0.5684,"EXECUTION_TIME":"0.161002 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_occurrence_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_occurrence_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.visit_occurrence_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":664,"FAILED":1},{"NUM_VIOLATED_ROWS":61864,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.144011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = visit_detail_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.visit_detail_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.visit_detail_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":665,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.139015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_source_value' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_source_value of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":666,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.144011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_source_concept_id of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":667,"FAILED":0},{"NUM_VIOLATED_ROWS":60757,"PCT_VIOLATED_ROWS":0.9821,"EXECUTION_TIME":"0.150013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_source_value' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.unit_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_source_value of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":668,"FAILED":1},{"NUM_VIOLATED_ROWS":61864,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.143976 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.qualifier_source_value' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.qualifier_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the qualifier_source_value of the OBSERVATION.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"qualifier_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":669,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.150012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_id of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":670,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.146009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":671,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.165069 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_concept_id of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":672,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.159011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_type_concept_id of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":673,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.139025 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_date of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":674,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.149977 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_datetime' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_datetime IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_datetime of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":675,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.178007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = quantity\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.quantity' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.quantity IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":676,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.149997 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.unit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":677,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.151047 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.anatomic_site_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the anatomic_site_concept_id of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"anatomic_site_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":678,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.147009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.disease_status_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the disease_status_concept_id of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"disease_status_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":679,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.143976 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_source_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_source_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_source_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_source_id of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_source_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":680,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.154005 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_source_value' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_source_value of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":681,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.149059 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_source_value' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.unit_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_source_value of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":682,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.150008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.anatomic_site_source_value' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.anatomic_site_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the anatomic_site_source_value of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"anatomic_site_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":683,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.139013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.disease_status_source_value' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.disease_status_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the disease_status_source_value of the SPECIMEN.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"disease_status_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":684,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.154008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.domain_concept_id_1 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_1 of the FACT_RELATIONSHIP.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"domain_concept_id_1","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":685,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.156991 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.fact_id_1 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_1 of the FACT_RELATIONSHIP.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"fact_id_1","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":686,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.152014 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.domain_concept_id_2 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_2 of the FACT_RELATIONSHIP.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"domain_concept_id_2","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":687,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.138036 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = fact_id_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.fact_id_2 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_2 of the FACT_RELATIONSHIP.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"fact_id_2","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":688,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.150017 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = relationship_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.relationship_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the relationship_concept_id of the FACT_RELATIONSHIP.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"relationship_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":689,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.140008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.location_id' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.location_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the LOCATION.","CDM_TABLE":"LOCATION","CDM_FIELD":"location_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":690,"FAILED":0},{"NUM_VIOLATED_ROWS":46,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.142993 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = address_1\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.address_1' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.address_1 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the address_1 of the LOCATION.","CDM_TABLE":"LOCATION","CDM_FIELD":"address_1","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":691,"FAILED":1},{"NUM_VIOLATED_ROWS":46,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.136963 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = address_2\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.address_2' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.address_2 IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the address_2 of the LOCATION.","CDM_TABLE":"LOCATION","CDM_FIELD":"address_2","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":692,"FAILED":1},{"NUM_VIOLATED_ROWS":46,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.158019 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = city\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.city' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.city IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the city of the LOCATION.","CDM_TABLE":"LOCATION","CDM_FIELD":"city","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":693,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.151010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = state\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.state' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.state IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the state of the LOCATION.","CDM_TABLE":"LOCATION","CDM_FIELD":"state","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":694,"FAILED":0},{"NUM_VIOLATED_ROWS":46,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.151985 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = zip\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.zip' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.zip IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the zip of the LOCATION.","CDM_TABLE":"LOCATION","CDM_FIELD":"zip","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":695,"FAILED":1},{"NUM_VIOLATED_ROWS":46,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.152038 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = county\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.county' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.county IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the county of the LOCATION.","CDM_TABLE":"LOCATION","CDM_FIELD":"county","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":696,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.155974 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'LOCATION.location_source_value' AS violating_field, LOCATION.* \r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.location_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_source_value of the LOCATION.","CDM_TABLE":"LOCATION","CDM_FIELD":"location_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":697,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.143017 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the CARE_SITE.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":698,"FAILED":0},{"NUM_VIOLATED_ROWS":172,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.144006 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_name\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_name' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.care_site_name IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_name of the CARE_SITE.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"care_site_name","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":699,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.137007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.place_of_service_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the place_of_service_concept_id of the CARE_SITE.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"place_of_service_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":700,"FAILED":0},{"NUM_VIOLATED_ROWS":172,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.151004 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = location_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.location_id' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.location_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the CARE_SITE.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"location_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":701,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.302969 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.care_site_source_value' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.care_site_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_source_value of the CARE_SITE.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"care_site_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":702,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.142972 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_source_value' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.place_of_service_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the place_of_service_source_value of the CARE_SITE.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"place_of_service_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":703,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.160024 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.provider_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":704,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.196012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_name\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_name' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.provider_name IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_name of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"provider_name","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":705,"FAILED":1},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.143010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = npi\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.npi' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.npi IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the npi of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"npi","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":706,"FAILED":1},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.149955 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = dea\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.dea' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.dea IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dea of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"dea","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":707,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.150011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.specialty_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specialty_concept_id of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"specialty_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":708,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.144018 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = care_site_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.care_site_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.care_site_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":709,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.138992 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = year_of_birth\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.year_of_birth' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.year_of_birth IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the year_of_birth of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"year_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":710,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.152989 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.gender_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_concept_id of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"gender_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":711,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.143007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.provider_source_value' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.provider_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_source_value of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"provider_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":712,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.172972 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_source_value' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.specialty_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specialty_source_value of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"specialty_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":713,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.200018 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.specialty_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specialty_source_concept_id of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"specialty_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":714,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.148011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_source_value' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.gender_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_value of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"gender_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":715,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.146007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_source_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.gender_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_concept_id of the PROVIDER.","CDM_TABLE":"PROVIDER","CDM_FIELD":"gender_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":716,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.144057 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_plan_period_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_id of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_plan_period_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":717,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.153974 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":718,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.140009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_start_date' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_plan_period_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_start_date of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_plan_period_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":719,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.155988 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_end_date' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_plan_period_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_end_date of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_plan_period_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":720,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.145007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":721,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.162010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_value' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":722,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.154974 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.payer_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":723,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.154011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.plan_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the plan_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"plan_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":724,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.331018 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_value' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.plan_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the plan_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"plan_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":725,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.153004 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.plan_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the plan_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"plan_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":726,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.151013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.sponsor_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sponsor_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"sponsor_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":727,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239012 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_value' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.sponsor_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sponsor_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"sponsor_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":728,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.154010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.sponsor_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sponsor_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"sponsor_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":729,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.180013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = family_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.family_source_value' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.family_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the family_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"family_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":730,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.168008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.stop_reason_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"stop_reason_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":731,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.159974 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_value' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.stop_reason_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"stop_reason_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":732,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.165006 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_concept_id' AS violating_field, PAYER_PLAN_PERIOD.* \r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.stop_reason_source_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"stop_reason_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":733,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.158010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.cost_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_id of the COST.","CDM_TABLE":"COST","CDM_FIELD":"cost_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":734,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.161007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_event_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_event_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.cost_event_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_event_id of the COST.","CDM_TABLE":"COST","CDM_FIELD":"cost_event_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":735,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.160045 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_domain_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_domain_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.cost_domain_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_domain_id of the COST.","CDM_TABLE":"COST","CDM_FIELD":"cost_domain_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":736,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.141976 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.cost_type_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_type_concept_id of the COST.","CDM_TABLE":"COST","CDM_FIELD":"cost_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":737,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.147007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = currency_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.currency_concept_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.currency_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the currency_concept_id of the COST.","CDM_TABLE":"COST","CDM_FIELD":"currency_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":738,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.139025 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = total_charge\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.total_charge' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.total_charge IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the total_charge of the COST.","CDM_TABLE":"COST","CDM_FIELD":"total_charge","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":739,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.146006 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = total_cost\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.total_cost' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.total_cost IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the total_cost of the COST.","CDM_TABLE":"COST","CDM_FIELD":"total_cost","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":740,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.152004 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = total_paid\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.total_paid' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.total_paid IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the total_paid of the COST.","CDM_TABLE":"COST","CDM_FIELD":"total_paid","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":741,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.166009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_by_payer\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_by_payer' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_by_payer IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_by_payer of the COST.","CDM_TABLE":"COST","CDM_FIELD":"paid_by_payer","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":742,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.161970 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_by_patient\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_by_patient' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_by_patient IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_by_patient of the COST.","CDM_TABLE":"COST","CDM_FIELD":"paid_by_patient","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":743,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.168029 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_patient_copay\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_patient_copay' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_patient_copay IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_patient_copay of the COST.","CDM_TABLE":"COST","CDM_FIELD":"paid_patient_copay","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":744,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.164044 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_patient_coinsurance\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_patient_coinsurance' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_patient_coinsurance IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_patient_coinsurance of the COST.","CDM_TABLE":"COST","CDM_FIELD":"paid_patient_coinsurance","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":745,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.157037 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_patient_deductible\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_patient_deductible' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_patient_deductible IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_patient_deductible of the COST.","CDM_TABLE":"COST","CDM_FIELD":"paid_patient_deductible","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":746,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.142010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_by_primary\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_by_primary' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_by_primary IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_by_primary of the COST.","CDM_TABLE":"COST","CDM_FIELD":"paid_by_primary","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":747,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.172007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_ingredient_cost\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_ingredient_cost' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_ingredient_cost IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_ingredient_cost of the COST.","CDM_TABLE":"COST","CDM_FIELD":"paid_ingredient_cost","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":748,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.167011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_dispensing_fee\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_dispensing_fee' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.paid_dispensing_fee IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_dispensing_fee of the COST.","CDM_TABLE":"COST","CDM_FIELD":"paid_dispensing_fee","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":749,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.157026 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = payer_plan_period_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.payer_plan_period_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.payer_plan_period_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_id of the COST.","CDM_TABLE":"COST","CDM_FIELD":"payer_plan_period_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":750,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.153010 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = amount_allowed\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.amount_allowed' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.amount_allowed IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the amount_allowed of the COST.","CDM_TABLE":"COST","CDM_FIELD":"amount_allowed","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":751,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.160028 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = revenue_code_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.revenue_code_concept_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.revenue_code_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the revenue_code_concept_id of the COST.","CDM_TABLE":"COST","CDM_FIELD":"revenue_code_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":752,"FAILED":0},{"QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = revenue_code_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.revenue_code_source_value' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.revenue_code_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the revenue_code_source_value of the COST.","CDM_TABLE":"COST","CDM_FIELD":"revenue_code_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: column cost.revenue_code_source_value does not exist;\nAn error report has been created at  output/Flatiron/errors/FIELD_MEASURE_VALUE_COMPLETENESS_COST_revenue_code_source_value.txt","checkId":753,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.169006 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = drg_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.drg_concept_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.drg_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drg_concept_id of the COST.","CDM_TABLE":"COST","CDM_FIELD":"drg_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":754,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.155002 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = drg_source_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.drg_source_value' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.drg_source_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drg_source_value of the COST.","CDM_TABLE":"COST","CDM_FIELD":"drg_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":755,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213009 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_id' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_id of the DRUG_ERA.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":756,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.159007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.person_id' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DRUG_ERA.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":757,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.154987 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DRUG_ERA.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":758,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.165013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_start_date of the DRUG_ERA.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":759,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.166031 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_end_date' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_era_end_date of the DRUG_ERA.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":760,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.155003 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_exposure_count\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_exposure_count' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_exposure_count IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_count of the DRUG_ERA.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_exposure_count","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":761,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.147040 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = gap_days\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.gap_days' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.gap_days IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gap_days of the DRUG_ERA.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"gap_days","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":762,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.141008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.dose_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_id of the DOSE_ERA.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":763,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.155013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.person_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DOSE_ERA.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":764,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.152011 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.drug_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DOSE_ERA.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":765,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.145007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.unit_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the DOSE_ERA.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":766,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.141008 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_value\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_value' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.dose_value IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_value of the DOSE_ERA.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":767,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.149034 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.dose_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_start_date of the DOSE_ERA.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":768,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.205984 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_end_date' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.dose_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_era_end_date of the DOSE_ERA.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":769,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.154991 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_id' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_era_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_id of the CONDITION_ERA.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":770,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.172016 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = person_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.person_id' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.person_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the CONDITION_ERA.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":771,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.156015 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_concept_id IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_concept_id of the CONDITION_ERA.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":772,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196013 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_era_start_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_start_date of the CONDITION_ERA.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":773,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.175975 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_end_date' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_era_end_date IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_era_end_date of the CONDITION_ERA.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":774,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.159007 secs","QUERY_TEXT":"\r\n/*********\r\nMEASURE_VALUE_COMPLETENESS\r\nComputing number of null values and the proportion to total records per field\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_occurrence_count\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_occurrence_count' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_occurrence_count IS NULL\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"MEASURE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_occurrence_count of the CONDITION_ERA.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_occurrence_count","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":775,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"1.005020 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.gender_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field gender_concept_id in the PERSON table.","CDM_TABLE":"PERSON","CDM_FIELD":"gender_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":776,"FAILED":0},{"NUM_VIOLATED_ROWS":3595,"PCT_VIOLATED_ROWS":0.3756,"EXECUTION_TIME":"0.388021 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.race_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field race_concept_id in the PERSON table.","CDM_TABLE":"PERSON","CDM_FIELD":"race_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":777,"FAILED":1},{"NUM_VIOLATED_ROWS":8849,"PCT_VIOLATED_ROWS":0.9245,"EXECUTION_TIME":"0.207948 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ethnicity_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field ethnicity_concept_id in the PERSON table.","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":778,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.296018 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = period_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, OBSERVATION_PERIOD.* \r\n\t\tFROM cdm.OBSERVATION_PERIOD\r\n\t\tWHERE cdm.OBSERVATION_PERIOD.period_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field period_type_concept_id in the OBSERVATION_PERIOD table.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"period_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":779,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.263017 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":780,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211980 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_type_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":781,"FAILED":0},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.239012 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.admitting_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field admitting_source_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"admitting_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":782,"FAILED":1},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.188009 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.discharge_to_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field discharge_to_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"discharge_to_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":783,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.212012 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field condition_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":784,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.211014 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field condition_type_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":785,"FAILED":0},{"NUM_VIOLATED_ROWS":245805,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.207014 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_status_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field condition_status_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_status_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":786,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209067 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field drug_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":787,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196976 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field drug_type_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":788,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.198010 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.route_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field route_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"route_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":789,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.214012 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field procedure_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":790,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.182008 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field procedure_type_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":791,"FAILED":0},{"NUM_VIOLATED_ROWS":15268,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.161008 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.modifier_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field modifier_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"modifier_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":792,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.389021 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field device_concept_id in the DEVICE_EXPOSURE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":793,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.324018 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field device_type_concept_id in the DEVICE_EXPOSURE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":794,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.279983 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field measurement_concept_id in the MEASUREMENT table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":795,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.231012 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field measurement_type_concept_id in the MEASUREMENT table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":796,"FAILED":0},{"NUM_VIOLATED_ROWS":3993412,"PCT_VIOLATED_ROWS":0.2891,"EXECUTION_TIME":"0.244014 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.unit_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field unit_concept_id in the MEASUREMENT table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":797,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.287985 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_detail_concept_id in the VISIT_DETAIL table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":798,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.258017 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_detail_type_concept_id in the VISIT_DETAIL table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":799,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216009 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.admitting_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field admitting_source_concept_id in the VISIT_DETAIL table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"admitting_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":800,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.273979 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.discharge_to_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field discharge_to_concept_id in the VISIT_DETAIL table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"discharge_to_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":801,"FAILED":0},{"NUM_VIOLATED_ROWS":29786,"PCT_VIOLATED_ROWS":0.4815,"EXECUTION_TIME":"0.170012 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field observation_concept_id in the OBSERVATION table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":802,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.242014 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field observation_type_concept_id in the OBSERVATION table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":803,"FAILED":0},{"NUM_VIOLATED_ROWS":61864,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.147980 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.unit_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field unit_concept_id in the OBSERVATION table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":804,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.204011 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field specimen_concept_id in the SPECIMEN table.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":805,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193013 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.specimen_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field specimen_type_concept_id in the SPECIMEN table.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":806,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228025 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, SPECIMEN.* \r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.unit_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field unit_concept_id in the SPECIMEN table.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":807,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.200979 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.domain_concept_id_1 = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field domain_concept_id_1 in the FACT_RELATIONSHIP table.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"domain_concept_id_1","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":808,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.188010 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = domain_concept_id_2\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.domain_concept_id_2 = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field domain_concept_id_2 in the FACT_RELATIONSHIP table.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"domain_concept_id_2","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":809,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.260013 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = FACT_RELATIONSHIP\r\ncdmFieldName = relationship_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, FACT_RELATIONSHIP.* \r\n\t\tFROM cdm.FACT_RELATIONSHIP\r\n\t\tWHERE cdm.FACT_RELATIONSHIP.relationship_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.FACT_RELATIONSHIP\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field relationship_concept_id in the FACT_RELATIONSHIP table.","CDM_TABLE":"FACT_RELATIONSHIP","CDM_FIELD":"relationship_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":810,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.212010 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, CARE_SITE.* \r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.place_of_service_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field place_of_service_concept_id in the CARE_SITE table.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"place_of_service_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":811,"FAILED":0},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.213014 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.specialty_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field specialty_concept_id in the PROVIDER table.","CDM_TABLE":"PROVIDER","CDM_FIELD":"specialty_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":812,"FAILED":1},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.231011 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.gender_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field gender_concept_id in the PROVIDER table.","CDM_TABLE":"PROVIDER","CDM_FIELD":"gender_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":813,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237013 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = cost_type_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, COST.* \r\n\t\tFROM cdm.COST\r\n\t\tWHERE cdm.COST.cost_type_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field cost_type_concept_id in the COST table.","CDM_TABLE":"COST","CDM_FIELD":"cost_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":814,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.214977 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_concept_id' AS violating_field, DRUG_ERA.* \r\n\t\tFROM cdm.DRUG_ERA\r\n\t\tWHERE cdm.DRUG_ERA.drug_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field drug_concept_id in the DRUG_ERA table.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":815,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203011 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = drug_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.drug_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.drug_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field drug_concept_id in the DOSE_ERA table.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"drug_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":816,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.303015 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = unit_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.unit_concept_id' AS violating_field, DOSE_ERA.* \r\n\t\tFROM cdm.DOSE_ERA\r\n\t\tWHERE cdm.DOSE_ERA.unit_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field unit_concept_id in the DOSE_ERA table.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"unit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":817,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.178975 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_concept_id' AS violating_field, CONDITION_ERA.* \r\n\t\tFROM cdm.CONDITION_ERA\r\n\t\tWHERE cdm.CONDITION_ERA.condition_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"STANDARD_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field condition_concept_id in the CONDITION_ERA table.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":818,"FAILED":0},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.268016 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.gender_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.gender_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field gender_source_concept_id in the PERSON table.","CDM_TABLE":"PERSON","CDM_FIELD":"gender_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":819,"FAILED":1},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.299983 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.race_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.race_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field race_source_concept_id in the PERSON table.","CDM_TABLE":"PERSON","CDM_FIELD":"race_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":820,"FAILED":1},{"NUM_VIOLATED_ROWS":9572,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.999018 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.ethnicity_source_concept_id' AS violating_field, PERSON.* \r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ethnicity_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field ethnicity_source_concept_id in the PERSON table.","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":821,"FAILED":1},{"NUM_VIOLATED_ROWS":620709,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.247013 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, VISIT_OCCURRENCE.* \r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.visit_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field visit_source_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":822,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.722988 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, CONDITION_OCCURRENCE.* \r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.condition_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field condition_source_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":823,"FAILED":0},{"NUM_VIOLATED_ROWS":512038,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.254016 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, DRUG_EXPOSURE.* \r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.drug_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field drug_source_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":824,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.327984 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_concept_id' AS violating_field, PROCEDURE_OCCURRENCE.* \r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.procedure_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field procedure_source_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":825,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.209008 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, DEVICE_EXPOSURE.* \r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.device_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field device_source_concept_id in the DEVICE_EXPOSURE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":826,"FAILED":0},{"NUM_VIOLATED_ROWS":11244091,"PCT_VIOLATED_ROWS":0.814,"EXECUTION_TIME":"0.205011 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, MEASUREMENT.* \r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.measurement_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field measurement_source_concept_id in the MEASUREMENT table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":827,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.197009 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.visit_detail_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field visit_detail_source_concept_id in the VISIT_DETAIL table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":828,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.182975 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, VISIT_DETAIL.* \r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.admitting_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field admitting_source_concept_id in the VISIT_DETAIL table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"admitting_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":829,"FAILED":0},{"NUM_VIOLATED_ROWS":29786,"PCT_VIOLATED_ROWS":0.4815,"EXECUTION_TIME":"0.304017 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, OBSERVATION.* \r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.observation_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field observation_source_concept_id in the OBSERVATION table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":830,"FAILED":1},{"NUM_VIOLATED_ROWS":1102,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.561018 secs","QUERY_TEXT":"/*********\r\nCONCEPT_RECORD_COMPLETENESS\r\nnumber of 0s / total number of records\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_concept_id\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, PROVIDER.* \r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.specialty_source_concept_id = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_CONCEPT_RECORD_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field specialty_source_concept_id in the PROVIDER table.","CDM_TABLE":"PROVIDER","CDM_FIELD":"specialty_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":831,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.306019 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = gender_source_value\r\nstandardConceptFieldName = GENDER_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PERSON.gender_source_value' AS violating_field, PERSON.gender_source_value\r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.GENDER_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT gender_source_value) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the gender_source_value field of the PERSON table mapped to 0.","CDM_TABLE":"PERSON","CDM_FIELD":"gender_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":832,"FAILED":0},{"NUM_VIOLATED_ROWS":4,"PCT_VIOLATED_ROWS":0.6667,"EXECUTION_TIME":"0.185008 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = race_source_value\r\nstandardConceptFieldName = RACE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PERSON.race_source_value' AS violating_field, PERSON.race_source_value\r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.RACE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT race_source_value) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the race_source_value field of the PERSON table mapped to 0.","CDM_TABLE":"PERSON","CDM_FIELD":"race_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":833,"FAILED":1},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0.5,"EXECUTION_TIME":"0.370985 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = ethnicity_source_value\r\nstandardConceptFieldName = ETHNICITY_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PERSON.ethnicity_source_value' AS violating_field, PERSON.ethnicity_source_value\r\n\t\tFROM cdm.PERSON\r\n\t\tWHERE cdm.PERSON.ETHNICITY_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT ethnicity_source_value) AS num_rows\r\n\tFROM cdm.PERSON\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the ethnicity_source_value field of the PERSON table mapped to 0.","CDM_TABLE":"PERSON","CDM_FIELD":"ethnicity_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":834,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.234010 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_source_value\r\nstandardConceptFieldName = VISIT_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_OCCURRENCE.visit_source_value' AS violating_field, VISIT_OCCURRENCE.visit_source_value\r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.VISIT_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT visit_source_value) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the visit_source_value field of the VISIT_OCCURRENCE table mapped to 0.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":835,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.300013 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = admitting_source_value\r\nstandardConceptFieldName = ADMITTING_SOURCE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_OCCURRENCE.admitting_source_value' AS violating_field, VISIT_OCCURRENCE.admitting_source_value\r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.ADMITTING_SOURCE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT admitting_source_value) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the admitting_source_value field of the VISIT_OCCURRENCE table mapped to 0.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"admitting_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":836,"FAILED":1},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249978 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = discharge_to_source_value\r\nstandardConceptFieldName = DISCHARGE_TO_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_OCCURRENCE.discharge_to_source_value' AS violating_field, VISIT_OCCURRENCE.discharge_to_source_value\r\n\t\tFROM cdm.VISIT_OCCURRENCE\r\n\t\tWHERE cdm.VISIT_OCCURRENCE.DISCHARGE_TO_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT discharge_to_source_value) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the discharge_to_source_value field of the VISIT_OCCURRENCE table mapped to 0.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"discharge_to_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":837,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.274011 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_source_value\r\nstandardConceptFieldName = CONDITION_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'CONDITION_OCCURRENCE.condition_source_value' AS violating_field, CONDITION_OCCURRENCE.condition_source_value\r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT condition_source_value) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the condition_source_value field of the CONDITION_OCCURRENCE table mapped to 0.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":838,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.272047 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_status_source_value\r\nstandardConceptFieldName = CONDITION_STATUS_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'CONDITION_OCCURRENCE.condition_status_source_value' AS violating_field, CONDITION_OCCURRENCE.condition_status_source_value\r\n\t\tFROM cdm.CONDITION_OCCURRENCE\r\n\t\tWHERE cdm.CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT condition_status_source_value) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the condition_status_source_value field of the CONDITION_OCCURRENCE table mapped to 0.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_status_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":839,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.245982 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_source_value\r\nstandardConceptFieldName = DRUG_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'DRUG_EXPOSURE.drug_source_value' AS violating_field, DRUG_EXPOSURE.drug_source_value\r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.DRUG_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT drug_source_value) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the drug_source_value field of the DRUG_EXPOSURE table mapped to 0.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":840,"FAILED":0},{"NUM_VIOLATED_ROWS":26,"PCT_VIOLATED_ROWS":1,"EXECUTION_TIME":"0.354019 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = route_source_value\r\nstandardConceptFieldName = ROUTE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'DRUG_EXPOSURE.route_source_value' AS violating_field, DRUG_EXPOSURE.route_source_value\r\n\t\tFROM cdm.DRUG_EXPOSURE\r\n\t\tWHERE cdm.DRUG_EXPOSURE.ROUTE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT route_source_value) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the route_source_value field of the DRUG_EXPOSURE table mapped to 0.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"route_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":841,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.176008 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_source_value\r\nstandardConceptFieldName = PROCEDURE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PROCEDURE_OCCURRENCE.procedure_source_value' AS violating_field, PROCEDURE_OCCURRENCE.procedure_source_value\r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT procedure_source_value) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the procedure_source_value field of the PROCEDURE_OCCURRENCE table mapped to 0.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":842,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.196980 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = modifier_source_value\r\nstandardConceptFieldName = MODIFIER_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PROCEDURE_OCCURRENCE.modifier_source_value' AS violating_field, PROCEDURE_OCCURRENCE.modifier_source_value\r\n\t\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\t\tWHERE cdm.PROCEDURE_OCCURRENCE.MODIFIER_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT modifier_source_value) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the modifier_source_value field of the PROCEDURE_OCCURRENCE table mapped to 0.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"modifier_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":843,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.277017 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_source_value\r\nstandardConceptFieldName = DEVICE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'DEVICE_EXPOSURE.device_source_value' AS violating_field, DEVICE_EXPOSURE.device_source_value\r\n\t\tFROM cdm.DEVICE_EXPOSURE\r\n\t\tWHERE cdm.DEVICE_EXPOSURE.DEVICE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT device_source_value) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the device_source_value field of the DEVICE_EXPOSURE table mapped to 0.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":844,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.278013 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_source_value\r\nstandardConceptFieldName = MEASUREMENT_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'MEASUREMENT.measurement_source_value' AS violating_field, MEASUREMENT.measurement_source_value\r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.MEASUREMENT_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT measurement_source_value) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the measurement_source_value field of the MEASUREMENT table mapped to 0.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":845,"FAILED":0},{"NUM_VIOLATED_ROWS":15,"PCT_VIOLATED_ROWS":0.4839,"EXECUTION_TIME":"0.178933 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = unit_source_value\r\nstandardConceptFieldName = UNIT_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'MEASUREMENT.unit_source_value' AS violating_field, MEASUREMENT.unit_source_value\r\n\t\tFROM cdm.MEASUREMENT\r\n\t\tWHERE cdm.MEASUREMENT.UNIT_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT unit_source_value) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the unit_source_value field of the MEASUREMENT table mapped to 0.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"unit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":846,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.298014 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_source_value\r\nstandardConceptFieldName = VISIT_DETAIL_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_DETAIL.visit_detail_source_value' AS violating_field, VISIT_DETAIL.visit_detail_source_value\r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT visit_detail_source_value) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the visit_detail_source_value field of the VISIT_DETAIL table mapped to 0.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":847,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.306013 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = admitting_source_value\r\nstandardConceptFieldName = ADMITTING_SOURCE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_DETAIL.admitting_source_value' AS violating_field, VISIT_DETAIL.admitting_source_value\r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.ADMITTING_SOURCE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT admitting_source_value) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the admitting_source_value field of the VISIT_DETAIL table mapped to 0.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"admitting_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":848,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203977 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = discharge_to_source_value\r\nstandardConceptFieldName = DISCHARGE_TO_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'VISIT_DETAIL.discharge_to_source_value' AS violating_field, VISIT_DETAIL.discharge_to_source_value\r\n\t\tFROM cdm.VISIT_DETAIL\r\n\t\tWHERE cdm.VISIT_DETAIL.DISCHARGE_TO_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT discharge_to_source_value) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the discharge_to_source_value field of the VISIT_DETAIL table mapped to 0.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"discharge_to_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":849,"FAILED":0},{"NUM_VIOLATED_ROWS":9,"PCT_VIOLATED_ROWS":0.0106,"EXECUTION_TIME":"0.383019 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_source_value\r\nstandardConceptFieldName = OBSERVATION_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'OBSERVATION.observation_source_value' AS violating_field, OBSERVATION.observation_source_value\r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.OBSERVATION_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT observation_source_value) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the observation_source_value field of the OBSERVATION table mapped to 0.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":850,"FAILED":1},{"NUM_VIOLATED_ROWS":2,"PCT_VIOLATED_ROWS":2,"EXECUTION_TIME":"0.182008 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = unit_source_value\r\nstandardConceptFieldName = UNIT_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'OBSERVATION.unit_source_value' AS violating_field, OBSERVATION.unit_source_value\r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.UNIT_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT unit_source_value) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the unit_source_value field of the OBSERVATION table mapped to 0.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"unit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":851,"FAILED":1},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.230980 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = qualifier_source_value\r\nstandardConceptFieldName = QUALIFIER_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'OBSERVATION.qualifier_source_value' AS violating_field, OBSERVATION.qualifier_source_value\r\n\t\tFROM cdm.OBSERVATION\r\n\t\tWHERE cdm.OBSERVATION.QUALIFIER_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT qualifier_source_value) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the qualifier_source_value field of the OBSERVATION table mapped to 0.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"qualifier_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":852,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.267013 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_source_value\r\nstandardConceptFieldName = SPECIMEN_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'SPECIMEN.specimen_source_value' AS violating_field, SPECIMEN.specimen_source_value\r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.SPECIMEN_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT specimen_source_value) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the specimen_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":853,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193010 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = unit_source_value\r\nstandardConceptFieldName = UNIT_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'SPECIMEN.unit_source_value' AS violating_field, SPECIMEN.unit_source_value\r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.UNIT_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT unit_source_value) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the unit_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"unit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":854,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.534995 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = anatomic_site_source_value\r\nstandardConceptFieldName = ANATOMIC_SITE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'SPECIMEN.anatomic_site_source_value' AS violating_field, SPECIMEN.anatomic_site_source_value\r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.ANATOMIC_SITE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT anatomic_site_source_value) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the anatomic_site_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"anatomic_site_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":855,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.255015 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = disease_status_source_value\r\nstandardConceptFieldName = DISEASE_STATUS_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'SPECIMEN.disease_status_source_value' AS violating_field, SPECIMEN.disease_status_source_value\r\n\t\tFROM cdm.SPECIMEN\r\n\t\tWHERE cdm.SPECIMEN.DISEASE_STATUS_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT disease_status_source_value) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the disease_status_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"disease_status_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":856,"FAILED":0},{"QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = LOCATION\r\ncdmFieldName = location_source_value\r\nstandardConceptFieldName = LOCATION_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'LOCATION.location_source_value' AS violating_field, LOCATION.location_source_value\r\n\t\tFROM cdm.LOCATION\r\n\t\tWHERE cdm.LOCATION.LOCATION_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT location_source_value) AS num_rows\r\n\tFROM cdm.LOCATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the location_source_value field of the LOCATION table mapped to 0.","CDM_TABLE":"LOCATION","CDM_FIELD":"location_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: column location.location_concept_id does not exist;\nAn error report has been created at  output/Flatiron/errors/FIELD_SOURCE_VALUE_COMPLETENESS_LOCATION_location_source_value.txt","checkId":857,"FAILED":1},{"QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = care_site_source_value\r\nstandardConceptFieldName = CARE_SITE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'CARE_SITE.care_site_source_value' AS violating_field, CARE_SITE.care_site_source_value\r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.CARE_SITE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT care_site_source_value) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the care_site_source_value field of the CARE_SITE table mapped to 0.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"care_site_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: column care_site.care_site_concept_id does not exist;\nAn error report has been created at  output/Flatiron/errors/FIELD_SOURCE_VALUE_COMPLETENESS_CARE_SITE_care_site_source_value.txt","checkId":858,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.353986 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CARE_SITE\r\ncdmFieldName = place_of_service_source_value\r\nstandardConceptFieldName = PLACE_OF_SERVICE_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'CARE_SITE.place_of_service_source_value' AS violating_field, CARE_SITE.place_of_service_source_value\r\n\t\tFROM cdm.CARE_SITE\r\n\t\tWHERE cdm.CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT place_of_service_source_value) AS num_rows\r\n\tFROM cdm.CARE_SITE\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the place_of_service_source_value field of the CARE_SITE table mapped to 0.","CDM_TABLE":"CARE_SITE","CDM_FIELD":"place_of_service_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":859,"FAILED":0},{"QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = provider_source_value\r\nstandardConceptFieldName = PROVIDER_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PROVIDER.provider_source_value' AS violating_field, PROVIDER.provider_source_value\r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.PROVIDER_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT provider_source_value) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the provider_source_value field of the PROVIDER table mapped to 0.","CDM_TABLE":"PROVIDER","CDM_FIELD":"provider_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: column provider.provider_concept_id does not exist;\nAn error report has been created at  output/Flatiron/errors/FIELD_SOURCE_VALUE_COMPLETENESS_PROVIDER_provider_source_value.txt","checkId":860,"FAILED":1},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.304981 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = specialty_source_value\r\nstandardConceptFieldName = SPECIALTY_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PROVIDER.specialty_source_value' AS violating_field, PROVIDER.specialty_source_value\r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.SPECIALTY_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT specialty_source_value) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the specialty_source_value field of the PROVIDER table mapped to 0.","CDM_TABLE":"PROVIDER","CDM_FIELD":"specialty_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":861,"FAILED":1},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.320014 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROVIDER\r\ncdmFieldName = gender_source_value\r\nstandardConceptFieldName = GENDER_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PROVIDER.gender_source_value' AS violating_field, PROVIDER.gender_source_value\r\n\t\tFROM cdm.PROVIDER\r\n\t\tWHERE cdm.PROVIDER.GENDER_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT gender_source_value) AS num_rows\r\n\tFROM cdm.PROVIDER\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the gender_source_value field of the PROVIDER table mapped to 0.","CDM_TABLE":"PROVIDER","CDM_FIELD":"gender_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":862,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.344022 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_source_value\r\nstandardConceptFieldName = PAYER_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.payer_source_value' AS violating_field, PAYER_PLAN_PERIOD.payer_source_value\r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.PAYER_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT payer_source_value) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the payer_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":863,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.262979 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = plan_source_value\r\nstandardConceptFieldName = PLAN_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.plan_source_value' AS violating_field, PAYER_PLAN_PERIOD.plan_source_value\r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.PLAN_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT plan_source_value) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the plan_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"plan_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":864,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.507026 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = sponsor_source_value\r\nstandardConceptFieldName = SPONSOR_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.sponsor_source_value' AS violating_field, PAYER_PLAN_PERIOD.sponsor_source_value\r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.SPONSOR_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT sponsor_source_value) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the sponsor_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"sponsor_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":865,"FAILED":0},{"QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = family_source_value\r\nstandardConceptFieldName = FAMILY_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.family_source_value' AS violating_field, PAYER_PLAN_PERIOD.family_source_value\r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.FAMILY_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT family_source_value) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the family_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"family_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: column payer_plan_period.family_concept_id does not exist;\nAn error report has been created at  output/Flatiron/errors/FIELD_SOURCE_VALUE_COMPLETENESS_PAYER_PLAN_PERIOD_family_source_value.txt","checkId":866,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246012 secs","QUERY_TEXT":"/*********\r\nSOURCE_VALUE_COMPLETENESS\r\nnumber of source values with 0 standard concept / number of distinct source values\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = stop_reason_source_value\r\nstandardConceptFieldName = STOP_REASON_CONCEPT_ID\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.stop_reason_source_value' AS violating_field, PAYER_PLAN_PERIOD.stop_reason_source_value\r\n\t\tFROM cdm.PAYER_PLAN_PERIOD\r\n\t\tWHERE cdm.PAYER_PLAN_PERIOD.STOP_REASON_CONCEPT_ID = 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n( \r\n\tSELECT COUNT(DISTINCT stop_reason_source_value) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"SOURCE_VALUE_COMPLETENESS","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the stop_reason_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"stop_reason_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":867,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.351019 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = year_of_birth\r\nplausibleValueLow = 1850\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, PERSON.*\r\n\t\tfrom cdm.PERSON\r\n    where year_of_birth < 1850\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n\twhere year_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the year_of_birth field of the PERSON table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"PERSON","CDM_FIELD":"year_of_birth","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":868,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.316987 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = month_of_birth\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, PERSON.*\r\n\t\tfrom cdm.PERSON\r\n    where month_of_birth < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n\twhere month_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the month_of_birth field of the PERSON table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"PERSON","CDM_FIELD":"month_of_birth","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":869,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.283015 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = day_of_birth\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, PERSON.*\r\n\t\tfrom cdm.PERSON\r\n    where day_of_birth < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n\twhere day_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the day_of_birth field of the PERSON table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"PERSON","CDM_FIELD":"day_of_birth","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":870,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.355020 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = birth_datetime\r\nplausibleValueLow = '1850-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.birth_datetime' AS violating_field, PERSON.*\r\n\t\tfrom cdm.PERSON\r\n    where birth_datetime < '1850-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n\twhere birth_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the birth_datetime field of the PERSON table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"PERSON","CDM_FIELD":"birth_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":871,"FAILED":0},{"NUM_VIOLATED_ROWS":8,"PCT_VIOLATED_ROWS":0.0008,"EXECUTION_TIME":"0.298981 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.*\r\n\t\tfrom cdm.OBSERVATION_PERIOD\r\n    where observation_period_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n\twhere observation_period_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_start_date field of the OBSERVATION_PERIOD table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":872,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.304017 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.*\r\n\t\tfrom cdm.OBSERVATION_PERIOD\r\n    where observation_period_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n\twhere observation_period_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_end_date field of the OBSERVATION_PERIOD table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":873,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.271015 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.*\r\n\t\tfrom cdm.VISIT_OCCURRENCE\r\n    where visit_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere visit_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_date field of the VISIT_OCCURRENCE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":874,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.244980 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n\t\tfrom cdm.VISIT_OCCURRENCE\r\n    where visit_start_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere visit_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_datetime field of the VISIT_OCCURRENCE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":875,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.301984 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.*\r\n\t\tfrom cdm.VISIT_OCCURRENCE\r\n    where visit_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere visit_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_date field of the VISIT_OCCURRENCE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":876,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.243942 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n\t\tfrom cdm.VISIT_OCCURRENCE\r\n    where visit_end_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere visit_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_datetime field of the VISIT_OCCURRENCE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":877,"FAILED":0},{"NUM_VIOLATED_ROWS":8,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.223013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n\t\tfrom cdm.CONDITION_OCCURRENCE\r\n    where condition_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere condition_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_date field of the CONDITION_OCCURRENCE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":878,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.531026 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n\t\tfrom cdm.CONDITION_OCCURRENCE\r\n    where condition_start_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere condition_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_datetime field of the CONDITION_OCCURRENCE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":879,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.261051 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n\t\tfrom cdm.CONDITION_OCCURRENCE\r\n    where condition_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere condition_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_date field of the CONDITION_OCCURRENCE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":880,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.315016 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n\t\tfrom cdm.CONDITION_OCCURRENCE\r\n    where condition_end_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere condition_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_datetime field of the CONDITION_OCCURRENCE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":881,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.546996 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where drug_exposure_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere drug_exposure_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_date field of the DRUG_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":882,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.225012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where drug_exposure_start_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere drug_exposure_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_datetime field of the DRUG_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":883,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.218013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where drug_exposure_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere drug_exposure_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_date field of the DRUG_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":884,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199977 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where drug_exposure_end_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere drug_exposure_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_datetime field of the DRUG_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":885,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.185012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = verbatim_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where verbatim_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere verbatim_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the verbatim_end_date field of the DRUG_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"verbatim_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":886,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.249015 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = refills\r\nplausibleValueLow = 0\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where refills < 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere refills is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the refills field of the DRUG_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"refills","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":887,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.255013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = quantity\r\nplausibleValueLow = 0\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.quantity' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where quantity < 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere quantity is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the DRUG_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":888,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.316986 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = days_supply\r\nplausibleValueLow = 0\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, DRUG_EXPOSURE.*\r\n\t\tfrom cdm.DRUG_EXPOSURE\r\n    where days_supply < 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere days_supply is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the days_supply field of the DRUG_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"days_supply","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":889,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.436024 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n\t\tfrom cdm.PROCEDURE_OCCURRENCE\r\n    where procedure_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\twhere procedure_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_date field of the PROCEDURE_OCCURRENCE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":890,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.273983 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n\t\tfrom cdm.PROCEDURE_OCCURRENCE\r\n    where procedure_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\twhere procedure_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_datetime field of the PROCEDURE_OCCURRENCE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":891,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.442023 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = quantity\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.quantity' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n\t\tfrom cdm.PROCEDURE_OCCURRENCE\r\n    where quantity < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\twhere quantity is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the PROCEDURE_OCCURRENCE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":892,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.438991 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.*\r\n\t\tfrom cdm.DEVICE_EXPOSURE\r\n    where device_exposure_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere device_exposure_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_date field of the DEVICE_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":893,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.310016 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n\t\tfrom cdm.DEVICE_EXPOSURE\r\n    where device_exposure_start_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere device_exposure_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_datetime field of the DEVICE_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":894,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202993 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, DEVICE_EXPOSURE.*\r\n\t\tfrom cdm.DEVICE_EXPOSURE\r\n    where device_exposure_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere device_exposure_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_date field of the DEVICE_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":895,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.213010 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n\t\tfrom cdm.DEVICE_EXPOSURE\r\n    where device_exposure_end_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere device_exposure_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_datetime field of the DEVICE_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":896,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.205013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = quantity\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.quantity' AS violating_field, DEVICE_EXPOSURE.*\r\n\t\tfrom cdm.DEVICE_EXPOSURE\r\n    where quantity < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere quantity is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the DEVICE_EXPOSURE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":897,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.158008 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, MEASUREMENT.*\r\n\t\tfrom cdm.MEASUREMENT\r\n    where measurement_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n\twhere measurement_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the measurement_date field of the MEASUREMENT table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":898,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227941 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.*\r\n\t\tfrom cdm.VISIT_DETAIL\r\n    where visit_detail_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere visit_detail_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_date field of the VISIT_DETAIL table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":899,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.156007 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, VISIT_DETAIL.*\r\n\t\tfrom cdm.VISIT_DETAIL\r\n    where visit_detail_start_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere visit_detail_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_datetime field of the VISIT_DETAIL table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":900,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.175009 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.*\r\n\t\tfrom cdm.VISIT_DETAIL\r\n    where visit_detail_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere visit_detail_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_date field of the VISIT_DETAIL table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":901,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.176847 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, VISIT_DETAIL.*\r\n\t\tfrom cdm.VISIT_DETAIL\r\n    where visit_detail_end_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere visit_detail_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_datetime field of the VISIT_DETAIL table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":902,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.156006 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_date' AS violating_field, NOTE.*\r\n\t\tfrom cdm.NOTE\r\n    where note_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n\twhere note_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_date field of the NOTE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"NOTE","CDM_FIELD":"note_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":903,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.167011 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_datetime' AS violating_field, NOTE.*\r\n\t\tfrom cdm.NOTE\r\n    where note_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n\twhere note_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_datetime field of the NOTE table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"NOTE","CDM_FIELD":"note_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":904,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246017 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_datetime' AS violating_field, NOTE_NLP.*\r\n\t\tfrom cdm.NOTE_NLP\r\n    where nlp_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n\twhere nlp_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the nlp_datetime field of the NOTE_NLP table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"nlp_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":905,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.223979 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, OBSERVATION.*\r\n\t\tfrom cdm.OBSERVATION\r\n    where observation_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n\twhere observation_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_date field of the OBSERVATION table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":906,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.194051 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_datetime' AS violating_field, OBSERVATION.*\r\n\t\tfrom cdm.OBSERVATION\r\n    where observation_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n\twhere observation_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_datetime field of the OBSERVATION table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":907,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.208012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, SPECIMEN.*\r\n\t\tfrom cdm.SPECIMEN\r\n    where specimen_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n\twhere specimen_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_date field of the SPECIMEN table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":908,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.199014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_datetime\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_datetime' AS violating_field, SPECIMEN.*\r\n\t\tfrom cdm.SPECIMEN\r\n    where specimen_datetime < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n\twhere specimen_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_datetime field of the SPECIMEN table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":909,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.176030 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = quantity\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.quantity' AS violating_field, SPECIMEN.*\r\n\t\tfrom cdm.SPECIMEN\r\n    where quantity < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n\twhere quantity is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the SPECIMEN table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":910,"FAILED":0},{"QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_dispensing_fee\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_dispensing_fee' AS violating_field, COST.*\r\n\t\tfrom cdm.COST\r\n    where paid_dispensing_fee < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n\twhere paid_dispensing_fee is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the paid_dispensing_fee field of the COST table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"COST","CDM_FIELD":"paid_dispensing_fee","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: invalid input syntax for type numeric: \"1950-01-01\";\nAn error report has been created at  output/Flatiron/errors/FIELD_PLAUSIBLE_VALUE_LOW_COST_paid_dispensing_fee.txt","checkId":911,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = payer_plan_period_id\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.payer_plan_period_id' AS violating_field, COST.*\r\n\t\tfrom cdm.COST\r\n    where payer_plan_period_id < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n\twhere payer_plan_period_id is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the payer_plan_period_id field of the COST table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"COST","CDM_FIELD":"payer_plan_period_id","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: invalid input syntax for integer: \"1950-01-01\";\nAn error report has been created at  output/Flatiron/errors/FIELD_PLAUSIBLE_VALUE_LOW_COST_payer_plan_period_id.txt","checkId":912,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.243981 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.*\r\n\t\tfrom cdm.DRUG_ERA\r\n    where drug_era_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n\twhere drug_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_start_date field of the DRUG_ERA table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":913,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.185009 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_end_date' AS violating_field, DRUG_ERA.*\r\n\t\tfrom cdm.DRUG_ERA\r\n    where drug_era_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n\twhere drug_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_end_date field of the DRUG_ERA table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":914,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.240013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_exposure_count\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_exposure_count' AS violating_field, DRUG_ERA.*\r\n\t\tfrom cdm.DRUG_ERA\r\n    where drug_exposure_count < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n\twhere drug_exposure_count is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_count field of the DRUG_ERA table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_exposure_count","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":915,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.388985 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = gap_days\r\nplausibleValueLow = 0\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.gap_days' AS violating_field, DRUG_ERA.*\r\n\t\tfrom cdm.DRUG_ERA\r\n    where gap_days < 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n\twhere gap_days is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the gap_days field of the DRUG_ERA table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"gap_days","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":916,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.278014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_value\r\nplausibleValueLow = 0\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_value' AS violating_field, DOSE_ERA.*\r\n\t\tfrom cdm.DOSE_ERA\r\n    where dose_value < 0\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n\twhere dose_value is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_value field of the DOSE_ERA table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_value","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":917,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.313017 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.*\r\n\t\tfrom cdm.DOSE_ERA\r\n    where dose_era_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n\twhere dose_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_start_date field of the DOSE_ERA table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":918,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193010 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_end_date' AS violating_field, DOSE_ERA.*\r\n\t\tfrom cdm.DOSE_ERA\r\n    where dose_era_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n\twhere dose_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_end_date field of the DOSE_ERA table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":919,"FAILED":0},{"NUM_VIOLATED_ROWS":8,"PCT_VIOLATED_ROWS":0.0001,"EXECUTION_TIME":"0.204012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.*\r\n\t\tfrom cdm.CONDITION_ERA\r\n    where condition_era_start_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n\twhere condition_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_start_date field of the CONDITION_ERA table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":920,"FAILED":1},{"NUM_VIOLATED_ROWS":8,"PCT_VIOLATED_ROWS":0.0001,"EXECUTION_TIME":"0.204011 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_end_date\r\nplausibleValueLow = '1950-01-01'\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_end_date' AS violating_field, CONDITION_ERA.*\r\n\t\tfrom cdm.CONDITION_ERA\r\n    where condition_era_end_date < '1950-01-01'\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n\twhere condition_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_end_date field of the CONDITION_ERA table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":921,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.309985 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_LOW\r\nget number of records and the proportion to total number of eligible records that fall below this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_occurrence_count\r\nplausibleValueLow = 1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_occurrence_count' AS violating_field, CONDITION_ERA.*\r\n\t\tfrom cdm.CONDITION_ERA\r\n    where condition_occurrence_count < 1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n\twhere condition_occurrence_count is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_LOW","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_occurrence_count field of the CONDITION_ERA table less than @PLAUSIBLE_VALUE_LOW.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_occurrence_count","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":922,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.331017 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = year_of_birth\r\nplausibleValueHigh = YEAR(GETDATE())+1\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, PERSON.*\r\n    from cdm.PERSON\r\n    where year_of_birth > EXTRACT(YEAR FROM CURRENT_DATE)+1\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n  where year_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the year_of_birth field of the PERSON table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"PERSON","CDM_FIELD":"year_of_birth","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":923,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.669003 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = month_of_birth\r\nplausibleValueHigh = 12\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, PERSON.*\r\n    from cdm.PERSON\r\n    where month_of_birth > 12\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n  where month_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the month_of_birth field of the PERSON table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"PERSON","CDM_FIELD":"month_of_birth","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":924,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.313018 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = day_of_birth\r\nplausibleValueHigh = 31\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, PERSON.*\r\n    from cdm.PERSON\r\n    where day_of_birth > 31\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n  where day_of_birth is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the day_of_birth field of the PERSON table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"PERSON","CDM_FIELD":"day_of_birth","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":925,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.398990 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PERSON\r\ncdmFieldName = birth_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PERSON.birth_datetime' AS violating_field, PERSON.*\r\n    from cdm.PERSON\r\n    where birth_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PERSON\r\n  where birth_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the birth_datetime field of the PERSON table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"PERSON","CDM_FIELD":"birth_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":926,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.322014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    where observation_period_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n  where observation_period_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_start_date field of the OBSERVATION_PERIOD table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":927,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0.0001,"EXECUTION_TIME":"0.280980 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    where observation_period_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n  where observation_period_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_end_date field of the OBSERVATION_PERIOD table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":928,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    where visit_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n  where visit_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_date field of the VISIT_OCCURRENCE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":929,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210011 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    where visit_start_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n  where visit_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_datetime field of the VISIT_OCCURRENCE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":930,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    where visit_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n  where visit_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_date field of the VISIT_OCCURRENCE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":931,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226978 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    where visit_end_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n  where visit_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_datetime field of the VISIT_OCCURRENCE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":932,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.220009 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    where condition_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n  where condition_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_date field of the CONDITION_OCCURRENCE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":933,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.231015 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    where condition_start_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n  where condition_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_datetime field of the CONDITION_OCCURRENCE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":934,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226978 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    where condition_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n  where condition_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_date field of the CONDITION_OCCURRENCE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":935,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.219013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    where condition_end_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n  where condition_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_datetime field of the CONDITION_OCCURRENCE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":936,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.391023 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where drug_exposure_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where drug_exposure_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_date field of the DRUG_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":937,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.509991 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where drug_exposure_start_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where drug_exposure_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_datetime field of the DRUG_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":938,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.226013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where drug_exposure_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where drug_exposure_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_date field of the DRUG_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":939,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.282014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where drug_exposure_end_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where drug_exposure_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_datetime field of the DRUG_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":940,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.267978 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = verbatim_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where verbatim_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where verbatim_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the verbatim_end_date field of the DRUG_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"verbatim_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":941,"FAILED":0},{"NUM_VIOLATED_ROWS":27,"PCT_VIOLATED_ROWS":0.0001,"EXECUTION_TIME":"0.236011 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = refills\r\nplausibleValueHigh = 12\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where refills > 12\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where refills is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the refills field of the DRUG_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"refills","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":942,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.236013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = quantity\r\nplausibleValueHigh = 1095\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.quantity' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where quantity > 1095\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where quantity is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the DRUG_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"quantity","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":943,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.251980 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = days_supply\r\nplausibleValueHigh = 365\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    where days_supply > 365\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n  where days_supply is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the days_supply field of the DRUG_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"days_supply","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":944,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.307017 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    where procedure_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n  where procedure_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_date field of the PROCEDURE_OCCURRENCE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":945,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.398985 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    where procedure_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n  where procedure_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_datetime field of the PROCEDURE_OCCURRENCE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":946,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.302039 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    where device_exposure_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n  where device_exposure_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_date field of the DEVICE_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":947,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.381020 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    where device_exposure_start_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n  where device_exposure_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_datetime field of the DEVICE_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":948,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.246014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    where device_exposure_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n  where device_exposure_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_date field of the DEVICE_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":949,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.285015 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    where device_exposure_end_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n  where device_exposure_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_datetime field of the DEVICE_EXPOSURE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":950,"FAILED":0},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":7.2394e-008,"EXECUTION_TIME":"0.324017 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, MEASUREMENT.*\r\n    from cdm.MEASUREMENT\r\n    where measurement_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n  where measurement_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the measurement_date field of the MEASUREMENT table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":951,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.214010 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    where visit_detail_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n  where visit_detail_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_date field of the VISIT_DETAIL table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":952,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.403034 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    where visit_detail_start_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n  where visit_detail_start_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_datetime field of the VISIT_DETAIL table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":953,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.326986 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    where visit_detail_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n  where visit_detail_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_date field of the VISIT_DETAIL table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":954,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.354019 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    where visit_detail_end_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n  where visit_detail_end_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_datetime field of the VISIT_DETAIL table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":955,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.262016 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_date' AS violating_field, NOTE.*\r\n    from cdm.NOTE\r\n    where note_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n  where note_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_date field of the NOTE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"NOTE","CDM_FIELD":"note_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":956,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.274013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_datetime' AS violating_field, NOTE.*\r\n    from cdm.NOTE\r\n    where note_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n  where note_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_datetime field of the NOTE table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"NOTE","CDM_FIELD":"note_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":957,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.228014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_datetime' AS violating_field, NOTE_NLP.*\r\n    from cdm.NOTE_NLP\r\n    where nlp_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n  where nlp_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the nlp_datetime field of the NOTE_NLP table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"nlp_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":958,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.254012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, OBSERVATION.*\r\n    from cdm.OBSERVATION\r\n    where observation_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n  where observation_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_date field of the OBSERVATION table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":959,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.292982 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_datetime' AS violating_field, OBSERVATION.*\r\n    from cdm.OBSERVATION\r\n    where observation_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n  where observation_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_datetime field of the OBSERVATION table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":960,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.253029 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, SPECIMEN.*\r\n    from cdm.SPECIMEN\r\n    where specimen_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n  where specimen_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_date field of the SPECIMEN table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":961,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.220010 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_datetime\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_datetime' AS violating_field, SPECIMEN.*\r\n    from cdm.SPECIMEN\r\n    where specimen_datetime > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n  where specimen_datetime is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_datetime field of the SPECIMEN table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":962,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.341984 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_dispensing_fee\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_dispensing_fee' AS violating_field, COST.*\r\n    from cdm.COST\r\n    where paid_dispensing_fee > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n  where paid_dispensing_fee is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the paid_dispensing_fee field of the COST table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"COST","CDM_FIELD":"paid_dispensing_fee","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":963,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.322018 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = payer_plan_period_id\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.payer_plan_period_id' AS violating_field, COST.*\r\n    from cdm.COST\r\n    where payer_plan_period_id > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n  where payer_plan_period_id is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the payer_plan_period_id field of the COST table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"COST","CDM_FIELD":"payer_plan_period_id","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":964,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.279980 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.*\r\n    from cdm.DRUG_ERA\r\n    where drug_era_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n  where drug_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_start_date field of the DRUG_ERA table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":965,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.241012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_end_date' AS violating_field, DRUG_ERA.*\r\n    from cdm.DRUG_ERA\r\n    where drug_era_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n  where drug_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_end_date field of the DRUG_ERA table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":966,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.285014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.*\r\n    from cdm.DOSE_ERA\r\n    where dose_era_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n  where dose_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_start_date field of the DOSE_ERA table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":967,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.242982 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_end_date' AS violating_field, DOSE_ERA.*\r\n    from cdm.DOSE_ERA\r\n    where dose_era_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n  where dose_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_end_date field of the DOSE_ERA table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":968,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.311014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.*\r\n    from cdm.CONDITION_ERA\r\n    where condition_era_start_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n  where condition_era_start_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_start_date field of the CONDITION_ERA table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":969,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248011 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_VALUE_HIGH\r\nget number of records and the proportion to total number of eligible records that exceed this threshold\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_end_date\r\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_end_date' AS violating_field, CONDITION_ERA.*\r\n    from cdm.CONDITION_ERA\r\n    where condition_era_end_date > DATEADD(day,CAST(1 as int),CURRENT_DATE)\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n  where condition_era_end_date is not null\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_VALUE_HIGH","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_end_date field of the CONDITION_ERA table greater than @PLAUSIBLE_VALUE_HIGH.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":970,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.311984 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.OBSERVATION_PERIOD.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > observation_period_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_start_date field of the OBSERVATION_PERIOD that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":971,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\nplausibleTemporalAfterTableName = OBSERVATION_PERIOD\r\nplausibleTemporalAfterFieldName = OBSERVATION_PERIOD_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    \r\n    where OBSERVATION_PERIOD_START_DATE > observation_period_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_end_date field of the OBSERVATION_PERIOD that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":972,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.634000 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.VISIT_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > visit_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_date field of the VISIT_OCCURRENCE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":973,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.215012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.VISIT_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > visit_start_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_datetime field of the VISIT_OCCURRENCE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_start_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":974,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.217011 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\r\nplausibleTemporalAfterFieldName = VISIT_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    \r\n    where VISIT_START_DATE > visit_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_date field of the VISIT_OCCURRENCE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":975,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.237013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_datetime\r\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\r\nplausibleTemporalAfterFieldName = VISIT_START_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    \r\n    where VISIT_START_DATETIME > visit_end_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_datetime field of the VISIT_OCCURRENCE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_end_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":976,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.202976 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.CONDITION_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > condition_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_date field of the CONDITION_OCCURRENCE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":977,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198010 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.CONDITION_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > condition_start_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_datetime field of the CONDITION_OCCURRENCE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_start_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":978,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.189014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_date\r\nplausibleTemporalAfterTableName = CONDITION_OCCURRENCE\r\nplausibleTemporalAfterFieldName = CONDITION_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    \r\n    where CONDITION_START_DATE > condition_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_date field of the CONDITION_OCCURRENCE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":979,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.198011 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_datetime\r\nplausibleTemporalAfterTableName = CONDITION_OCCURRENCE\r\nplausibleTemporalAfterFieldName = CONDITION_START_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    \r\n    where CONDITION_START_DATETIME > condition_end_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_datetime field of the CONDITION_OCCURRENCE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_end_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":980,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.168976 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DRUG_EXPOSURE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > drug_exposure_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_date field of the DRUG_EXPOSURE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":981,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DRUG_EXPOSURE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > drug_exposure_start_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_datetime field of the DRUG_EXPOSURE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_start_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":982,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.169011 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\nplausibleTemporalAfterTableName = DRUG_EXPOSURE\r\nplausibleTemporalAfterFieldName = DRUG_EXPOSURE_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    \r\n    where DRUG_EXPOSURE_START_DATE > drug_exposure_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_date field of the DRUG_EXPOSURE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":983,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.294013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_datetime\r\nplausibleTemporalAfterTableName = DRUG_EXPOSURE\r\nplausibleTemporalAfterFieldName = DRUG_EXPOSURE_START_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    \r\n    where DRUG_EXPOSURE_START_DATETIME > drug_exposure_end_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_datetime field of the DRUG_EXPOSURE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_end_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":984,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.192974 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = verbatim_end_date\r\nplausibleTemporalAfterTableName = DRUG_EXPOSURE\r\nplausibleTemporalAfterFieldName = DRUG_EXPOSURE_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    \r\n    where DRUG_EXPOSURE_START_DATE > verbatim_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the verbatim_end_date field of the DRUG_EXPOSURE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"verbatim_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":985,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.194011 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.PROCEDURE_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > procedure_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_date field of the PROCEDURE_OCCURRENCE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":986,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.157029 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.PROCEDURE_OCCURRENCE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > procedure_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_datetime field of the PROCEDURE_OCCURRENCE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":987,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.216008 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DEVICE_EXPOSURE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > device_exposure_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_date field of the DEVICE_EXPOSURE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":988,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.252012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DEVICE_EXPOSURE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > device_exposure_start_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_datetime field of the DEVICE_EXPOSURE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_start_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":989,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.186009 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_date\r\nplausibleTemporalAfterTableName = DEVICE_EXPOSURE\r\nplausibleTemporalAfterFieldName = DEVICE_EXPOSURE_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    \r\n    where DEVICE_EXPOSURE_START_DATE > device_exposure_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_date field of the DEVICE_EXPOSURE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":990,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.272018 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_datetime\r\nplausibleTemporalAfterTableName = DEVICE_EXPOSURE\r\nplausibleTemporalAfterFieldName = DEVICE_EXPOSURE_START_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    \r\n    where DEVICE_EXPOSURE_START_DATETIME > device_exposure_end_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_datetime field of the DEVICE_EXPOSURE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_end_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":991,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.193012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = MEASUREMENT\r\ncdmFieldName = measurement_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, MEASUREMENT.*\r\n    from cdm.MEASUREMENT\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.MEASUREMENT.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > measurement_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.MEASUREMENT\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the measurement_date field of the MEASUREMENT that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"MEASUREMENT","CDM_FIELD":"measurement_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":992,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.294012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.VISIT_DETAIL.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > visit_detail_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_date field of the VISIT_DETAIL that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":993,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.321985 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.VISIT_DETAIL.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > visit_detail_start_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_datetime field of the VISIT_DETAIL that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_start_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":994,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.245010 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\r\nplausibleTemporalAfterFieldName = VISIT_DETAIL_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    \r\n\t\tjoin cdm.VISIT_OCCURRENCE\r\n\t\t\ton cdm.VISIT_DETAIL.person_id = cdm.VISIT_OCCURRENCE.person_id\r\n\t\t\r\n    where VISIT_DETAIL_START_DATE > visit_detail_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_date field of the VISIT_DETAIL that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":995,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_datetime\r\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\r\nplausibleTemporalAfterFieldName = VISIT_DETAIL_START_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    \r\n\t\tjoin cdm.VISIT_OCCURRENCE\r\n\t\t\ton cdm.VISIT_DETAIL.person_id = cdm.VISIT_OCCURRENCE.person_id\r\n\t\t\r\n    where VISIT_DETAIL_START_DATETIME > visit_detail_end_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_datetime field of the VISIT_DETAIL that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_end_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":996,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.200009 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_date' AS violating_field, NOTE.*\r\n    from cdm.NOTE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.NOTE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > note_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_date field of the NOTE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"NOTE","CDM_FIELD":"note_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":997,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210976 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE\r\ncdmFieldName = note_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE.note_datetime' AS violating_field, NOTE.*\r\n    from cdm.NOTE\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.NOTE.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > note_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_datetime field of the NOTE that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"NOTE","CDM_FIELD":"note_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":998,"FAILED":0},{"QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = NOTE_NLP\r\ncdmFieldName = nlp_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'NOTE_NLP.nlp_datetime' AS violating_field, NOTE_NLP.*\r\n    from cdm.NOTE_NLP\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.NOTE_NLP.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > nlp_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.NOTE_NLP\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the nlp_datetime field of the NOTE_NLP that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"NOTE_NLP","CDM_FIELD":"nlp_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: column note_nlp.person_id does not exist;\nAn error report has been created at  output/Flatiron/errors/FIELD_PLAUSIBLE_TEMPORAL_AFTER_NOTE_NLP_nlp_datetime.txt","checkId":999,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.212011 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, OBSERVATION.*\r\n    from cdm.OBSERVATION\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.OBSERVATION.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > observation_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_date field of the OBSERVATION that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1000,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.279982 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION\r\ncdmFieldName = observation_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION.observation_datetime' AS violating_field, OBSERVATION.*\r\n    from cdm.OBSERVATION\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.OBSERVATION.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > observation_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_datetime field of the OBSERVATION that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"OBSERVATION","CDM_FIELD":"observation_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1001,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.371019 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, SPECIMEN.*\r\n    from cdm.SPECIMEN\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.SPECIMEN.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > specimen_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_date field of the SPECIMEN that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1002,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.324014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = SPECIMEN\r\ncdmFieldName = specimen_datetime\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'SPECIMEN.specimen_datetime' AS violating_field, SPECIMEN.*\r\n    from cdm.SPECIMEN\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.SPECIMEN.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > specimen_datetime\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.SPECIMEN\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_datetime field of the SPECIMEN that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"SPECIMEN","CDM_FIELD":"specimen_datetime","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1003,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.500993 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PAYER_PLAN_PERIOD\r\ncdmFieldName = payer_plan_period_end_date\r\nplausibleTemporalAfterTableName = PAYER_PLAN_PERIOD\r\nplausibleTemporalAfterFieldName = PAYER_PLAN_PERIOD_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_end_date' AS violating_field, PAYER_PLAN_PERIOD.*\r\n    from cdm.PAYER_PLAN_PERIOD\r\n    \r\n    where PAYER_PLAN_PERIOD_START_DATE > payer_plan_period_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PAYER_PLAN_PERIOD\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the payer_plan_period_end_date field of the PAYER_PLAN_PERIOD that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"PAYER_PLAN_PERIOD","CDM_FIELD":"payer_plan_period_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1004,"FAILED":0},{"QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = paid_dispensing_fee\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.paid_dispensing_fee' AS violating_field, COST.*\r\n    from cdm.COST\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.COST.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > paid_dispensing_fee\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the paid_dispensing_fee field of the COST that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"COST","CDM_FIELD":"paid_dispensing_fee","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: column cost.person_id does not exist;\nAn error report has been created at  output/Flatiron/errors/FIELD_PLAUSIBLE_TEMPORAL_AFTER_COST_paid_dispensing_fee.txt","checkId":1005,"FAILED":1},{"QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = COST\r\ncdmFieldName = payer_plan_period_id\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'COST.payer_plan_period_id' AS violating_field, COST.*\r\n    from cdm.COST\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.COST.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > payer_plan_period_id\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.COST\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the payer_plan_period_id field of the COST that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"COST","CDM_FIELD":"payer_plan_period_id","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\njava.sql.SQLException: [Amazon](500310) Invalid operation: column cost.person_id does not exist;\nAn error report has been created at  output/Flatiron/errors/FIELD_PLAUSIBLE_TEMPORAL_AFTER_COST_payer_plan_period_id.txt","checkId":1006,"FAILED":1},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.292016 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.*\r\n    from cdm.DRUG_ERA\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DRUG_ERA.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > drug_era_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_start_date field of the DRUG_ERA that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1007,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.281979 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_end_date\r\nplausibleTemporalAfterTableName = DRUG_ERA\r\nplausibleTemporalAfterFieldName = DRUG_ERA_START_DATE\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_end_date' AS violating_field, DRUG_ERA.*\r\n    from cdm.DRUG_ERA\r\n    \r\n    where DRUG_ERA_START_DATE > drug_era_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_era_end_date field of the DRUG_ERA that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1008,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.336016 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.*\r\n    from cdm.DOSE_ERA\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DOSE_ERA.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > dose_era_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_start_date field of the DOSE_ERA that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1009,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.207013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_end_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_end_date' AS violating_field, DOSE_ERA.*\r\n    from cdm.DOSE_ERA\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.DOSE_ERA.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > dose_era_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the dose_era_end_date field of the DOSE_ERA that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1010,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.236978 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.*\r\n    from cdm.CONDITION_ERA\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.CONDITION_ERA.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > condition_era_start_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_start_date field of the CONDITION_ERA that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_start_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1011,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.286016 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_TEMPORAL_AFTER\r\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_end_date\r\nplausibleTemporalAfterTableName = PERSON\r\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\r\n**********/\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_end_date' AS violating_field, CONDITION_ERA.*\r\n    from cdm.CONDITION_ERA\r\n    \r\n\t\tjoin cdm.PERSON\r\n\t\t\ton cdm.CONDITION_ERA.person_id = cdm.PERSON.person_id\r\n\t\t\r\n    where BIRTH_DATETIME > condition_era_end_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_TEMPORAL_AFTER","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_era_end_date field of the CONDITION_ERA that occurs prior to the date in the @PLAUSIBLE_TEMPORAL_AFTER field of the @PLAUSIBLE_TEMPORAL_AFTER_TABLE table.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_end_date","SQL_FILE":"field_plausible_temporal_after.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1012,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.248982 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    join cdm.death on cdm.OBSERVATION_PERIOD.person_id = cdm.death.person_id\r\n    where observation_period_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the observation_period_start_date field of the OBSERVATION_PERIOD table that occurs after death.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1013,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.384022 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = OBSERVATION_PERIOD\r\ncdmFieldName = observation_period_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, OBSERVATION_PERIOD.*\r\n    from cdm.OBSERVATION_PERIOD\r\n    join cdm.death on cdm.OBSERVATION_PERIOD.person_id = cdm.death.person_id\r\n    where observation_period_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.OBSERVATION_PERIOD\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the observation_period_end_date field of the OBSERVATION_PERIOD table that occurs after death.","CDM_TABLE":"OBSERVATION_PERIOD","CDM_FIELD":"observation_period_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1014,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.260015 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    join cdm.death on cdm.VISIT_OCCURRENCE.person_id = cdm.death.person_id\r\n    where visit_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_start_date field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1015,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.286984 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    join cdm.death on cdm.VISIT_OCCURRENCE.person_id = cdm.death.person_id\r\n    where visit_start_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_start_datetime field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1016,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.232012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    join cdm.death on cdm.VISIT_OCCURRENCE.person_id = cdm.death.person_id\r\n    where visit_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_end_date field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1017,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.210009 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_OCCURRENCE\r\ncdmFieldName = visit_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, VISIT_OCCURRENCE.*\r\n    from cdm.VISIT_OCCURRENCE\r\n    join cdm.death on cdm.VISIT_OCCURRENCE.person_id = cdm.death.person_id\r\n    where visit_end_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_end_datetime field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE":"VISIT_OCCURRENCE","CDM_FIELD":"visit_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1018,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.231978 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    join cdm.death on cdm.CONDITION_OCCURRENCE.person_id = cdm.death.person_id\r\n    where condition_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_start_date field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1019,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.178008 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    join cdm.death on cdm.CONDITION_OCCURRENCE.person_id = cdm.death.person_id\r\n    where condition_start_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_start_datetime field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1020,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.251013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    join cdm.death on cdm.CONDITION_OCCURRENCE.person_id = cdm.death.person_id\r\n    where condition_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_end_date field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1021,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.185010 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_OCCURRENCE\r\ncdmFieldName = condition_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, CONDITION_OCCURRENCE.*\r\n    from cdm.CONDITION_OCCURRENCE\r\n    join cdm.death on cdm.CONDITION_OCCURRENCE.person_id = cdm.death.person_id\r\n    where condition_end_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_end_datetime field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE":"CONDITION_OCCURRENCE","CDM_FIELD":"condition_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1022,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.277982 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    join cdm.death on cdm.DRUG_EXPOSURE.person_id = cdm.death.person_id\r\n    where drug_exposure_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_start_date field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1023,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.238014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    join cdm.death on cdm.DRUG_EXPOSURE.person_id = cdm.death.person_id\r\n    where drug_exposure_start_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_start_datetime field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1024,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.304017 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    join cdm.death on cdm.DRUG_EXPOSURE.person_id = cdm.death.person_id\r\n    where drug_exposure_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_end_date field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1025,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.452025 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = drug_exposure_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    join cdm.death on cdm.DRUG_EXPOSURE.person_id = cdm.death.person_id\r\n    where drug_exposure_end_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_end_datetime field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"drug_exposure_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1026,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.203011 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_EXPOSURE\r\ncdmFieldName = verbatim_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, DRUG_EXPOSURE.*\r\n    from cdm.DRUG_EXPOSURE\r\n    join cdm.death on cdm.DRUG_EXPOSURE.person_id = cdm.death.person_id\r\n    where verbatim_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the verbatim_end_date field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE":"DRUG_EXPOSURE","CDM_FIELD":"verbatim_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1027,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.259981 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    join cdm.death on cdm.PROCEDURE_OCCURRENCE.person_id = cdm.death.person_id\r\n    where procedure_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the procedure_date field of the PROCEDURE_OCCURRENCE table that occurs after death.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1028,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = PROCEDURE_OCCURRENCE\r\ncdmFieldName = procedure_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, PROCEDURE_OCCURRENCE.*\r\n    from cdm.PROCEDURE_OCCURRENCE\r\n    join cdm.death on cdm.PROCEDURE_OCCURRENCE.person_id = cdm.death.person_id\r\n    where procedure_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.PROCEDURE_OCCURRENCE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the procedure_datetime field of the PROCEDURE_OCCURRENCE table that occurs after death.","CDM_TABLE":"PROCEDURE_OCCURRENCE","CDM_FIELD":"procedure_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1029,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.236014 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    join cdm.death on cdm.DEVICE_EXPOSURE.person_id = cdm.death.person_id\r\n    where device_exposure_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_start_date field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1030,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.239982 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    join cdm.death on cdm.DEVICE_EXPOSURE.person_id = cdm.death.person_id\r\n    where device_exposure_start_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_start_datetime field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1031,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.289017 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    join cdm.death on cdm.DEVICE_EXPOSURE.person_id = cdm.death.person_id\r\n    where device_exposure_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_end_date field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1032,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.235015 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DEVICE_EXPOSURE\r\ncdmFieldName = device_exposure_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, DEVICE_EXPOSURE.*\r\n    from cdm.DEVICE_EXPOSURE\r\n    join cdm.death on cdm.DEVICE_EXPOSURE.person_id = cdm.death.person_id\r\n    where device_exposure_end_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DEVICE_EXPOSURE\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_end_datetime field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE":"DEVICE_EXPOSURE","CDM_FIELD":"device_exposure_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1033,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.231979 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    join cdm.death on cdm.VISIT_DETAIL.person_id = cdm.death.person_id\r\n    where visit_detail_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_start_date field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1034,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.267013 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_start_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    join cdm.death on cdm.VISIT_DETAIL.person_id = cdm.death.person_id\r\n    where visit_detail_start_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_start_datetime field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1035,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.241012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    join cdm.death on cdm.VISIT_DETAIL.person_id = cdm.death.person_id\r\n    where visit_detail_end_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_end_date field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1036,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.191975 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = VISIT_DETAIL\r\ncdmFieldName = visit_detail_end_datetime\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, VISIT_DETAIL.*\r\n    from cdm.VISIT_DETAIL\r\n    join cdm.death on cdm.VISIT_DETAIL.person_id = cdm.death.person_id\r\n    where visit_detail_end_datetime > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.VISIT_DETAIL\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_end_datetime field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE":"VISIT_DETAIL","CDM_FIELD":"visit_detail_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1037,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227010 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DRUG_ERA\r\ncdmFieldName = drug_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DRUG_ERA.drug_era_start_date' AS violating_field, DRUG_ERA.*\r\n    from cdm.DRUG_ERA\r\n    join cdm.death on cdm.DRUG_ERA.person_id = cdm.death.person_id\r\n    where drug_era_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DRUG_ERA\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_era_start_date field of the DRUG_ERA table that occurs after death.","CDM_TABLE":"DRUG_ERA","CDM_FIELD":"drug_era_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1038,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.227012 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = DOSE_ERA\r\ncdmFieldName = dose_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'DOSE_ERA.dose_era_start_date' AS violating_field, DOSE_ERA.*\r\n    from cdm.DOSE_ERA\r\n    join cdm.death on cdm.DOSE_ERA.person_id = cdm.death.person_id\r\n    where dose_era_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.DOSE_ERA\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the dose_era_start_date field of the DOSE_ERA table that occurs after death.","CDM_TABLE":"DOSE_ERA","CDM_FIELD":"dose_era_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1039,"FAILED":0},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"EXECUTION_TIME":"0.162009 secs","QUERY_TEXT":"\r\n/*********\r\nPLAUSIBLE_DURING_LIFE\r\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\r\n\r\nParameters used in this template:\r\ncdmDatabaseSchema = cdm\r\ncdmTableName = CONDITION_ERA\r\ncdmFieldName = condition_era_start_date\r\n**********/\r\n\r\n\r\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows\r\nFROM\r\n(\r\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\r\n\tFROM\r\n\t(\r\n\t\tSELECT 'CONDITION_ERA.condition_era_start_date' AS violating_field, CONDITION_ERA.*\r\n    from cdm.CONDITION_ERA\r\n    join cdm.death on cdm.CONDITION_ERA.person_id = cdm.death.person_id\r\n    where condition_era_start_date > death_date\r\n\t) violated_rows\r\n) violated_row_count,\r\n(\r\n\tSELECT COUNT(*) AS num_rows\r\n\tFROM cdm.CONDITION_ERA\r\n\twhere person_id in\r\n\t( select person_id from cdm.death )\r\n) denominator\r\n;\r\n","CHECK_NAME":"PLAUSIBLE_DURING_LIFE","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_era_start_date field of the CONDITION_ERA table that occurs after death.","CDM_TABLE":"CONDITION_ERA","CDM_FIELD":"condition_era_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","checkId":1040,"FAILED":0}],"Metadata":[{"CDM_SOURCE_NAME":"FlatIron - Multiple Myeloma Core Registry","CDM_SOURCE_ABBREVIATION":"FlatIron MM","CDM_HOLDER":"Janssen R&D","SOURCE_DESCRIPTION":"EMR data for over 9,000 patients from the United State. Contains both structured and unstructured data.","SOURCE_DOCUMENTATION_REFERENCE":"[For further information link to RWE site for Flatiron Multiple Myeloma.](https://catalog.rwe.jnj.com/index#jnjsearches?dataSetUri=%2Fdataset%2F7f67e26c-f0fa-4c51-817e-672a6f6ae4ea.xml)","CDM_ETL_REFERENCE":"https://sourcecode.jnj.com/projects/ITX-ASJ/repos/etl_flatiron_mm/browse","SOURCE_RELEASE_DATE":"2019-06-11","CDM_RELEASE_DATE":"2019-08-01","CDM_VERSION":"v5.3.1","VOCABULARY_VERSION":"v5.0 17-JUN-19"}],"Overview":{"countTotal":[1040],"countPassed":[869],"countFailed":[171],"percentPassed":[84],"percentFailed":[16],"countTotalPlausibility":[173],"countTotalConformance":[476],"countTotalCompleteness":[391],"countFailedPlausibility":[12],"countFailedConformance":[50],"countFailedCompleteness":[109],"countPassedPlausibility":[161],"countPassedConformance":[426],"countPassedCompleteness":[282]}}
